{"version":3,"sources":["./src/app/views/customer-user/add/add.component.html","./src/app/views/customer-user/customer-invoice/customer-invoice.component.html","./src/app/views/customer-user/customer-user.component.html","./src/app/views/customer-user/edit/edit.component.html","./src/app/views/customer-user/update-payment-received/update-payment-received.component.html","./src/app/views/customer-user/view/view.component.html","./src/app/shared/services/costumer.service.ts","./src/app/views/customer-user/add/add.component.ts","./src/app/views/customer-user/customer-invoice/customer-invoice.component.ts","./src/app/views/customer-user/customer-user-routing.module.ts","./src/app/views/customer-user/customer-user.component.ts","./src/app/views/customer-user/customer-user.module.ts","./src/app/views/customer-user/edit/edit.component.ts","./src/app/views/customer-user/update-payment-received/update-payment-received.component.ts","./src/app/views/customer-user/view/view.component.ts"],"names":[],"mappings":"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","file":"views-customer-user-customer-user-module.js","sourcesContent":["export default \"<div class=\\\"animated fadeIn\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n        <div class=\\\"col-sm-6\\\">\\n            <form class=\\\"card\\\" [formGroup]=\\\"addForm\\\" (ngSubmit)=\\\"submitAddForm()\\\" #formDir=\\\"ngForm\\\" novalidate>\\n                <div class=\\\"card-header\\\">Customer add</div>\\n                <div class=\\\"card-body p-4\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Store Name :</label>\\n                                <input formControlName=\\\"store_name\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\" placeholder=\\\"Store Name\\\">\\n                                <div class=\\\"error\\\"\\n                                          *ngIf=\\\"(submitted && addForm.controls.store_name.invalid) || addForm.controls.store_name.touched\\\">\\n                                          <div *ngIf=\\\"addForm.hasError('required','store_name')\\\" class=\\\"err-msg\\\">Store name is required.\\n                                          </div>\\n                                        </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Customer Full Name :</label>\\n                                <input formControlName=\\\"fullname\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\"\\n                                    placeholder=\\\"Customer Full Name\\\">\\n                                    <div class=\\\"error\\\"\\n                                          *ngIf=\\\"(submitted && addForm.controls.fullname.invalid) || addForm.controls.fullname.touched\\\">\\n                                          <div *ngIf=\\\"addForm.hasError('required','fullname')\\\" class=\\\"err-msg\\\">Customer full name is required.\\n                                          </div>\\n                                          <div *ngIf=\\\"!addForm.hasError('required','fullname') && addForm.hasError('pattern','fullname')\\\" class=\\\"err-msg\\\">Please enter valid customer full name.\\n                                          </div>\\n                                        </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Phone Number :</label>\\n                                <input mask='(000) 000-0000' formControlName=\\\"phone_no\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\" placeholder=\\\"Phone Number\\\">\\n                                <div class=\\\"error\\\"\\n                                          *ngIf=\\\"(submitted && addForm.controls.phone_no.invalid) || addForm.controls.phone_no.touched\\\">\\n                                          <div *ngIf=\\\"addForm.hasError('required','phone_no')\\\" class=\\\"err-msg\\\">Phone number is required.\\n                                          </div>\\n                                        </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Email Address :</label>\\n                                <input formControlName=\\\"email\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\" placeholder=\\\"Email Address\\\">\\n                                <div class=\\\"error\\\"\\n                                          *ngIf=\\\"(submitted && addForm.controls.email.invalid) || addForm.controls.email.touched\\\">\\n                                          <div *ngIf=\\\"addForm.hasError('required','email')\\\" class=\\\"err-msg\\\">Email is required.\\n                                          </div>\\n                                          <div *ngIf=\\\"!addForm.hasError('required','email') && addForm.hasError('pattern','email')\\\" class=\\\"err-msg\\\">Please enter valid email.\\n                                          </div>\\n                                        </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12 d-flex flex-wrap\\\">\\n                            <div class=\\\"form-group d-flex w-100 flex-wrap\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Billing Address :</label>\\n                                <textarea formControlName=\\\"billing_address\\\" class=\\\"form-control\\\" style=\\\"resize:none;width:100%;\\\" name=\\\"textarea-input\\\"\\n                                    rows=\\\"9\\\" placeholder=\\\"Billing Address\\\" spellcheck=\\\"false\\\"></textarea>\\n                                    <div class=\\\"error\\\"\\n                                          *ngIf=\\\"(submitted && addForm.controls.billing_address.invalid) || addForm.controls.billing_address.touched\\\">\\n                                          <div *ngIf=\\\"addForm.hasError('required','billing_address')\\\" class=\\\"err-msg\\\">Billing address is required.\\n                                          </div>\\n                                        </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12 d-flex flex-wrap\\\">\\n                            <div class=\\\"form-group d-flex w-100 flex-wrap\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Billing City :</label>\\n                                <input formControlName=\\\"billing_city\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\"\\n                                    placeholder=\\\"Billing City\\\">\\n                                    <div class=\\\"error\\\"\\n                                          *ngIf=\\\"(submitted && addForm.controls.billing_city.invalid) || addForm.controls.billing_city.touched\\\">\\n                                          <div *ngIf=\\\"addForm.hasError('required','billing_city')\\\" class=\\\"err-msg\\\">Billing city is required.\\n                                          </div>\\n                                        </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12 d-flex flex-wrap\\\">\\n                            <div class=\\\"form-group d-flex w-100 flex-wrap\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Billing State :</label>\\n                                    <input formControlName=\\\"billing_state\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\"\\n                                    placeholder=\\\"Billing State\\\">\\n                                    <div class=\\\"error\\\"\\n                                          *ngIf=\\\"(submitted && addForm.controls.billing_state.invalid) || addForm.controls.billing_state.touched\\\">\\n                                          <div *ngIf=\\\"addForm.hasError('required','billing_state')\\\" class=\\\"err-msg\\\">Billing state is required.\\n                                          </div>\\n                                        </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12 d-flex flex-wrap\\\">\\n                            <div class=\\\"form-group d-flex w-100 flex-wrap\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Billing Zipcode :</label>\\n                                    <input formControlName=\\\"billing_zipcode\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\"\\n                                    placeholder=\\\"Billing Zipcode\\\">\\n                                    <div class=\\\"error\\\"\\n                                          *ngIf=\\\"(submitted && addForm.controls.billing_zipcode.invalid) || addForm.controls.billing_zipcode.touched\\\">\\n                                          <div *ngIf=\\\"addForm.hasError('required','billing_zipcode')\\\" class=\\\"err-msg\\\">Billing zipcode is required.\\n                                          </div>\\n                                        </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12 d-flex flex-wrap\\\">\\n                            <div class=\\\"form-group d-flex w-100 flex-wrap\\\">\\n                                <input [(ngModel)]=\\\"checkSameBillingAddress\\\" [ngModelOptions]=\\\"{standalone: true}\\\" style=\\\"margin-right: 5px; margin-top: 5px\\\" (change)=\\\"changeCheckSameBillingAddress()\\\" type=\\\"checkbox\\\" id=\\\"vehicle1\\\" name=\\\"vehicle1\\\" value=\\\"Bike\\\">\\n                                <label for=\\\"vehicle1\\\"> Same as billing address</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12 d-flex flex-wrap\\\">\\n                            <div class=\\\"form-group d-flex w-100 flex-wrap\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Shipping Address :</label>\\n                                <textarea formControlName=\\\"shipping_address\\\" class=\\\"form-control\\\" style=\\\"resize:none;width:100%;\\\" name=\\\"textarea-input\\\"\\n                                    rows=\\\"9\\\" placeholder=\\\"Shipping Address\\\" spellcheck=\\\"false\\\"></textarea>\\n                                    <div class=\\\"error\\\"\\n                                          *ngIf=\\\"(submitted && addForm.controls.shipping_address.invalid) || addForm.controls.shipping_address.touched\\\">\\n                                          <div *ngIf=\\\"addForm.hasError('required','shipping_address')\\\" class=\\\"err-msg\\\">Shipping address is required.\\n                                          </div>\\n                                        </div>\\n\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12 d-flex flex-wrap\\\">\\n                            <div class=\\\"form-group d-flex w-100 flex-wrap\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Shipping City :</label>\\n                                    <input formControlName=\\\"shipping_city\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\"\\n                                    placeholder=\\\"Shipping City\\\">\\n                                    <div class=\\\"error\\\"\\n                                          *ngIf=\\\"(submitted && addForm.controls.shipping_city.invalid) || addForm.controls.shipping_city.touched\\\">\\n                                          <div *ngIf=\\\"addForm.hasError('required','shipping_city')\\\" class=\\\"err-msg\\\">Shipping city is required.\\n                                          </div>\\n                                        </div>\\n\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12 d-flex flex-wrap\\\">\\n                            <div class=\\\"form-group d-flex w-100 flex-wrap\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Shipping State :</label>\\n                                    <input formControlName=\\\"shipping_state\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\"\\n                                    placeholder=\\\"Shipping State\\\">\\n                                    <div class=\\\"error\\\"\\n                                          *ngIf=\\\"(submitted && addForm.controls.shipping_state.invalid) || addForm.controls.shipping_state.touched\\\">\\n                                          <div *ngIf=\\\"addForm.hasError('required','shipping_state')\\\" class=\\\"err-msg\\\">Shipping state is required.\\n                                          </div>\\n                                        </div>\\n\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12 d-flex flex-wrap\\\">\\n                            <div class=\\\"form-group d-flex w-100 flex-wrap\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Shipping Zipcode :</label>\\n                                    <input formControlName=\\\"shipping_zipcode\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\"\\n                                    placeholder=\\\"Shipping Zipcode\\\">\\n                                    <div class=\\\"error\\\"\\n                                          *ngIf=\\\"(submitted && addForm.controls.shipping_zipcode.invalid) || addForm.controls.shipping_zipcode.touched\\\">\\n                                          <div *ngIf=\\\"addForm.hasError('required','shipping_zipcode')\\\" class=\\\"err-msg\\\">Shipping zipcode is required.\\n                                          </div>\\n                                        </div>\\n\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Sales Tax ID :</label>\\n                                <input formControlName=\\\"sales_tax_id\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\" placeholder=\\\"Sales Tax ID\\\">\\n                                <div class=\\\"error\\\"\\n                                          *ngIf=\\\"(submitted && addForm.controls.sales_tax_id.invalid) || addForm.controls.sales_tax_id.touched\\\">\\n                                          <div *ngIf=\\\"addForm.hasError('required','sales_tax_id')\\\" class=\\\"err-msg\\\">Sales tax id is required.\\n                                          </div>\\n                                        </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Upload Sales Tax image or PDF Document :</label>\\n                                <input (change)=\\\"onTaxImgFileChange($event)\\\" formControlName=\\\"sales_tax_image\\\" class=\\\"form-control\\\" type=\\\"file\\\">\\n                                <div class=\\\"error\\\"\\n                                          *ngIf=\\\"(submitted && addForm.controls.sales_tax_image.invalid) || addForm.controls.sales_tax_image.touched\\\">\\n                                          <div *ngIf=\\\"addForm.hasError('required','sales_tax_image')\\\" class=\\\"err-msg\\\">Tax document file is required.\\n                                          </div>\\n                                          <div *ngIf=\\\"!addForm.hasError('required','sales_tax_image') && addForm.controls.sales_tax_image.invalid\\\" class=\\\"err-msg\\\">\\n                                            Please upload valid sales tax file.\\n                                          </div>\\n                                        </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12 d-flex align-items-end justify-content-between\\\">\\n                            <div class=\\\"form-group\\\" style=\\\"width:250px;max-width: 100%;\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Payment Threshold :</label>\\n                                <input formControlName=\\\"minumum_threshold\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"number\\\" placeholder=\\\"Minimum Amount\\\">\\n                                <div class=\\\"error\\\"\\n                                          *ngIf=\\\"(submitted && addForm.controls.minumum_threshold.invalid) || addForm.controls.minumum_threshold.touched\\\">\\n                                          <div *ngIf=\\\"addForm.hasError('required','minumum_threshold')\\\" class=\\\"err-msg\\\">Minimum amount is required.\\n                                          </div>\\n                                        </div>\\n                            </div>\\n                            <div class=\\\"form-group\\\" style=\\\"width:250px;max-width: 100%;\\\">\\n                                <input formControlName=\\\"maximum_threshold\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"number\\\" placeholder=\\\"Maximum Amount\\\">\\n                                <div class=\\\"error\\\"\\n                                          *ngIf=\\\"(submitted && addForm.controls.maximum_threshold.invalid) || addForm.controls.maximum_threshold.touched\\\">\\n                                          <div *ngIf=\\\"addForm.hasError('required','maximum_threshold')\\\" class=\\\"err-msg\\\">Maximum amount is required.\\n                                          </div>\\n                                        </div>\\n                            </div>\\n                        </div>\\n                        <!-- <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Upload Signed Terms & Condition Document :</label>\\n                                <input (change)=\\\"onTermAndConditionFileChange($event)\\\" formControlName=\\\"terms_and_condition\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"file\\\" placeholder=\\\"Enter Upload pdf\\n                                \\\">\\n                                <div class=\\\"error\\\"\\n                                          *ngIf=\\\"(submitted && addForm.controls.terms_and_condition.invalid) || addForm.controls.terms_and_condition.touched\\\">\\n                                          <div *ngIf=\\\"addForm.hasError('required','terms_and_condition')\\\" class=\\\"err-msg\\\">Term and condition document is required.\\n                                          </div>\\n                                          <div *ngIf=\\\"!addForm.hasError('required','terms_and_condition') && addForm.controls.terms_and_condition.invalid\\\" class=\\\"err-msg\\\">\\n                                            Please upload valid sales term and condition file.\\n                                          </div>\\n                                        </div>\\n                            </div>\\n                        </div> -->\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Select Sales User :</label>\\n                                <select [(ngModel)]=\\\"selectedSalesPerson\\\" formControlName=\\\"sales_person\\\"\\n                                    class=\\\"form-control\\\">\\n                                    <option disabled value=\\\"\\\">Select Sales User</option>\\n                                    <option *ngFor=\\\"let item of salesPersonList\\\" [value]=\\\"item.id\\\">\\n                                        {{item.full_name}}</option>\\n                                </select>\\n                                <div class=\\\"error\\\"\\n                                    *ngIf=\\\"(submitted && addForm.controls.sales_person.invalid) || addForm.controls.sales_person.touched\\\">\\n                                    <div *ngIf=\\\"addForm.hasError('required','sales_person')\\\" class=\\\"err-msg\\\">\\n                                        Sales person is required.\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row px-3\\\">\\n                            <div class=\\\"col-sm-12 mt-2\\\">\\n                                <button class=\\\"btn btn-md btn-dark mr-3\\\" type=\\\"submit\\\">Add</button>\\n                                <button class=\\\"btn btn-md btn-secondary\\\" type=\\\"button\\\" [routerLink]=\\\"['/customer-user']\\\">Cancel</button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"animated fadeIn\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                    <!-- <div class=\\\"mb-0 p-3 pull-left\\\" style=\\\"padding-bottom: 20px;\\\">\\n                        <span>\\n                            <h4><strong>Name :- </strong>Shane</h4>\\n                            <h4><strong>Phone Number :- </strong>Shane</h4>\\n                            <h4><strong>Email :- </strong>Shane</h4>\\n                        </span>\\n                    </div> -->\\n                    <div class=\\\"d-flex flex-wrap justify-content-between align-items-start mb-0 pt-3\\\">\\n                        <div class=\\\"customer-name\\\">\\n                            <strong>Name :</strong>\\n                            <span>{{orderData?.customer_name}}</span>\\n                        </div>\\n                        <div class=\\\"form-group mb-2\\\">\\n                            <button class=\\\"btn btn-md btn-dark\\\" [routerLink]=\\\"['/payment-history']\\\"\\n                                [queryParams]='{id: orderData?.customer_id}'>Payment History</button>\\n                            <!-- [routerLink]=\\\"['/customer-user/update-payment-received']\\\" -->\\n                            <button type=\\\"button\\\" [routerLink]=\\\"['/update-payment-received']\\\"\\n                                [queryParams]='{id: customerId,payment_date: orderData?.due_date}'\\n                                class=\\\"btn btn-md btn-success\\\">Receive Payment</button>\\n                            <button class=\\\"btn btn-md btn-secondary\\\" [routerLink]=\\\"['/customer-user']\\\">Back</button>\\n                            <!-- <button class=\\\"btn btn-md btn-dark\\\" [routerLink]=\\\"['/update-payment-received']\\\">Update payment Method </button> -->\\n                        </div>\\n                        <!-- <div class=\\\"form-group w-100 text-right\\\">\\n                            <button type=\\\"button\\\" [routerLink]=\\\"['/customer-user/update-payment-received']\\\"\\n                                [queryParams]='{id: customerId,payment_date: orderData?.due_date}'\\n                                class=\\\"btn btn-md btn-success\\\">Receive Payment</button>\\n                        </div> -->\\n                    </div>\\n                    <div class=\\\"customer-content customer-invoice-content\\\">\\n                        <ul class=\\\"row\\\">\\n                            <!-- <li class=\\\"\\\">\\n                                <strong>Name :</strong>\\n                                <span>{{orderData?.customer_name}}</span>\\n                            </li> -->\\n                            <li class=\\\"col-md-4 d-flex\\\">\\n                                <strong>Phone Number :</strong>\\n                                <span>{{orderData?.customer_number || \\\"-\\\"}}</span>\\n                            </li>\\n                            <li class=\\\"col-md-4 d-flex\\\">\\n                                <strong>Email :</strong>\\n                                <span>{{orderData?.customer_email || \\\"-\\\"}}</span>\\n                            </li>\\n                        </ul>\\n                    </div>\\n                    <div class=\\\"row justify-content-center product-box\\\">\\n                        <div class=\\\"col-md-4 col-sm-12\\\">\\n                            <div class=\\\"card text-white bg-primary\\\" style=\\\"min-height: 161px;border:0;\\\">\\n                                <div class=\\\"card-body pb-0\\\">\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-transparent p-0 float-right\\\">\\n                                    </button>\\n                                    <div class=\\\"text-value\\\">Total Amount of Order Placed </div>\\n                                    <div>Till Date</div>\\n                                    <h2>{{orderData?.total_amount ? (\\\"$ \\\"+(orderData?.total_amount | number : '1.2-2'))\\n                                        : \\\"$ 0.00\\\"}}</h2>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-md-4 col-sm-12\\\">\\n                            <div class=\\\"card text-white bg-danger\\\" style=\\\"min-height: 161px;border:0;\\\">\\n                                <div class=\\\"card-body pb-0\\\">\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-transparent p-0 float-right\\\">\\n                                    </button>\\n                                    <div class=\\\"text-value\\\">Amount Left to be Received </div>\\n                                    <div>Till Date</div>\\n                                    <h2 style=\\\"margin-top: 38px;\\\">{{orderData?.total_remaining_amount ? (\\\"$\\n                                        \\\"+(orderData?.total_remaining_amount | number : '1.2-2')) : \\\"$ 0.00\\\"}}</h2>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-md-4 col-sm-12\\\">\\n                            <div class=\\\"card text-white bg-success\\\" style=\\\"min-height: 161px;border:0;\\\">\\n                                <div class=\\\"card-body pb-0\\\">\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-transparent p-0 float-right\\\">\\n                                    </button>\\n                                    <div class=\\\"text-value\\\">Amount Received</div>\\n                                    <div>Till Date</div>\\n                                    <h2 style=\\\"margin-top: 35px;\\\">{{orderData?.total_amount_received ? (\\\"$\\n                                        \\\"+(orderData?.total_amount_received | number : '1.2-2')) : \\\"$ 0.00\\\"}}</h2>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n            <div class=\\\"card\\\">\\n                <!-- <div class=\\\"card-header\\\">Customer Invoice</div> -->\\n                <div class=\\\"card-header d-flex justify-content-between align-items-center\\\">Customer Invoice\\n                    <div class=\\\"pull-right\\\">\\n                        <!-- <div class=\\\"form-group dropdown\\\" style=\\\"float: right; margin-left: 10px;\\\"> -->\\n                        <button (click)=\\\"commonService.toggleDropDown()\\\" class=\\\"btn btn-md btn-primary dropbtn\\\"\\n                            type=\\\"button\\\"><i class=\\\"fa fa-file-export mr-2\\n                            \\\"></i>Export</button>\\n                        <div id=\\\"myDropdown\\\" class=\\\"dropdown-content\\\">\\n                            <a href=\\\"javascript:void(0)\\\" (click)=\\\"exportTable('xlsx')\\\"\\n                                style=\\\"font-size: small; text-decoration: none;\\\">Export to XLSX</a>\\n                            <!-- <a href=\\\"javascript:void(0)\\\" (click)=\\\"commonService.exportPDF(true, 10, 'customerInvoiceList');rerender();\\\">Export to PDF</a> -->\\n                            <!-- <a href=\\\"javascript:void(0)\\\" (click)=\\\"exportTable('pdf')\\\">Export to PDF</a> -->\\n                        </div>\\n                    </div>\\n                    <!-- </div> -->\\n                </div>\\n                <div class=\\\"card-body p-4\\\">\\n                    <form class=\\\"row justify-content-start align-items-center mb-0\\\">\\n                        <div class=\\\"col-md-3 col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label>From Invoice Date</label>\\n                                <input type=\\\"text\\\" placeholder=\\\"From Invoice Date\\\" class=\\\"form-control\\\"\\n                                    [(ngModel)]=\\\"selectedFromDate\\\" [ngModelOptions]=\\\"{standalone: true}\\\" bsDatepicker>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-md-3 col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label>To Invoice Date</label>\\n                                <input type=\\\"text\\\" placeholder=\\\"To Invoice Date\\\" class=\\\"form-control\\\"\\n                                    [(ngModel)]=\\\"selectedToDate\\\" [ngModelOptions]=\\\"{standalone: true}\\\" bsDatepicker>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-md-2 col-sm-12 pt-2\\\">\\n                            <button (click)=\\\"rerender()\\\" class=\\\"btn btn-md btn-dark mr-3\\\" type=\\\"button\\\">Filter</button>\\n                        </div>\\n                    </form><br>\\n                    <!-- <div class=\\\"form-group dropdown\\\" style=\\\"float: right; margin-left: 10px;\\\">\\n                        <button (click)=\\\"commonService.toggleDropDown()\\\" class=\\\"btn btn-md btn-primary dropbtn\\\"\\n                            type=\\\"button\\\"><i class=\\\"fa fa-file-export mr-2\\n                        \\\"></i>Export</button>\\n                        <div id=\\\"myDropdown\\\" class=\\\"dropdown-content\\\">\\n                            <a href=\\\"javascript:void(0)\\\" (click)=\\\"exportTable('xlsx')\\\"\\n                                style=\\\"font-size: small; text-decoration: none;\\\">Export to XLSX</a>\\n                        </div>\\n                    </div> -->\\n                    <perfect-scrollbar>\\n                        <div class=\\\"responsive-table rounded mb-4\\\">\\n                            <table datatable [dtOptions]=\\\"dtOptions\\\" [dtTrigger]=\\\"dtTrigger\\\"\\n                                class=\\\"data row-border hover table order-table border\\\" id=\\\"excel-table\\\">\\n                                <thead>\\n                                    <tr>\\n                                        <th>Order Date</th>\\n                                        <th>Invoice No</th>\\n                                        <th>Payment Due Date</th>\\n                                        <th>Order Amount</th>\\n                                        <th>Order Status</th>\\n                                        <th>Order Verification</th>\\n                                        <th>Payment Amount Received</th>\\n                                        <th>Open Balance</th>\\n                                        <th>Payment Status</th>\\n                                        <th>Salesman</th>\\n                                        <!-- <th>Action</th> -->\\n                                    </tr>\\n                                </thead>\\n                                <tbody>\\n                                    <tr *ngFor=\\\"let order of orderList;let i = index;\\\">\\n                                        <td>{{order.created_at ? (order.created_at | date: 'MM-dd-yyyy') : \\\"-\\\"}}</td>\\n                                        <td>\\n                                            <a class=\\\"text-dark mx-2\\\" [routerLink]=\\\"['/sales-management/order-invoice']\\\"\\n                                                [queryParams]='{id: order?.id,customer_id: order?.customer, fromProductOrder: true}'>\\n                                                <span class=\\\"anchor-tag\\\">\\n                                                    {{order.invoice_no || \\\"-\\\"}}\\n                                                </span>\\n                                            </a>\\n                                        </td>\\n                                        <td>{{order.due_date | date: 'MM-dd-yyyy' || \\\"-\\\"}}</td>\\n                                        <td>{{order.amount ? (\\\"$\\\"+(order.amount | number : '1.2-2')) : \\\"-\\\"}}</td>\\n                                        <td>{{order.status || \\\"-\\\"}}</td>\\n                                        <td>\\n                                            <span *ngIf=\\\"order.verfication_status\\\" class=\\\"text-success\\\">Verfied</span>\\n                                            <span *ngIf=\\\"!order.verfication_status\\\" class=\\\"text-danger\\\">\\n                                                Not Verfied\\n                                            </span>\\n                                        </td>\\n                                        <td>{{order.amount_recieved ? (\\\"$\\\"+(order.amount_recieved | number : '1.2-2')) :\\n                                            \\\"$0.00\\\"}}</td>\\n                                        <td>{{order.open_balance ? (\\\"$\\\"+(order.open_balance | number : '1.2-2')) :\\n                                            \\\"$0.00\\\"}}</td>\\n                                        <td>\\n                                            <span *ngIf=\\\"order?.payment_status == 'NOT_PAID'\\\" class=\\\"text-danger\\\">Not\\n                                                Paid</span>\\n                                            <span *ngIf=\\\"order?.payment_status == 'FULL'\\\"\\n                                                class=\\\"text-success\\\">Paid</span>\\n                                            <span *ngIf=\\\"order?.payment_status == 'PARTIAL'\\\">Partially Paid</span>\\n                                            <span *ngIf=\\\"order?.payment_status == null\\\">-</span>\\n                                        </td>\\n                                        <td>{{order.salesman || \\\"-\\\"}}</td>\\n                                        <!-- <td>\\n                                            <div class=\\\"d-flex align-items-center justify-content-center\\\">\\n                                                <a class=\\\"text-primary mx-2\\\"><i class=\\\"fa fa-eye\\\"\\n                                                        [routerLink]=\\\"['/order-management/order-invoice']\\\"\\n                                                        [queryParams]='{id: order?.id,customer_id: order?.customer}'></i></a> -->\\n                                        <!-- <a class=\\\"text-dark mx-2\\\" [routerLink]=\\\"['/customer-user/edit']\\\" [queryParams]='{id: order?.id}'><i\\n                                                    class=\\\"far fa-print\\\"></i></a>\\n                                            <a class=\\\"text-info mx-2\\\" href=\\\"javascript:void(0)\\\"><i\\n                                                    class=\\\"fas fa-file-invoice\\\"></i></a> -->\\n                                        <!-- <a [routerLink]=\\\"['/order-management/status-order']\\\"\\n                                                    [queryParams]='{id: order?.id,print: 1}' class=\\\"text-info mx-2\\\"\\n                                                    href=\\\"javascript:void(0)\\\"><i class=\\\"fa fa-print\\\"></i></a>\\n                                            </div>\\n                                        </td> -->\\n                                    </tr>\\n                                    <tr *ngIf=\\\"orderList?.length == 0\\\">\\n                                        <td colspan=\\\"11\\\" class=\\\"no-data-available\\\">No Data Found !</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </perfect-scrollbar>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"animated fadeIn\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-header\\\">Customer Users</div>\\n                <div class=\\\"card-body p-4\\\">\\n                    <div class=\\\"d-flex flex-wrap justify-content-end align-items-center\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <button class=\\\"btn btn-md btn-primary\\\" type=\\\"button\\\"\\n                                [routerLink]=\\\"['/customer-user/add']\\\"><i class=\\\"fa fa-plus mr-2\\n                        \\\"></i>Add Customer User</button>\\n                        </div>\\n                        <div class=\\\"form-group dropdown\\\" style=\\\"float: right; margin-left: 10px;\\\">\\n                            <button (click)=\\\"commonService.toggleDropDown()\\\" class=\\\"btn btn-md btn-primary dropbtn\\\"\\n                                type=\\\"button\\\"><i class=\\\"fa fa-file-export mr-2\\n                            \\\"></i>Export</button>\\n                            <div id=\\\"myDropdown\\\" class=\\\"dropdown-content\\\">\\n                                <a href=\\\"javascript:void(0)\\\" (click)=\\\"exportTable('xlsx')\\\">Export to XLSX</a>\\n                                <!-- <a href=\\\"javascript:void(0)\\\" (click)=\\\"commonService.exportPDF(true, 10, 'customerList');rerender();\\\">Export to PDF</a> -->\\n                                <!-- <a href=\\\"javascript:void(0)\\\" (click)=\\\"exportTable('pdf')\\\">Export to PDF</a> -->\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <perfect-scrollbar>\\n                        <div class=\\\"responsive-table rounded mb-4\\\">\\n                            <table style=\\\"width: 100%;\\\" datatable [dtOptions]=\\\"dtOptions\\\" [dtTrigger]=\\\"dtTrigger\\\"\\n                                class=\\\"data row-border hover table order-table border\\\" id=\\\"excel-table\\\">\\n                                <thead>\\n                                    <tr>\\n                                        <th>Store Name</th>\\n                                        <th>Customer Name</th>\\n                                        <th>Phone Number</th>\\n                                        <th>Email Address</th>\\n                                        <!-- <th>Sales <br> Tax id</th> -->\\n                                        <!-- <th>Credit <br> Balance</th> -->\\n                                        <th>Payment threshold</th>\\n                                        <!-- <th>Sign off <br> process</th> -->\\n                                        <th>Open <br> Balance</th>\\n                                        <th>No. of <br> orders placed</th>\\n                                        <th>Total <br> Order Amount</th>\\n                                        <th class=\\\"text-center\\\">Actions</th>\\n                                    </tr>\\n                                </thead>\\n                                <tbody>\\n                                    <tr *ngFor=\\\"let customer of customerList;let i = index;\\\">\\n                                        <td>\\n                                            <a class=\\\"text-primary\\\" [routerLink]=\\\"['/customer-user/customer-invoice']\\\"\\n                                                [queryParams]='{id: customer?.id}'>\\n                                                <span class=\\\"anchor-tag\\\">\\n                                                    {{customer.store_name || \\\"-\\\"}}\\n                                                </span>\\n                                            </a>\\n                                        </td>\\n                                        <td>\\n                                            <a class=\\\"text-primary mx-2\\\"\\n                                                [routerLink]=\\\"['/customer-user/customer-invoice']\\\"\\n                                                [queryParams]='{id: customer?.id}'>\\n                                                <span class=\\\"anchor-tag\\\">\\n                                                    {{customer.full_name || \\\"-\\\"}}\\n                                                </span>\\n                                            </a>\\n                                        </td>\\n                                        <td>{{customer.phone ? (customer.phone | mask: '(000) 000-0000') : \\\"-\\\"}}</td>\\n                                        <td>{{customer.email || \\\"-\\\"}}</td>\\n                                        <!-- <td>{{customer.sales_tax_id || \\\"-\\\"}}</td> -->\\n                                        <!-- <td>{{customer.credit_balance ? (\\\"$\\\"+(customer.credit_balance | number :\\n                                            '1.2-2')) : \\\"$0.00\\\"}}</td> -->\\n                                        <td>{{\\\"$\\\"+(customer.min_threshold)+\\\" - $\\\"+(customer.max_threshold)}}</td>\\n                                        <!-- <td>{{customer.sign_off_process || \\\"-\\\"}}</td> -->\\n                                        <td>{{customer.open_balance ? (\\\"$\\\"+(customer.open_balance | number : '1.2-2')) :\\n                                            \\\"$0.00\\\"}}</td>\\n                                        <td>{{customer.all_order || \\\"0\\\"}}</td>\\n                                        <td>{{customer.total_order_amount ? (\\\"$\\\"+(customer.total_order_amount | number :\\n                                            '1.2-2')) : \\\"$0.00\\\"}}</td>\\n                                        <td>\\n                                            <div class=\\\"d-flex align-items-center justify-content-center\\\">\\n                                                <!-- <a class=\\\"text-info mx-2\\\"\\n                                                    [routerLink]=\\\"['/customer-user/customer-invoice']\\\"\\n                                                    [queryParams]='{id: customer?.id}'><i\\n                                                        class=\\\"fas fa-file-invoice\\\"></i></a> -->\\n                                                <a class=\\\"text-primary mx-2\\\" [routerLink]=\\\"['/customer-user/view']\\\"\\n                                                    [queryParams]='{id: customer?.id}'><i class=\\\"fa fa-eye\\\"></i></a>\\n                                                <a class=\\\"text-dark mx-2\\\" [routerLink]=\\\"['/customer-user/edit']\\\"\\n                                                    [queryParams]='{id: customer?.id}'><i class=\\\"fa fa-pencil\\\"></i></a>\\n                                                <a class=\\\"text-danger mx-2\\\" href=\\\"javascript:void(0)\\\"\\n                                                    (click)=\\\"deleteModal.show();saveId(customer?.id);\\\"><i\\n                                                        class=\\\"far fa-trash-alt\\\"></i></a>\\n                                            </div>\\n                                        </td>\\n                                    </tr>\\n                                    <tr *ngIf=\\\"customerList?.length == 0\\\">\\n                                        <td colspan=\\\"12\\\" class=\\\"no-data-available\\\">No Data Found !</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </perfect-scrollbar>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<!-- delete modal -->\\n<div bsModal #deleteModal=\\\"bs-modal\\\" class=\\\"modal fade text-center\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"Delete\\\"\\n    aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-sm modal-dialog-centered\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-body py-4 text-center d-flex flex-column justify-content-center\\\">\\n                <h2 class=\\\"font-weight-bold mb-4 text-primary\\\">Delete</h2>\\n                <p class=\\\"mb-0\\\">Are You Sure You Want To Delete ?</p>\\n            </div>\\n            <div class=\\\"modal-footer justify-content-center\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"deleteModal.hide()\\\">Cancel</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deleteCustomer()\\\">Delete</button>\\n            </div>\\n        </div><!-- /.modal-content -->\\n    </div>\\n</div><!-- /.modal -->\";","export default \"<div class=\\\"animated fadeIn\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n        <div class=\\\"col-sm-6\\\">\\n            <form class=\\\"card\\\" [formGroup]=\\\"editForm\\\" (ngSubmit)=\\\"submitEditForm()\\\" #formDir=\\\"ngForm\\\" novalidate>\\n                <div class=\\\"card-header\\\">Customer Edit</div>\\n                <div class=\\\"card-body p-4\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Store Name :</label>\\n                                <input formControlName=\\\"store_name\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\"\\n                                    placeholder=\\\"Store Name*\\\">\\n                                <div class=\\\"error\\\"\\n                                    *ngIf=\\\"(submitted && editForm.controls.store_name.invalid) || editForm.controls.store_name.touched\\\">\\n                                    <div *ngIf=\\\"editForm.hasError('required','store_name')\\\" class=\\\"err-msg\\\">Store name\\n                                        is required.\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Customer Full Name :</label>\\n                                <input formControlName=\\\"fullname\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\"\\n                                    placeholder=\\\"Customer Full Name*\\\">\\n                                <div class=\\\"error\\\"\\n                                    *ngIf=\\\"(submitted && editForm.controls.fullname.invalid) || editForm.controls.fullname.touched\\\">\\n                                    <div *ngIf=\\\"editForm.hasError('required','fullname')\\\" class=\\\"err-msg\\\">Customer full\\n                                        name is required.\\n                                    </div>\\n                                    <div *ngIf=\\\"!editForm.hasError('required','fullname') && editForm.hasError('pattern','fullname')\\\"\\n                                        class=\\\"err-msg\\\">Please enter valid customer full name.\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Phone Number :</label>\\n                                <input mask='(000) 000-0000' formControlName=\\\"phone_no\\\" class=\\\"form-control\\\" id=\\\"name\\\"\\n                                    type=\\\"text\\\" placeholder=\\\"Phone Number\\\">\\n                                <div class=\\\"error\\\"\\n                                    *ngIf=\\\"(submitted && editForm.controls.phone_no.invalid) || editForm.controls.phone_no.touched\\\">\\n                                    <div *ngIf=\\\"editForm.hasError('required','phone_no')\\\" class=\\\"err-msg\\\">Phone number\\n                                        is required.\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Email Address :</label>\\n                                <input formControlName=\\\"email\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\"\\n                                    placeholder=\\\"Email Address\\\">\\n                                <div class=\\\"error\\\"\\n                                    *ngIf=\\\"(submitted && editForm.controls.email.invalid) || editForm.controls.email.touched\\\">\\n                                    <div *ngIf=\\\"editForm.hasError('required','email')\\\" class=\\\"err-msg\\\">Email is\\n                                        required.\\n                                    </div>\\n                                    <div *ngIf=\\\"!editForm.hasError('required','email') && editForm.hasError('pattern','email')\\\"\\n                                        class=\\\"err-msg\\\">Please enter valid email.\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12 d-flex flex-wrap\\\">\\n                            <div class=\\\"form-group d-flex w-100 flex-wrap\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Billing Address :</label>\\n                                <textarea formControlName=\\\"billing_address\\\" class=\\\"form-control\\\"\\n                                    style=\\\"resize:none;width:100%;\\\" name=\\\"textarea-input\\\" rows=\\\"9\\\"\\n                                    placeholder=\\\"Billing Address\\\" spellcheck=\\\"false\\\"></textarea>\\n                                <div class=\\\"error\\\"\\n                                    *ngIf=\\\"(submitted && editForm.controls.billing_address.invalid) || editForm.controls.billing_address.touched\\\">\\n                                    <div *ngIf=\\\"editForm.hasError('required','billing_address')\\\" class=\\\"err-msg\\\">Billing\\n                                        address is required.\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12 d-flex flex-wrap\\\">\\n                            <div class=\\\"form-group d-flex w-100 flex-wrap\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Billing City :</label>\\n                                <input formControlName=\\\"billing_city\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\"\\n                                    placeholder=\\\"Billing City\\\">\\n                                <div class=\\\"error\\\"\\n                                    *ngIf=\\\"(submitted && editForm.controls.billing_city.invalid) || editForm.controls.billing_city.touched\\\">\\n                                    <div *ngIf=\\\"editForm.hasError('required','billing_city')\\\" class=\\\"err-msg\\\">Billing\\n                                        city is required.\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12 d-flex flex-wrap\\\">\\n                            <div class=\\\"form-group d-flex w-100 flex-wrap\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Billing State :</label>\\n                                <input formControlName=\\\"billing_state\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\"\\n                                    placeholder=\\\"Billing State\\\">\\n                                <div class=\\\"error\\\"\\n                                    *ngIf=\\\"(submitted && editForm.controls.billing_state.invalid) || editForm.controls.billing_state.touched\\\">\\n                                    <div *ngIf=\\\"editForm.hasError('required','billing_state')\\\" class=\\\"err-msg\\\">Billing\\n                                        state is required.\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12 d-flex flex-wrap\\\">\\n                            <div class=\\\"form-group d-flex w-100 flex-wrap\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Billing Zipcode :</label>\\n                                <input formControlName=\\\"billing_zipcode\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\"\\n                                    placeholder=\\\"Billing Zipcode\\\">\\n                                <div class=\\\"error\\\"\\n                                    *ngIf=\\\"(submitted && editForm.controls.billing_zipcode.invalid) || editForm.controls.billing_zipcode.touched\\\">\\n                                    <div *ngIf=\\\"editForm.hasError('required','billing_zipcode')\\\" class=\\\"err-msg\\\">Billing\\n                                        zipcode is required.\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12 d-flex flex-wrap\\\">\\n                            <div class=\\\"form-group d-flex w-100 flex-wrap\\\">\\n                                <input [(ngModel)]=\\\"checkSameBillingAddress\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                                    style=\\\"margin-right: 5px; margin-top: 5px\\\"\\n                                    (change)=\\\"changeCheckSameBillingAddress()\\\" type=\\\"checkbox\\\" id=\\\"vehicle1\\\"\\n                                    name=\\\"vehicle1\\\" value=\\\"Bike\\\">\\n                                <label for=\\\"vehicle1\\\"> Same as billing address</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12 d-flex flex-wrap\\\">\\n                            <div class=\\\"form-group d-flex w-100 flex-wrap\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Shipping Address :</label>\\n                                <textarea formControlName=\\\"shipping_address\\\" class=\\\"form-control\\\"\\n                                    style=\\\"resize:none;width:100%;\\\" name=\\\"textarea-input\\\" rows=\\\"9\\\"\\n                                    placeholder=\\\"Shipping Address\\\" spellcheck=\\\"false\\\"></textarea>\\n                                <div class=\\\"error\\\"\\n                                    *ngIf=\\\"(submitted && editForm.controls.shipping_address.invalid) || editForm.controls.shipping_address.touched\\\">\\n                                    <div *ngIf=\\\"editForm.hasError('required','shipping_address')\\\" class=\\\"err-msg\\\">\\n                                        Shipping address is required.\\n                                    </div>\\n                                </div>\\n\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12 d-flex flex-wrap\\\">\\n                            <div class=\\\"form-group d-flex w-100 flex-wrap\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Shipping City :</label>\\n                                <input formControlName=\\\"shipping_city\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\"\\n                                    placeholder=\\\"Shipping City\\\">\\n                                <div class=\\\"error\\\"\\n                                    *ngIf=\\\"(submitted && editForm.controls.shipping_city.invalid) || editForm.controls.shipping_city.touched\\\">\\n                                    <div *ngIf=\\\"editForm.hasError('required','shipping_city')\\\" class=\\\"err-msg\\\">Shipping\\n                                        city is required.\\n                                    </div>\\n                                </div>\\n\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12 d-flex flex-wrap\\\">\\n                            <div class=\\\"form-group d-flex w-100 flex-wrap\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Shipping State :</label>\\n                                <input formControlName=\\\"shipping_state\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\"\\n                                    placeholder=\\\"Shipping State\\\">\\n                                <div class=\\\"error\\\"\\n                                    *ngIf=\\\"(submitted && editForm.controls.shipping_state.invalid) || editForm.controls.shipping_state.touched\\\">\\n                                    <div *ngIf=\\\"editForm.hasError('required','shipping_state')\\\" class=\\\"err-msg\\\">Shipping\\n                                        state is required.\\n                                    </div>\\n                                </div>\\n\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12 d-flex flex-wrap\\\">\\n                            <div class=\\\"form-group d-flex w-100 flex-wrap\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Shipping Zipcode :</label>\\n                                <input formControlName=\\\"shipping_zipcode\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\"\\n                                    placeholder=\\\"Shipping Zipcode\\\">\\n                                <div class=\\\"error\\\"\\n                                    *ngIf=\\\"(submitted && editForm.controls.shipping_zipcode.invalid) || editForm.controls.shipping_zipcode.touched\\\">\\n                                    <div *ngIf=\\\"editForm.hasError('required','shipping_zipcode')\\\" class=\\\"err-msg\\\">\\n                                        Shipping zipcode is required.\\n                                    </div>\\n                                </div>\\n\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Sales Tax ID :</label>\\n                                <input formControlName=\\\"sales_tax_id\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\"\\n                                    placeholder=\\\"Sales Tax ID\\\">\\n                                <div class=\\\"error\\\"\\n                                    *ngIf=\\\"(submitted && editForm.controls.sales_tax_id.invalid) || editForm.controls.sales_tax_id.touched\\\">\\n                                    <div *ngIf=\\\"editForm.hasError('required','sales_tax_id')\\\" class=\\\"err-msg\\\">Sales tax\\n                                        id is required.\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Upload Sales Tax image or PDF Document :</label>\\n                                <input (change)=\\\"onTaxImgFileChange($event)\\\" formControlName=\\\"sales_tax_image\\\"\\n                                    class=\\\"form-control\\\" type=\\\"file\\\">\\n                                <div class=\\\"error\\\"\\n                                    *ngIf=\\\"(submitted && editForm.controls.sales_tax_image.invalid) || editForm.controls.sales_tax_image.touched\\\">\\n                                    <div *ngIf=\\\"editForm.hasError('required','sales_tax_image')\\\" class=\\\"err-msg\\\">Tax\\n                                        document file is required.\\n                                    </div>\\n                                    <div *ngIf=\\\"!editForm.hasError('required','sales_tax_image') && editForm.controls.sales_tax_image.invalid\\\"\\n                                        class=\\\"err-msg\\\">\\n                                        Please upload valid sales tax file.\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12 d-flex align-items-end justify-content-between\\\">\\n                            <div class=\\\"form-group\\\" style=\\\"width:250px;max-width: 100%;\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Payment Threshold :</label>\\n                                <input formControlName=\\\"minumum_threshold\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"number\\\"\\n                                    placeholder=\\\"Minimum Amount\\\">\\n                                <div class=\\\"error\\\"\\n                                    *ngIf=\\\"(submitted && editForm.controls.minumum_threshold.invalid) || editForm.controls.minumum_threshold.touched\\\">\\n                                    <div *ngIf=\\\"editForm.hasError('required','minumum_threshold')\\\" class=\\\"err-msg\\\">\\n                                        Minimum amount is required.\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group\\\" style=\\\"width:250px;max-width: 100%;\\\">\\n                                <input formControlName=\\\"maximum_threshold\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"number\\\"\\n                                    placeholder=\\\"Maximum Amount\\\">\\n                                <div class=\\\"error\\\"\\n                                    *ngIf=\\\"(submitted && editForm.controls.maximum_threshold.invalid) || editForm.controls.maximum_threshold.touched\\\">\\n                                    <div *ngIf=\\\"editForm.hasError('required','maximum_threshold')\\\" class=\\\"err-msg\\\">\\n                                        Maximum amount is required.\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <!-- <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Upload Signed Terms & Condition Document :</label>\\n                                <input (change)=\\\"onTermAndConditionFileChange($event)\\\" formControlName=\\\"terms_and_condition\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"file\\\" placeholder=\\\"Enter Upload pdf\\n                                \\\">\\n                                <div class=\\\"error\\\"\\n                                          *ngIf=\\\"(submitted && editForm.controls.terms_and_condition.invalid) || editForm.controls.terms_and_condition.touched\\\">\\n                                          <div *ngIf=\\\"editForm.hasError('required','terms_and_condition')\\\" class=\\\"err-msg\\\">Term and condition document is required.\\n                                          </div>\\n                                          <div *ngIf=\\\"!editForm.hasError('required','terms_and_condition') && editForm.controls.terms_and_condition.invalid\\\" class=\\\"err-msg\\\">\\n                                            Please upload valid sales term and condition file.\\n                                          </div>\\n                                        </div>\\n                            </div>\\n                        </div> -->\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Select Sales User :</label>\\n                                <select [(ngModel)]=\\\"selectedSalesPerson\\\" formControlName=\\\"sales_person\\\"\\n                                    class=\\\"form-control\\\">\\n                                    <option disabled value=\\\"\\\">Select Sales User</option>\\n                                    <option *ngFor=\\\"let item of salesPersonList\\\" [value]=\\\"item.id\\\">\\n                                        {{item.full_name}}</option>\\n                                </select>\\n                                <div class=\\\"error\\\"\\n                                    *ngIf=\\\"(submitted && editForm.controls.sales_person.invalid) || editForm.controls.sales_person.touched\\\">\\n                                    <div *ngIf=\\\"editForm.hasError('required','sales_person')\\\" class=\\\"err-msg\\\">\\n                                        Sales person is required.\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row px-3\\\">\\n                            <div class=\\\"col-sm-12 mt-2\\\">\\n                                <button class=\\\"btn btn-md btn-dark mr-3\\\" type=\\\"submit\\\">Save</button>\\n                                <button class=\\\"btn btn-md btn-secondary\\\" type=\\\"button\\\"\\n                                    [routerLink]=\\\"['/customer-user']\\\">Cancel</button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"animated fadeIn\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-header d-flex justify-content-between align-items-center\\\">Payment Method\\n                    <div class=\\\"pull-right\\\">\\n                        <a (click)=\\\"goPreviousUrl()\\\" class=\\\"btn btn-md btn-secondary\\\" type=\\\"button\\\">Back</a>\\n                    </div>\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <form [formGroup]=\\\"addPaymentMethodForm\\\" (ngSubmit)=\\\"uncheckAll();\\\" #formDir=\\\"ngForm\\\" novalidate\\n                        class=\\\"customer-content sales-content\\\">\\n                        <ul class=\\\"d-flex flex-wrap\\\">\\n                            <li>\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"name\\\" class=\\\"w-100\\\">Payment Method</label>\\n                                    <select (change)=\\\"changeMode()\\\" [(ngModel)]=\\\"selectedMode\\\" formControlName=\\\"mode\\\"\\n                                        class=\\\"form-control\\\">\\n                                        <option value=\\\"CASH\\\">Cash</option>\\n                                        <option value=\\\"CHEQUE\\\">Check</option>\\n                                    </select>\\n                                    <div class=\\\"error\\\"\\n                                        *ngIf=\\\"(submittedMethodReceived && addPaymentMethodForm.controls.mode.invalid) || addPaymentMethodForm.controls.mode.touched\\\">\\n                                        <div *ngIf=\\\"addPaymentMethodForm.hasError('required','mode')\\\" class=\\\"err-msg\\\">\\n                                            Payment mode is required.\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </li>\\n                            <li *ngIf=\\\"(selectedMode == 'CHEQUE') || (selectedMode == 'ONLINE')\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"name\\\" class=\\\"w-100\\\">{{selectedMode == 'CHEQUE' ? \\\"Check No\\\" :\\n                                        \\\"Transaction No\\\"}}</label>\\n                                    <input formControlName=\\\"cheque_no\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\"\\n                                        placeholder=\\\"Enter {{selectedMode == 'CHEQUE' ? 'Check No' : 'Transaction No'}}\\\">\\n                                    <div class=\\\"error\\\"\\n                                        *ngIf=\\\"(submittedMethodReceived && addPaymentMethodForm.controls.cheque_no.invalid) || addPaymentMethodForm.controls.cheque_no.touched\\\">\\n                                        <div *ngIf=\\\"addPaymentMethodForm.hasError('required','cheque_no')\\\"\\n                                            class=\\\"err-msg\\\">{{selectedMode == 'CHEQUE' ? \\\"Check no\\\" : \\\"Transaction\\n                                            no\\\"}} is required.\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </li>\\n                            <!-- <li>\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"name\\\" class=\\\"w-100\\\">Bank Name :</label>\\n                                    <input formControlName=\\\"bank_name\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\"\\n                                        placeholder=\\\"Enter Bank Name\\\">\\n                                    <div class=\\\"error\\\"\\n                                        *ngIf=\\\"(submittedMethodReceived && addPaymentMethodForm.controls.bank_name.invalid) || addPaymentMethodForm.controls.bank_name.touched\\\">\\n                                        <div *ngIf=\\\"addPaymentMethodForm.hasError('required','bank_name')\\\"\\n                                            class=\\\"err-msg\\\">Bank name is required.\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </li> -->\\n                            <li>\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"name\\\" class=\\\"w-100\\\">Amount Received</label>\\n                                    <input [(ngModel)]=\\\"ammountReceivedValue\\\" (change)=\\\"onAmountChange();\\\"\\n                                        formControlName=\\\"ammount_received\\\" class=\\\"form-control quantity\\\" id=\\\"name\\\"\\n                                        type=\\\"number\\\" placeholder=\\\"Enter Amount Received\\\">\\n                                    <div class=\\\"error\\\"\\n                                        *ngIf=\\\"(submittedMethodReceived && addPaymentMethodForm.controls.ammount_received.invalid) || addPaymentMethodForm.controls.ammount_received.touched\\\">\\n                                        <div *ngIf=\\\"addPaymentMethodForm.hasError('required','ammount_received')\\\"\\n                                            class=\\\"err-msg\\\">Amount received is required.\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </li>\\n                            <li>\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"name\\\" class=\\\"w-100\\\">Image</label>\\n                                    <input (change)=\\\"onImageFileChange($event)\\\" formControlName=\\\"image\\\"\\n                                        class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"file\\\" placeholder=\\\"Enter Bank Name\\\">\\n                                    <div class=\\\"error\\\"\\n                                        *ngIf=\\\"(submittedMethodReceived && addPaymentMethodForm.controls.image.invalid) || addPaymentMethodForm.controls.image.touched\\\">\\n                                        <div *ngIf=\\\"addPaymentMethodForm.hasError('required','image')\\\" class=\\\"err-msg\\\">\\n                                            Image is required.\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </li>\\n                            <li class=\\\"w-100 d-block\\\">\\n                                <button class=\\\"btn btn-md btn-dark mr-3\\\" type=\\\"submit\\\">Submit</button>\\n                            </li>\\n                        </ul>\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n            <form class=\\\"card\\\">\\n                <div class=\\\"card-header d-flex justify-content-between align-items-center\\\">Outstanding Order\\n                    <div class=\\\"dropdown pull-right\\\">\\n                        <button (click)=\\\"commonService.toggleDropDown()\\\" class=\\\"btn btn-md btn-primary dropbtn\\\"\\n                            type=\\\"button\\\">\\n                            <i class=\\\"fa fa-file-export mr-2\\\"></i>\\n                            Export\\n                        </button>\\n                        <div id=\\\"myDropdown\\\" class=\\\"dropdown-content\\\">\\n                            <a href=\\\"javascript:void(0)\\\" (click)=\\\"exportCsv()\\\"\\n                                style=\\\"font-size: small; text-decoration: none;\\\">\\n                                Export to XLSX\\n                            </a>\\n                        </div>\\n                        <button *ngIf=\\\"showClearPaymentButton\\\" class=\\\"btn btn-md btn-dark\\\" type=\\\"button\\\"\\n                            (click)=\\\"submitAddPaymentMethodForm()\\\">Clear\\n                            Payment</button>\\n                    </div>\\n                </div>\\n                <div class=\\\"card-body p-4\\\">\\n                    <div class=\\\"d-flex flex-wrap justify-content-end align-items-start mb-0\\\">\\n                        <!-- <div class=\\\"form-group\\\">\\n                            <button class=\\\"btn btn-md btn-primary\\\" type=\\\"button\\\" (click)=\\\"addmodal.show()\\\"><i class=\\\"fa fa-plus mr-2\\n                        \\\"></i>Add Payment</button>\\n                        </div> -->\\n                        <!-- <div *ngIf=\\\"showPaymentMessage\\\" class=\\\"row\\\">\\n                            <div class=\\\"col-sm-12 py-3 text-center\\\">\\n                                <button class=\\\"btn btn-md btn-dark mr-3\\\" type=\\\"button\\\" (click)=\\\"submitPayment()\\\">Clear\\n                                    Payment</button>\\n                            </div>\\n                        </div> -->\\n                    </div>\\n                    <perfect-scrollbar>\\n                        <div class=\\\"responsive-table rounded mb-4\\\">\\n                            <table datatable [dtOptions]=\\\"dtOptions\\\" [dtTrigger]=\\\"dtTrigger\\\" datatable\\n                                class=\\\"data row-border hover table order-table border\\\">\\n                                <thead>\\n                                    <tr>\\n                                        <th>Select</th>\\n                                        <th>Order Date</th>\\n                                        <th>Invoice No#</th>\\n                                        <th>Payment Due<br>Date</th>\\n                                        <th>Order Amount</th>\\n                                        <th>Payment<br>Amount<br>Received</th>\\n                                        <th>Open<br>Balance</th>\\n                                        <th>Payment</th>\\n                                    </tr>\\n                                </thead>\\n                                <tbody>\\n                                    <tr *ngFor=\\\"let order of orderList;let i = index;\\\">\\n                                        <td>\\n                                            <div class=\\\"custom-control custom-checkbox\\\">\\n                                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\"\\n                                                    (click)=\\\"order.checked=!order.checked; calculateAmountReceived(order.checked, order.open_balance*1, i)\\\"\\n                                                    [id]=\\\"'checkbox' + order.id\\\" [checked]=\\\"order.checked\\\"\\n                                                    [disabled]=\\\"order.disabled\\\">\\n                                                <label class=\\\"custom-control-label\\\"\\n                                                    [for]=\\\"'checkbox' + order.id\\\"></label>\\n                                            </div>\\n                                        </td>\\n                                        <td>{{order.created_at ? (order.created_at | date: 'MM-dd-yyyy') : \\\"-\\\"}}</td>\\n                                        <td>{{order.invoice_no || \\\"-\\\"}}</td>\\n                                        <td>{{order.due_date ? (order.due_date | date: 'MM-dd-yyyy') : \\\"-\\\"}}</td>\\n                                        <td>\\n                                            {{order.amount ? (\\\"$\\\"+(order.amount | number : '1.2-2')) : \\\"$0.00\\\"}}\\n                                        </td>\\n                                        <td>\\n                                            {{order.amount_recieved ? (\\\"$\\\"+(order.amount_recieved | number : '1.2-2')) :\\n                                            \\\"$0.00\\\"}}\\n                                        </td>\\n                                        <td>\\n                                            {{order.open_balance ? (\\\"$\\\"+(order.open_balance | number : '1.2-2')) :\\n                                            \\\"$0.00\\\"}}\\n                                        </td>\\n                                        <td>\\n                                            <!-- <input style=\\\"width: 90px;\\\" class=\\\"form-control quantity\\\" #paymentValue\\n                                                type=\\\"number\\\" [value]=\\\"order?.payment\\\"\\n                                                (change)=\\\"changePaymentValue(paymentValue.value,order, i)\\\"\\n                                                (keyup)=\\\"paymentValue.value > order.remaining_amount ? paymentValue.value = order.remaining_amount : paymentValue.value\\\"> -->\\n                                            <!-- <input style=\\\"width: 90px;\\\" class=\\\"form-control quantity\\\" type=\\\"number\\\"\\n                                                [value]=\\\"order?.payment\\\"> -->\\n                                            {{order.payment ? (\\\"$\\\"+(order.payment | number : '1.2-2')) : \\\"$0.00\\\"}}\\n                                        </td>\\n\\n                                    </tr>\\n                                    <tr *ngIf=\\\"orderList?.length == 0\\\">\\n                                        <td colspan=\\\"7\\\" class=\\\"no-data-available\\\">No Data Found !</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </perfect-scrollbar>\\n                    <div class=\\\"calcuted-data\\\">\\n                        <ul class=\\\"justify-content-end\\\">\\n                            <!-- <li>\\n                                <strong>Amount to Apply </strong>\\n                                <span>{{\\\"$ \\\"+(amountToApply | number : '1.2-2')}}</span>\\n                            </li> -->\\n                            <li style=\\\"float: left;\\\" *ngIf=\\\"showPaymentMessage\\\">\\n                                <strong>{{amountRecievedMessage}}</strong>\\n                                <span>{{calculatedReceivedAmount}}</span>\\n                            </li>\\n                            <li>\\n                                <strong>Outstanding Amount</strong>\\n                                <span>{{\\\"$ \\\"+(orderData?.total_remaining_amount | number :\\n                                    '1.2-2')}}</span>\\n                            </li>\\n                        </ul>\\n                    </div>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\\n\\n<div bsModal #addmodal=\\\"bs-modal\\\" class=\\\"modal fade text-center\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"Delete\\\"\\n    aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-md modal-dialog-centered\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-body py-4 text-center d-flex flex-column justify-content-center\\\">\\n                <h2 class=\\\"font-weight-bold mb-4 text-primary\\\">Outstanding Order</h2>\\n                <form class=\\\"d-inline-block w-100 text-left\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Payment:</label>\\n                                <input class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\" placeholder=\\\"Payment\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"modal-footer justify-content-start flex-wrap w-100 pb-0\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-dark mr-3\\\">ADD</button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"editmodal.hide()\\\">Cancel</button>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div bsModal #editmodal=\\\"bs-modal\\\" class=\\\"modal fade text-center\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"Delete\\\"\\n    aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-md modal-dialog-centered\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-body py-4 text-center d-flex flex-column justify-content-center\\\">\\n                <h2 class=\\\"font-weight-bold mb-4 text-primary\\\">Outstanding Order</h2>\\n                <form class=\\\"d-inline-block w-100 text-left\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Payment:</label>\\n                                <input class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\" placeholder=\\\"Payment\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"modal-footer justify-content-start flex-wrap w-100 pb-0\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-dark mr-3\\\">Edit</button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"editmodal.hide()\\\">Cancel</button>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n<!-- delete modal -->\\n<div bsModal #deleteModal=\\\"bs-modal\\\" class=\\\"modal fade text-center\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"Delete\\\"\\n    aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-sm modal-dialog-centered\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-body py-4 text-center d-flex flex-column justify-content-center\\\">\\n                <h2 class=\\\"font-weight-bold mb-4 text-primary\\\">Delete</h2>\\n                <p class=\\\"mb-0\\\">Are You Sure You Want To Delete ?</p>\\n            </div>\\n            <div class=\\\"modal-footer justify-content-center\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"deleteModal.hide()\\\">Cancel</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger\\\">Delete</button>\\n            </div>\\n        </div><!-- /.modal-content -->\\n    </div>\\n</div><!-- /.modal -->\";","export default \"<div class=\\\"animated fadeIn\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n            <div class=\\\"card\\\">\\n                <!-- <div class=\\\"card-header\\\">Customer View</div> -->\\n                <div class=\\\"card-header d-flex justify-content-between align-items-center\\\">Customer View\\n                    <div class=\\\"pull-right\\\">\\n                        <a [routerLink]=\\\"['/customer-user']\\\"\\n                            class=\\\"btn btn-md btn-secondary\\\" type=\\\"button\\\">Back</a>\\n                    </div>\\n                </div>\\n                <div class=\\\"card-body pt-2 pb-2 pl-4 pr-4\\\">\\n                    <div class=\\\"responsive-table user-view scan-view-table customer-view\\\">\\n                        <table class=\\\"table\\\">\\n                            <tbody>\\n                                <tr>\\n                                    <td><strong>Store Name:</strong></td>\\n                                    <td>{{customerData?.store_name}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><strong>Customer Full Name:</strong></td>\\n                                    <td>{{customerData?.full_name}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><strong>Email :</strong></td>\\n                                    <td>{{customerData?.email}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><strong>Phone Number:</strong></td>\\n                                    <td>{{customerData?.phone | mask: '(000) 000-0000'}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><strong>Billing address:</strong></td>\\n                                    <td>{{customerData?.billing_address+\\\", \\\"+customerData?.billing_city+\\\", \\\"+customerData?.billing_state+\\\" \\\"+customerData?.billing_zipcode}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><strong>Shipping address:</strong></td>\\n                                    <td>{{customerData?.shipping_address+\\\", \\\"+customerData?.shipping_city+\\\", \\\"+customerData?.shipping_state+\\\" \\\"+customerData?.shipping_zipcode}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><strong>Sales Tax ID:</strong></td>\\n                                    <td>{{customerData?.sales_tax_id}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><strong>Sales Tax Document:</strong></td>\\n                                    <td><a *ngIf=\\\"customerData?.sales_tax_image != null && customerData?.sales_tax_image != ''\\\" href=\\\"{{baseUrl + customerData?.sales_tax_image}}\\\" target=\\\"_blank\\\">pdfdocument</a></td>\\n                                </tr>\\n                                <tr>\\n                                    <td><strong>Payment Threshold :</strong></td>\\n                                    <td><span>{{customerData?.min_threshold || customerData?.min_threshold == 0 ? (\\\"$\\\"+customerData?.min_threshold+\\\" - \\\") : \\\"-\\\"}}</span><span>{{customerData?.max_threshold || customerData?.max_threshold == 0 ? (\\\"$\\\"+customerData?.max_threshold) : \\\"-\\\"}}</span></td>\\n                                </tr>\\n                                <!-- <tr>\\n                                    <td><strong>Upload Signed Terms & Condition Document :</strong></td>\\n                                    <td><a href=\\\"{{baseUrl + customerData?.terms}}\\\" target=\\\"_blank\\\">pdfdocument</a></td>\\n                                </tr> -->\\n                            </tbody>\\n                        </table>\\n                        <table>\\n                        </table>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\n@Injectable()\nexport class CostumerService {\n\n  constructor(\n    private http: HttpClient,\n  ) {}\n\n  customerlist(data): Observable<any> {\n    return this.http.post<any>(`${environment.base_url}/customerlist/`, data);\n  }\n\n  createcustomer(data): Observable<any> {\n    return this.http.post<any>(`${environment.base_url}/createcustomer/`, data);\n  }\n\n  customereditprofile(data,id): Observable<any> {\n    return this.http.put<any>(`${environment.base_url}/customereditprofile/${id}`, data);\n  }\n\n  getCustomer(id) : Observable<any>{\n    return this.http.get<any>(`${environment.base_url}/customer/${id}/`);\n  }\n\n  deleteCustomer(id): Observable<any> {\n    return this.http.delete<any>(`${environment.base_url}/deletecustomer/${id}/`);\n  }\n\n  displayorder(data): Observable<any> {\n    return this.http.post<any>(`${environment.base_url}/orderdisplay/displayorder/`,data);\n  }\n\n  userlist(data): Observable<any> {\n    return this.http.post<any>(`${environment.base_url}/user/salesuser/`,data);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CostumerService } from '../../../shared/services/costumer.service';\nimport { Validations } from '../../../shared/validators/Validations';\nimport { RxwebValidators } from \"@rxweb/reactive-form-validators\";\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n})\nexport class AddComponent implements OnInit {\n\n  addForm: FormGroup;\n  submitted: boolean = false;\n  checkSameBillingAddress: boolean = false;\n  sales_tax_imageUrl: string = '';\n  terms_and_conditionUrl: string = '';\n  selectedSalesPerson: string = '';\n  salesPersonList: any;\n\n  constructor(\n    private titleService: Title,\n    private costumerService: CostumerService,\n    private toastr: ToastrService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {\n\n  }\n  ngOnInit(): void {\n    this.titleService.setTitle(\"Add Customer\");\n\n    this.addForm = new FormGroup({\n      store_name: new FormControl('', [\n        Validators.required,\n        Validators.pattern(Validations.whitespace)\n      ]),\n      fullname: new FormControl('', [\n        Validators.required,\n        Validators.pattern(Validations.whitespace)\n      ]),\n      phone_no: new FormControl('', [\n        Validators.required\n      ]),\n      email: new FormControl('', [\n        Validators.required,\n        Validators.pattern(Validations.email_pattern)\n      ]),\n      billing_address: new FormControl('', [\n        Validators.required\n      ]),\n      billing_city: new FormControl('', [\n        Validators.required\n      ]),\n      billing_state: new FormControl('', [\n        Validators.required\n      ]),\n      billing_zipcode: new FormControl('', [\n        Validators.required\n      ]),\n      shipping_address: new FormControl('', [\n        Validators.required\n      ]),\n      shipping_city: new FormControl('', [\n        Validators.required\n      ]),\n      shipping_state: new FormControl('', [\n        Validators.required\n      ]),\n      shipping_zipcode: new FormControl('', [\n        Validators.required\n      ]),\n      sales_tax_id: new FormControl('', [\n        //Validators.required\n      ]),\n      minumum_threshold: new FormControl('', [\n        Validators.required\n      ]),\n      maximum_threshold: new FormControl('', [\n        Validators.required\n      ]),\n      sales_tax_image: new FormControl('', [\n        // Validators.required,\n        // RxwebValidators.extension({extensions:[\"png\",\"jpg\",\"jpeg\",\"emf\",\"jpe\",\"jfif\",\"bmp\",\"gif\",\"wmf\",\"dib\",\"tif\",\"tiff\",'pdf']\n        // })\n      ]),\n      sales_tax_image_Source: new FormControl('', [\n        //Validators.required\n      ]),\n      terms_and_condition: new FormControl('', [\n        // Validators.required,\n        // RxwebValidators.extension({extensions:[\"png\",\"jpg\",\"jpeg\",\"emf\",\"jpe\",\"jfif\",\"bmp\",\"gif\",\"wmf\",\"dib\",\"tif\",\"tiff\",'pdf']\n        // })\n      ]),\n      terms_and_condition_Source: new FormControl('', [\n        //Validators.required\n      ]),\n      sales_person: new FormControl('', [Validators.required])\n    });\n\n    this.getSalesUsers();\n  }\n\n  getSalesUsers() {\n    var formData = new FormData();\n    formData.append(\"page\", \"1\");\n    formData.append(\"limit\", \"10000\");\n\n    this.costumerService.userlist(formData).subscribe(response => {\n      let resData = JSON.parse(JSON.stringify(response));\n\n      if (resData.status_code == 200) {\n        this.salesPersonList = resData.data;\n      } else {\n        this.toastr.error('', resData.message);\n      }\n    },\n      err => {\n        this.toastr.error('', err.error.message);\n      });\n  }\n\n  onTaxImgFileChange(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      if (file) {\n        this.addForm.patchValue({\n          sales_tax_image_Source: file\n        });\n        const reader = new FileReader();\n        reader.onloadend = (event: any) => {\n          this.sales_tax_imageUrl = event.target.result;\n        };\n        reader.readAsDataURL(event.target.files[0]);\n      }\n    }\n  }\n\n  onTermAndConditionFileChange(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      if (file) {\n        this.addForm.patchValue({\n          terms_and_condition_Source: file\n        });\n        const reader = new FileReader();\n        reader.onloadend = (event: any) => {\n          this.terms_and_conditionUrl = event.target.result;\n        };\n        reader.readAsDataURL(event.target.files[0]);\n      }\n    }\n  }\n\n  submitAddForm() {\n    this.submitted = true;\n\n    var formData = new FormData();\n    formData.append(\"store_name\", this.addForm.controls.store_name.value);\n    formData.append(\"fullname\", this.addForm.controls.fullname.value);\n    formData.append(\"email\", this.addForm.controls.email.value);\n    formData.append(\"phone_no\", this.addForm.controls.phone_no.value);\n    formData.append(\"billing_address\", this.addForm.controls.billing_address.value);\n    formData.append(\"billing_state\", this.addForm.controls.billing_state.value);\n    formData.append(\"billing_city\", this.addForm.controls.billing_city.value);\n    formData.append(\"billing_zipcode\", this.addForm.controls.billing_zipcode.value);\n    formData.append(\"shipping_address\", this.addForm.controls.shipping_address.value);\n    formData.append(\"shipping_city\", this.addForm.controls.shipping_city.value);\n    formData.append(\"shipping_state\", this.addForm.controls.shipping_state.value);\n    formData.append(\"shipping_zipcode\", this.addForm.controls.shipping_zipcode.value);\n    formData.append(\"sales_tax_id\", this.addForm.controls.sales_tax_id.value);\n    formData.append(\"minumum_threshold\", this.addForm.controls.minumum_threshold.value);\n    formData.append(\"maximum_threshold\", this.addForm.controls.maximum_threshold.value);\n    formData.append(\"sales_tax_image\", this.addForm.get('sales_tax_image_Source').value);\n    formData.append(\"terms_and_condition\", this.addForm.get('terms_and_condition_Source').value);\n    formData.append(\"shipping_address_same\", this.checkSameBillingAddress == false ? \"False\" : \"True\");\n    formData.append(\"sales_person\", this.addForm.controls.sales_person.value);\n\n    if (this.addForm.valid) {\n      this.costumerService.createcustomer(formData).subscribe(response => {\n        let resData = JSON.parse(JSON.stringify(response));\n\n        if (resData.status_code == 200) {\n          this.router.navigate(['customer-user']).then(() => {\n            this.toastr.success('', \"Customer added successfully!\");\n          });\n        } else {\n          this.toastr.error('', resData.message);\n        }\n      },\n        err => {\n          this.toastr.error('', err.error.message);\n        });\n\n    }\n  }\n\n  changeCheckSameBillingAddress() {\n    if (this.checkSameBillingAddress) {\n      this.addForm.patchValue({\n        shipping_address: this.addForm.controls.billing_address.value,\n        shipping_city: this.addForm.controls.billing_city.value,\n        shipping_state: this.addForm.controls.billing_state.value,\n        shipping_zipcode: this.addForm.controls.billing_zipcode.value\n      })\n    } else {\n      this.addForm.patchValue({\n        shipping_address: \"\",\n        shipping_city: \"\",\n        shipping_state: \"\",\n        shipping_zipcode: \"\"\n      })\n    }\n  }\n\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport { DataTableDirective } from 'angular-datatables';\nimport { ToastrService } from 'ngx-toastr';\nimport { CostumerService } from '../../../shared/services/costumer.service';\nimport { Subject } from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { TableUtil } from '../../../shared/common_helper/tableUtil';\nimport { DatePipe } from '@angular/common';\nimport { CommonService } from '../../../shared/services/common.service';\n\n@Component({\n  selector: 'app-customer-invoice',\n  templateUrl: './customer-invoice.component.html',\n})\nexport class CustomerInvoiceComponent implements OnInit {\n\n  @ViewChild('deleteModal') public deleteModal: ModalDirective;\n  @ViewChild(DataTableDirective)\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n\n  orderList: Array<any>;\n  customerId: any;\n  orderData: any;\n\n  selectedFromDate: any;\n  selectedToDate: any;\n  datatbaleData: any;\n\n  constructor(\n    private titleService: Title,\n    private toastr: ToastrService,\n    private costumerService: CostumerService,\n    private router: Router,\n    private route: ActivatedRoute,\n    public commonService: CommonService,\n    private datePipe: DatePipe\n  ) { }\n\n  ngOnInit(): void {\n    this.titleService.setTitle(\"Customer Invoice\");\n\n    this.route.queryParams.subscribe(param => {\n      this.customerId = param.id;\n    });\n\n    this.getOrderList();\n  }\n\n  getOrderList() {\n    this.dtOptions = {\n      pagingType: 'full_numbers',\n      pageLength: 100,\n      order: [0, 'asc'],\n      serverSide: true,\n      processing: true,\n      ajax: (dataTablesParameters: any, callback) => {\n        dataTablesParameters.page = parseInt(dataTablesParameters.start) / parseInt(dataTablesParameters.length) + 1;\n        dataTablesParameters.limit = dataTablesParameters.length;\n        dataTablesParameters.customer_id = this.customerId;\n\n        //sorting\n        dataTablesParameters.created_at = (dataTablesParameters.order[0].column == 0 && dataTablesParameters.order[0].dir == \"asc\") ? (\"created_at\") : (\"-created_at\");\n        dataTablesParameters.invoice_no = (dataTablesParameters.order[0].column == 0 && dataTablesParameters.order[0].dir == \"asc\") ? (\"invoice_no\") : (\"-invoice_no\");\n        dataTablesParameters.due_date = (dataTablesParameters.order[0].column == 0 && dataTablesParameters.order[0].dir == \"asc\") ? (\"due_date\") : (\"-due_date\");\n        dataTablesParameters.amount = (dataTablesParameters.order[0].column == 0 && dataTablesParameters.order[0].dir == \"asc\") ? (\"amount\") : (\"-amount\");\n        dataTablesParameters.status = (dataTablesParameters.order[0].column == 0 && dataTablesParameters.order[0].dir == \"asc\") ? (\"status\") : (\"-status\");\n        dataTablesParameters.verfication_status = (dataTablesParameters.order[0].column == 0 && dataTablesParameters.order[0].dir == \"asc\") ? (\"verfication_status\") : (\"-verfication_status\");\n        dataTablesParameters.amount_recieved = (dataTablesParameters.order[0].column == 0 && dataTablesParameters.order[0].dir == \"asc\") ? (\"amount_recieved\") : (\"-amount_recieved\");\n        dataTablesParameters.remaining_amount = (dataTablesParameters.order[0].column == 0 && dataTablesParameters.order[0].dir == \"asc\") ? (\"remaining_amount\") : (\"-remaining_amount\");\n        dataTablesParameters.payment_status = (dataTablesParameters.order[0].column == 0 && dataTablesParameters.order[0].dir == \"asc\") ? (\"payment_status\") : (\"-payment_status\");\n        dataTablesParameters.salesman = (dataTablesParameters.order[0].column == 0 && dataTablesParameters.order[0].dir == \"asc\") ? (\"salesman\") : (\"-salesman\");\n        dataTablesParameters.search_params = dataTablesParameters.search.value;\n\n\n        // filter\n        dataTablesParameters.from_date = this.datePipe.transform(this.selectedFromDate, \"yyyy-MM-dd\");\n        dataTablesParameters.to_date = this.datePipe.transform(this.selectedToDate, \"yyyy-MM-dd\");\n        this.datatbaleData = dataTablesParameters;\n\n        this.costumerService\n          .displayorder(dataTablesParameters)\n          .subscribe(\n            respones => {\n              let resData = JSON.parse(JSON.stringify(respones));\n              if (resData.status_code == 200) {\n                this.orderList = resData.data.allorder;\n                this.orderData = resData.data;\n\n                callback({\n                  recordsTotal: resData.total_record,\n                  recordsFiltered: dataTablesParameters.search_params == \"\" ? resData.total_record : resData.filter_record,\n                  data: []\n                });\n              } else {\n                this.toastr.error('', resData.message);\n              }\n\n            },\n            err => {\n              this.toastr.error('', err.error.message);\n            }\n          );\n      },\n      columns: [\n        { data: 'created_at', searchable: true, orderable: true },\n        { data: 'invoice_no', searchable: true, orderable: true },\n        { data: 'due_date', searchable: true, orderable: false },\n        { data: 'amount', searchable: true, orderable: false },\n        { data: 'status', searchable: true, orderable: false },\n        { data: 'verfication_status', searchable: true, orderable: false },\n        { data: 'amount_recieved', searchable: true, orderable: true },\n        { data: 'remaining_amount', searchable: true, orderable: true },\n        { data: 'payment_status', searchable: true, orderable: false },\n        { data: 'salesman', searchable: false, orderable: false },\n        // { data: 'action', searchable: false, orderable: false }\n      ]\n    };\n  }\n\n  ngAfterViewInit(): void {\n    this.dtTrigger.next();\n  }\n\n  ngOnDestroy(): void {\n    this.dtTrigger.unsubscribe();\n  }\n\n  saveId(Id) {\n    this.customerId = Id;\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      dtInstance.destroy();\n      this.dtTrigger.next();\n    });\n  }\n\n  printPage() {\n    window.print();\n  }\n\n  exportTable(type) {\n\n    this.datatbaleData.page = \"1\";\n    this.datatbaleData.limit = \"100000\";\n    this.costumerService\n      .displayorder(this.datatbaleData).subscribe(response => {\n        let resData = JSON.parse(JSON.stringify(response));\n\n        if (resData.status_code == 200) {\n          const onlyNameAndSymbolArr = resData.data.allorder.map(x => ({\n            'Order Date': this.datePipe.transform(x.created_at, \"yyyy-MM-dd\"),\n            'Invoice No': x.invoice_no || \"-\",\n            'Payment Due Date': x.due_date || \"-\",\n            'Order Amount': x.amount || \"$0\",\n            'Order Status': x.status || \"-\",\n            'Order Verification': x.verfication_status ? \"Verfied\" : \"Not Verfied\",\n            'Order Amount Received': x.amount_recieved || \"-\",\n            'Open Balance': x.open_balance || \"$0\",\n            'Payment Status': x.payment_status,\n            'Salesman': x.salesman || \"-\"\n          }));\n\n          if (type == 'pdf') {\n            if (onlyNameAndSymbolArr.length > 0) {\n              var keys = [Object.keys(onlyNameAndSymbolArr[0])]\n              var values = onlyNameAndSymbolArr.map(element => Object.values(element));\n              this.commonService.exportArrayPDF(keys, values, 'customerInvoiceList')\n            } else {\n              this.toastr.error('', \"No Data Found !\");\n              $(\"#myDropdown\").toggle();\n            }\n          } else {\n            this.commonService.exportCsv(resData.data.allorder, onlyNameAndSymbolArr, 'customerInvoiceList');\n          }\n\n        } else {\n          this.toastr.error('', resData.message);\n        }\n      },\n        err => {\n          this.toastr.error('', err.error.message);\n        });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CustomerUserComponent } from './customer-user.component';\nimport { ViewComponent } from './view/view.component';\nimport { EditComponent } from './edit/edit.component';\nimport { AddComponent } from './add/add.component';\nimport { CustomerInvoiceComponent } from './customer-invoice/customer-invoice.component';\nimport { UpdatePaymentReceivedComponent } from './update-payment-received/update-payment-received.component';\n\nconst routes: Routes = [ \n  {\n    path: '',\n    data: {\n      title: 'Customer Users'\n    },\n    children: [\n      {\n        path: '',\n        component: CustomerUserComponent,\n        data: {\n          title: 'List'\n        }\n      },\n      {\n        path: 'add',\n        component: AddComponent,\n        data: {\n          title: 'Add'\n        },\n      },\n      {\n        path: 'edit',\n        component: EditComponent,\n        data: {\n          title: 'Edit'\n        },\n      },\n      {\n        path: 'view',\n        component: ViewComponent,\n        data: {\n          title: 'User View'\n        },\n      },\n      {\n        path: 'customer-invoice',\n        component: CustomerInvoiceComponent,\n        data: {\n          title: 'Customer Invoice'\n        },\n      },\n      {\n        path: 'update-payment-received',\n        component: UpdatePaymentReceivedComponent,\n        data: {\n          title: 'Update Payment Received'\n        }\n      },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CustomerUserRoutingModule { }\n","import { Component, OnInit, TemplateRef, ViewChild, AfterViewInit, OnDestroy } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport { DataTableDirective } from 'angular-datatables';\nimport { ToastrService } from 'ngx-toastr';\nimport { CostumerService } from '../../shared/services/costumer.service';\nimport { Subject } from 'rxjs';\nimport { CommonService } from '../../shared/services/common.service';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer-user.component.html',\n  styles: [`\n  .anchor-tag{\n    color: #23282c;\n    text-decoration: none !important;\n}`]\n})\n\nexport class CustomerUserComponent implements AfterViewInit, OnDestroy, OnInit {\n\n  @ViewChild('deleteModal') public deleteModal: ModalDirective;\n  @ViewChild(DataTableDirective)\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n\n  customerList: Array<any>;\n  customerId: any;\n  datatbaleData: any;\n\n  constructor(\n    private titleService: Title,\n    private toastr: ToastrService,\n    private costumerService: CostumerService,\n    public commonService: CommonService,\n    private datePipe: DatePipe\n  ) { }\n\n  ngOnInit(): void {\n    this.titleService.setTitle(\"Customer User\");\n    this.getCustomerList();\n  }\n\n  getCustomerList() {\n    this.dtOptions = {\n      //pagingType: 'full_numbers',\n      pageLength: 100,\n      //order: [1, 'desc'],\n      serverSide: true,\n      searchDelay: 1000,\n      processing: true,\n      ajax: (dataTablesParameters: any, callback) => {\n        dataTablesParameters.page = parseInt(dataTablesParameters.start) / parseInt(dataTablesParameters.length) + 1;\n        dataTablesParameters.limit = dataTablesParameters.length;\n        dataTablesParameters.search_param = dataTablesParameters.search.value;\n\n        // sorting\n        dataTablesParameters.order[0].column == 0 ? dataTablesParameters.store_name = (dataTablesParameters.order[0].column == 0 && dataTablesParameters.order[0].dir == \"asc\") ? (\"store_name\") : (\"-store_name\") : \"\";\n        dataTablesParameters.order[0].column == 1 ? dataTablesParameters.full_name = (dataTablesParameters.order[0].column == 1 && dataTablesParameters.order[0].dir == \"asc\") ? (\"full_name\") : (\"-full_name\") : \"\";\n        dataTablesParameters.order[0].column == 2 ? dataTablesParameters.phone = (dataTablesParameters.order[0].column == 2 && dataTablesParameters.order[0].dir == \"asc\") ? (\"phone\") : (\"-phone\") : \"\";\n        dataTablesParameters.order[0].column == 3 ? dataTablesParameters.email = (dataTablesParameters.order[0].column == 3 && dataTablesParameters.order[0].dir == \"asc\") ? (\"email\") : (\"-email\") : \"\";\n        // dataTablesParameters.order[0].column == 4 ? dataTablesParameters.sales_tax_id = (dataTablesParameters.order[0].column == 4 && dataTablesParameters.order[0].dir == \"asc\") ? (\"sales_tax_id\") : (\"-sales_tax_id\") : \"\";\n        // dataTablesParameters.order[0].column == 5 ? dataTablesParameters.credit_balance = (dataTablesParameters.order[0].column == 5 && dataTablesParameters.order[0].dir == \"asc\") ? (\"credit_balance\") : (\"-credit_balance\") : \"\";\n        dataTablesParameters.order[0].column == 4 ? dataTablesParameters.min_threshold = (dataTablesParameters.order[0].column == 4 && dataTablesParameters.order[0].dir == \"asc\") ? (\"min_threshold\") : (\"-min_threshold\") : \"\";\n        // dataTablesParameters.order[0].column == 6 ? dataTablesParameters.sign_off_process = (dataTablesParameters.order[0].column == 6 && dataTablesParameters.order[0].dir == \"asc\") ? (\"sign_off_process\") : (\"-sign_off_process\") : \"\";\n        dataTablesParameters.order[0].column == 5 ? dataTablesParameters.open_balance = (dataTablesParameters.order[0].column == 5 && dataTablesParameters.order[0].dir == \"asc\") ? (\"open_balance\") : (\"-open_balance\") : \"\";\n        dataTablesParameters.order[0].column == 6 ? dataTablesParameters.no_of_orders_places = (dataTablesParameters.order[0].column == 6 && dataTablesParameters.order[0].dir == \"asc\") ? (\"no_of_orders_places\") : (\"-no_of_orders_places\") : \"\";\n        dataTablesParameters.order[0].column == 7 ? dataTablesParameters.total_order_amount = (dataTablesParameters.order[0].column == 7 && dataTablesParameters.order[0].dir == \"asc\") ? (\"total_order_amount\") : (\"-total_order_amount\") : \"\";\n        this.datatbaleData = dataTablesParameters;\n\n        this.costumerService\n          .customerlist(dataTablesParameters)\n          .subscribe(\n            respones => {\n              let resData = JSON.parse(JSON.stringify(respones));\n              if (resData.status_code == 200) {\n                this.customerList = resData.data;\n\n                callback({\n                  recordsTotal: resData.total_record,\n                  recordsFiltered: dataTablesParameters.search_param == \"\" ? resData.total_record : resData.filter_record,\n                  data: []\n                });\n              } else {\n                this.toastr.error('', resData.message);\n              }\n\n            },\n            err => {\n              this.toastr.error('', err.error.message);\n            }\n          );\n      },\n      columns: [\n        { data: 'store_name' },\n        { data: 'full_name' },\n        { data: 'phone' },\n        { data: 'email' },\n        // { data: 'sales_tax_id' },\n        // { data: 'credit_balance' },\n        { data: 'min_threshold' },\n        // { data: 'sign_off_process' },\n        { data: 'open_balance' },\n        { data: 'no_of_orders_places' },\n        { data: 'total_order_amount' },\n        { data: 'action', searchable: false, orderable: false }]\n    };\n  }\n\n  ngAfterViewInit(): void {\n    this.dtTrigger.next();\n  }\n\n  ngOnDestroy(): void {\n    this.dtTrigger.unsubscribe();\n  }\n\n  saveId(Id) {\n    this.customerId = Id;\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      dtInstance.destroy();\n      this.dtTrigger.next();\n    });\n  }\n\n  deleteCustomer() {\n    this.costumerService.deleteCustomer(this.customerId).subscribe(response => {\n      let resData = JSON.parse(JSON.stringify(response));\n      if (resData.status_code == 200) {\n        this.deleteModal.hide();\n        this.toastr.success('', resData.message)\n        this.rerender();\n      } else {\n        this.toastr.error('', resData.message);\n      }\n    },\n      err => {\n        this.toastr.error('', err.error.mesaage);\n      });\n  }\n\n  exportTable(type) {\n    this.datatbaleData.page = \"1\";\n    this.datatbaleData.limit = \"100000\";\n    this.costumerService.customerlist(this.datatbaleData).subscribe(response => {\n      let resData = JSON.parse(JSON.stringify(response));\n\n      if (resData.status_code == 200) {\n        const onlyNameAndSymbolArr = resData.data.map(x => ({\n          'Store Name': x.store_name || \"-\",\n          'Customer Name': x.full_name || \"-\",\n          'Phone Number': x.phone || \"-\",\n          'Email Address': x.email || \"-\",\n          'Sales Tax id': x.sales_tax_id || \"-\",\n          // 'Credit Balance': x.credit_balance || \"$0\",\n          'Payment threshold': `$ ${x.min_threshold} - $ ${x.max_threshold}`,\n          'Sign off process': x.sign_off_process || \"-\",\n          'No. of  orders placed': x.all_order || \"0\",\n          \"Open Balance\": x.open_balance || \"$0\"\n        }));\n\n        if (type == 'pdf') {\n          var keys = [Object.keys(onlyNameAndSymbolArr[0])]\n          var values = onlyNameAndSymbolArr.map(element => Object.values(element));\n          this.commonService.exportArrayPDF(keys, values, 'customerList')\n        } else {\n          this.commonService.exportCsv(resData.data, onlyNameAndSymbolArr, 'customerList');\n        }\n\n      } else {\n        this.toastr.error('', resData.message);\n      }\n    },\n      err => {\n        this.toastr.error('', err.error.message);\n      });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport { CustomerUserComponent} from './customer-user.component';\nimport { CustomerUserRoutingModule } from './customer-user-routing.module';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { DataTablesModule } from 'angular-datatables';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { ViewComponent } from './view/view.component';\nimport { EditComponent } from './edit/edit.component';\nimport { AddComponent } from './add/add.component';\nimport { CustomerInvoiceComponent } from './customer-invoice/customer-invoice.component';\nimport { CostumerService } from '../../shared/services/costumer.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxMaskModule, IConfig } from 'ngx-mask'\nconst maskConfig: Partial<IConfig> = {\n  validation: false,\n};\nimport { RxReactiveFormsModule } from \"@rxweb/reactive-form-validators\";\nimport { UpdatePaymentReceivedComponent } from './update-payment-received/update-payment-received.component';\nimport { PaymentReceivedService } from '../../shared/services/payment-received.service';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\n\n@NgModule({\n  declarations: [CustomerUserComponent,ViewComponent,EditComponent,AddComponent, CustomerInvoiceComponent, UpdatePaymentReceivedComponent],\n  imports: [\n    CommonModule,\n    ModalModule,\n    CustomerUserRoutingModule,\n    DataTablesModule,\n    PerfectScrollbarModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxMaskModule.forRoot(maskConfig),\n    RxReactiveFormsModule,\n    BsDatepickerModule.forRoot()\n  ],\n  providers:[\n  \tCostumerService,\n    DatePipe,\n    PaymentReceivedService\n  ]\n})\nexport class CustomerUserModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CostumerService } from '../../../shared/services/costumer.service';\nimport { Validations } from '../../../shared/validators/Validations';\nimport { RxwebValidators } from \"@rxweb/reactive-form-validators\";\n\n@Component({\n  templateUrl: 'edit.component.html',\n})\nexport class EditComponent implements OnInit {\n\n  editForm: FormGroup;\n  submitted: boolean = false;\n  checkSameBillingAddress: boolean = false;\n  customerId: any;\n  sales_tax_imageUrl: string = '';\n  terms_and_conditionUrl: string = '';\n  selectedSalesPerson: string = '';\n  salesPersonList: any;\n\n  constructor(\n    private titleService: Title,\n    private costumerService: CostumerService,\n    private toastr: ToastrService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    this.titleService.setTitle(\"Customer Edit\");\n\n    this.editForm = new FormGroup({\n      store_name: new FormControl('', [\n        Validators.required,\n        Validators.pattern(Validations.whitespace)\n      ]),\n      fullname: new FormControl('', [\n        Validators.required,\n        Validators.pattern(Validations.whitespace)\n      ]),\n      phone_no: new FormControl('', [\n        Validators.required\n      ]),\n      email: new FormControl('', [\n        Validators.required,\n        Validators.pattern(Validations.email_pattern)\n      ]),\n      billing_address: new FormControl('', [\n        Validators.required\n      ]),\n      billing_city: new FormControl('', [\n        Validators.required\n      ]),\n      billing_state: new FormControl('', [\n        Validators.required\n      ]),\n      billing_zipcode: new FormControl('', [\n        Validators.required\n      ]),\n      shipping_address: new FormControl('', [\n        Validators.required\n      ]),\n      shipping_city: new FormControl('', [\n        Validators.required\n      ]),\n      shipping_state: new FormControl('', [\n        Validators.required\n      ]),\n      shipping_zipcode: new FormControl('', [\n        Validators.required\n      ]),\n      sales_tax_id: new FormControl('', [\n        //Validators.required\n      ]),\n      minumum_threshold: new FormControl('', [\n        Validators.required\n      ]),\n      maximum_threshold: new FormControl('', [\n        Validators.required\n      ]),\n      sales_tax_image: new FormControl('', [\n        RxwebValidators.extension({ extensions: [\"png\", \"jpg\", \"jpeg\", \"emf\", \"jpe\", \"jfif\", \"bmp\", \"gif\", \"wmf\", \"dib\", \"tif\", \"tiff\", 'pdf'] })\n      ]),\n      sales_tax_image_Source: new FormControl(''),\n      terms_and_condition: new FormControl('', [\n        RxwebValidators.extension({ extensions: [\"png\", \"jpg\", \"jpeg\", \"emf\", \"jpe\", \"jfif\", \"bmp\", \"gif\", \"wmf\", \"dib\", \"tif\", \"tiff\", 'pdf'] })\n      ]),\n      terms_and_condition_Source: new FormControl(''),\n      sales_person: new FormControl('', [Validators.required])\n    });\n\n    this.getSalesUsers();\n    this.getCustomerInfo();\n  }\n\n  getSalesUsers() {\n    var formData = new FormData();\n    formData.append(\"page\", \"1\");\n    formData.append(\"limit\", \"10000\");\n\n    this.costumerService.userlist(formData).subscribe(response => {\n      let resData = JSON.parse(JSON.stringify(response));\n\n      if (resData.status_code == 200) {\n        this.salesPersonList = resData.data;\n      } else {\n        this.toastr.error('', resData.message);\n      }\n    },\n      err => {\n        this.toastr.error('', err.error.message);\n      });\n  }\n\n  getCustomerInfo() {\n    this.route.queryParams.subscribe(param => {\n      this.customerId = param.id;\n    });\n\n    this.costumerService.getCustomer(this.customerId).subscribe(response => {\n      let resData = JSON.parse(JSON.stringify(response));\n\n      if (resData.status_code == 200) {\n        var customerData = resData.data;\n        this.editForm.patchValue({\n          store_name: customerData.store_name,\n          fullname: customerData.full_name,\n          phone_no: customerData.phone,\n          email: customerData.email,\n          // billing_address: customerData.billing_address_full.split(\",\")[0],\n          // shipping_address: customerData.shipping_address_full.split(\",\")[0],\n          sales_tax_id: customerData.sales_tax_id,\n          minumum_threshold: customerData.min_threshold,\n          maximum_threshold: customerData.max_threshold,\n          // billing_city: customerData.billing_address_full.split(\",\")[1],\n          // billing_state: customerData.billing_address_full.split(\",\")[2],\n          // shipping_city: customerData.shipping_address_full.split(\",\")[1],\n          // shipping_state: customerData.shipping_address_full.split(\",\")[2]\n          billing_address: customerData.billing_address,\n          shipping_address: customerData.shipping_address,\n          billing_city: customerData.billing_city,\n          billing_state: customerData.billing_state,\n          shipping_city: customerData.shipping_city,\n          shipping_state: customerData.shipping_state,\n          billing_zipcode: customerData.billing_zipcode,\n          shipping_zipcode: customerData.shipping_zipcode,\n        });\n\n        this.sales_tax_imageUrl = customerData.sales_tax_image;\n        this.terms_and_conditionUrl = customerData.terms;\n        this.checkSameBillingAddress = customerData.both_address_same;\n        this.selectedSalesPerson = customerData.sales_person || \"\";\n\n      } else {\n        this.toastr.error('', resData.message);\n      }\n    },\n      err => {\n        this.toastr.error('', err.error.message);\n      });\n  }\n\n  onTaxImgFileChange(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      if (file) {\n        this.editForm.patchValue({\n          sales_tax_image_Source: file\n        });\n        const reader = new FileReader();\n        reader.onloadend = (event: any) => {\n          this.sales_tax_imageUrl = event.target.result;\n        };\n        reader.readAsDataURL(event.target.files[0]);\n      }\n    }\n  }\n\n  onTermAndConditionFileChange(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      if (file) {\n        this.editForm.patchValue({\n          terms_and_condition_Source: file\n        });\n        const reader = new FileReader();\n        reader.onloadend = (event: any) => {\n          this.terms_and_conditionUrl = event.target.result;\n        };\n        reader.readAsDataURL(event.target.files[0]);\n      }\n    }\n  }\n\n  submitEditForm() {\n    this.submitted = true;\n\n    var formData = new FormData();\n    formData.append(\"store_name\", this.editForm.controls.store_name.value);\n    formData.append(\"full_name\", this.editForm.controls.fullname.value);\n    formData.append(\"phone\", this.editForm.controls.phone_no.value);\n    formData.append(\"email\", this.editForm.controls.email.value);\n    formData.append(\"billing_address\", this.editForm.controls.billing_address.value);\n    formData.append(\"shipping_address\", this.editForm.controls.shipping_address.value);\n    formData.append(\"sales_tax_id\", this.editForm.controls.sales_tax_id.value);\n    formData.append(\"min_threshold\", this.editForm.controls.minumum_threshold.value);\n    formData.append(\"max_threshold\", this.editForm.controls.maximum_threshold.value);\n    if (this.editForm.get('sales_tax_image_Source').value) {\n      formData.append(\"sales_tax_image\", this.editForm.get('sales_tax_image_Source').value);\n    }\n    if (this.editForm.get('terms_and_condition_Source').value) {\n      formData.append(\"terms_and_condition\", this.editForm.get('terms_and_condition_Source').value);\n    }\n    formData.append(\"shipping_address_same\", this.checkSameBillingAddress == false ? \"False\" : \"True\");\n    formData.append(\"billing_state\", this.editForm.controls.billing_state.value);\n    formData.append(\"billing_city\", this.editForm.controls.billing_city.value);\n    formData.append(\"shipping_city\", this.editForm.controls.shipping_city.value);\n    formData.append(\"shipping_state\", this.editForm.controls.shipping_state.value);\n    formData.append(\"billing_zipcode\", this.editForm.controls.billing_zipcode.value);\n    formData.append(\"shipping_zipcode\", this.editForm.controls.shipping_zipcode.value);\n    formData.append(\"sales_person\", this.editForm.controls.sales_person.value);\n\n    if (this.editForm.valid) {\n      this.costumerService.customereditprofile(formData, this.customerId).subscribe(response => {\n        let resData = JSON.parse(JSON.stringify(response));\n\n        if (resData.status_code == 200) {\n          this.router.navigate(['customer-user']).then(() => {\n            this.toastr.success('', \"Customer updated successfully!\");\n          });\n        } else {\n          this.toastr.error('', resData.message);\n        }\n      },\n        err => {\n          this.toastr.error('', err.error.message);\n        });\n\n    }\n  }\n\n  changeCheckSameBillingAddress() {\n    if (this.checkSameBillingAddress) {\n      this.editForm.patchValue({\n        shipping_address: this.editForm.controls.billing_address.value,\n        shipping_city: this.editForm.controls.billing_city.value,\n        shipping_state: this.editForm.controls.billing_state.value,\n        shipping_zipcode: this.editForm.controls.billing_zipcode.value\n      })\n    } else {\n      this.editForm.patchValue({\n        shipping_address: \"\",\n        shipping_city: \"\",\n        shipping_state: \"\",\n        shipping_zipcode: \"\"\n      })\n    }\n  }\n\n}\n","import { Component, OnInit, TemplateRef, ViewChild, AfterViewInit, OnDestroy } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { RxwebValidators } from \"@rxweb/reactive-form-validators\";\nimport { DataTableDirective } from 'angular-datatables';\nimport { Subject } from 'rxjs';\nimport { DatePipe, Location } from '@angular/common';\nimport { PaymentReceivedService } from '../../../shared/services/payment-received.service';\nimport { CommonService } from '../../../shared/services/common.service';\n\n@Component({\n  selector: 'app-update-payment-received',\n  templateUrl: './update-payment-received.component.html',\n})\nexport class UpdatePaymentReceivedComponent implements AfterViewInit, OnDestroy, OnInit {\n\n  @ViewChild('addmodal') public addmodal: ModalDirective;\n  @ViewChild('editmodal') public editmodal: ModalDirective;\n  @ViewChild(DataTableDirective)\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  paymentData: any;\n  customerId: any;\n  payment_date: string = '';\n  addPaymentReceivedForm: FormGroup;\n  submittedPaymentReceived: boolean = false;\n  addPaymentMethodForm: FormGroup;\n  submittedMethodReceived: boolean = false;\n  disableCheckboxes: boolean = false;\n  imageUrl: string = \"\";\n  selectedMode: string = \"CASH\";\n  orderList: Array<any>;\n  orderData: any;\n  ammountReceivedValue: number = null;\n  amountRecievedMessage: string = \"\";\n  calculatedReceivedAmount: number;\n  showPaymentMessage: boolean = false;\n  showClearPaymentButton: boolean = false;\n  tickedAmount: number = 0;\n  amountToApply: number = 0;\n  allorderData: any;\n  allPaymentData: any = [];\n  stage1PaymentData: any = [];\n  firstStep: number = 0;\n  datatableParams: any;\n\n  constructor(\n    private titleService: Title,\n    private location: Location,\n    private toastr: ToastrService,\n    private paymentReceivedService: PaymentReceivedService,\n    private router: Router,\n    public commonService: CommonService,\n    private route: ActivatedRoute,\n    private datePipe: DatePipe\n  ) { }\n\n  ngOnInit(): void {\n    this.titleService.setTitle(\"Update Payement Received\");\n\n    this.route.queryParams.subscribe(param => {\n      this.customerId = param.id;\n      this.payment_date = param.payment_date;\n    });\n\n    this.addPaymentReceivedForm = new FormGroup({\n      customer_name: new FormControl('', [\n        Validators.required\n      ]),\n      email: new FormControl('', [\n        Validators.required\n      ]),\n      phone: new FormControl('', [\n        Validators.required\n      ]),\n      payment_due_date: new FormControl('', [\n        Validators.required\n      ])\n    });\n\n    this.addPaymentMethodForm = new FormGroup({\n      mode: new FormControl('', [\n        Validators.required\n      ]),\n      cheque_no: new FormControl('', [\n        //Validators.required\n      ]),\n      bank_name: new FormControl('', [\n        //Validators.required\n      ]),\n      ammount_received: new FormControl('', [\n        Validators.required\n      ]),\n      image: new FormControl('', [\n        RxwebValidators.extension({\n          extensions: [\"png\", \"jpg\", \"jpeg\", \"emf\", \"jpe\", \"jfif\", \"bmp\", \"gif\", \"wmf\", \"dib\", \"tif\", \"tiff\", 'pdf']\n        })\n      ]),\n      imageSource: new FormControl('')\n    });\n\n    this.getPaymentInfo();\n    this.getOrderList();\n  }\n\n  getOrderList() {\n    this.dtOptions = {\n      pagingType: 'full_numbers',\n      pageLength: 100,\n      order: [1, 'asc'],\n      serverSide: true,\n      processing: true,\n      ajax: (dataTablesParameters: any, callback) => {\n        dataTablesParameters.page = parseInt(dataTablesParameters.start) / parseInt(dataTablesParameters.length) + 1;\n        dataTablesParameters.limit = dataTablesParameters.length;\n        dataTablesParameters.customer_id = this.customerId;\n        dataTablesParameters.created_at = (dataTablesParameters.order[0].column == 0 && dataTablesParameters.order[0].dir == \"asc\") ? (\"created_at\") : (\"-created_at\");\n        dataTablesParameters.invoice_no = (dataTablesParameters.order[0].column == 0 && dataTablesParameters.order[0].dir == \"asc\") ? (\"invoice_no\") : (\"-invoice_no\");\n        dataTablesParameters.due_date = (dataTablesParameters.order[0].column == 0 && dataTablesParameters.order[0].dir == \"asc\") ? (\"due_date\") : (\"-due_date\");\n        dataTablesParameters.amount = (dataTablesParameters.order[0].column == 0 && dataTablesParameters.order[0].dir == \"asc\") ? (\"amount\") : (\"-amount\");\n        dataTablesParameters.amount_recieved = (dataTablesParameters.order[0].column == 0 && dataTablesParameters.order[0].dir == \"asc\") ? (\"amount_recieved\") : (\"-amount_recieved\");\n        dataTablesParameters.remaining_amount = (dataTablesParameters.order[0].column == 0 && dataTablesParameters.order[0].dir == \"asc\") ? (\"remaining_amount\") : (\"-remaining_amount\");\n        dataTablesParameters.open_balance = (dataTablesParameters.order[0].column == 0 && dataTablesParameters.order[0].dir == \"asc\") ? (\"open_balance\") : (\"-open_balance\");\n        dataTablesParameters.for_payment = \"0\";\n        dataTablesParameters.search_params = dataTablesParameters.search.value;\n\n        this.datatableParams = dataTablesParameters;\n        this.paymentReceivedService\n          .displayorder(dataTablesParameters)\n          .subscribe(\n            respones => {\n              let resData = JSON.parse(JSON.stringify(respones));\n              if (resData.status_code == 200) {\n                this.orderList = resData.data.allorder;\n\n                this.orderData = resData.data;\n                // this.calculateAmount(resData.total_record);\n                if (this.ammountReceivedValue > 0) {\n                  var leftAmountReceived = this.ammountReceivedValue;\n                  this.amountToApply = 0;\n                  this.stage1PaymentData = [];\n                  this.orderList.forEach(element => {\n                    if (leftAmountReceived > 0) {\n\n                      // if(leftAmountReceived < element.open_balance){\n                      //   element.payment = element.open_balance - leftAmountReceived; \n                      //   leftAmountReceived = element.open_balance - leftAmountReceived; \n                      // }else{\n                      if (leftAmountReceived > element.open_balance) {\n                        element.payment = leftAmountReceived - element.open_balance;\n                        leftAmountReceived = leftAmountReceived - element.open_balance;\n                      } else {\n                        element.payment = 0;\n                      }\n                      if (element.payment > element.open_balance) {\n                        element.payment = element.open_balance;\n                      }\n\n                      if (element.payment != 0) {\n                        setTimeout(() => {\n                          this.stage1PaymentData.push({\n                            id: element.id,\n                            open_balance: element.open_balance,\n                            payment: parseFloat(element.payment)\n                          });\n                        }, 500);\n                      }\n\n                      this.amountToApply = Number(element.payment) + this.amountToApply;\n                    }\n                  });\n\n                } else {\n                  this.orderList.forEach(element => {\n                    element.payment = 0;\n                  });\n                }\n\n                this.orderList.forEach(element => {\n                  element.checked = false;\n                  element.disabled = true;\n                });\n\n                callback({\n                  recordsTotal: resData.total_record,\n                  recordsFiltered: dataTablesParameters.search_params == \"\" ? resData.total_record : resData.filter_record,\n                  data: []\n                });\n              } else {\n                this.toastr.error('', resData.message);\n              }\n\n            },\n            err => {\n              this.toastr.error('', err.error.message);\n            }\n          );\n      },\n      columns: [\n        { name: 'checkbox', searchable: false, orderable: false },\n        { data: 'created_at', searchable: true, orderable: true },\n        { data: 'invoice_no', searchable: true, orderable: true },\n        { data: 'due_date', searchable: true, orderable: false },\n        { data: 'amount', searchable: true, orderable: false },\n        // { data: 'status', searchable: true, orderable: false },\n        // { data: 'verfication_status', searchable: true, orderable: false },\n        { data: 'amount_recieved', searchable: true, orderable: true },\n        { data: 'open_balance', searchable: true, orderable: true },\n        { data: 'remaining_amount', searchable: true, orderable: false },\n        // { data: 'salesman', searchable: false, orderable: false },\n        // { data: 'action', searchable: false, orderable: false }\n      ]\n    };\n  }\n\n\n  calculateAmount(totalRecord) {\n    var parms = {\n      customer_id: this.customerId,\n      for_payment: '0',\n      limit: totalRecord\n    };\n\n    this.paymentReceivedService.displayorder(parms).subscribe(response => {\n      let resData = JSON.parse(JSON.stringify(response));\n\n      if (resData.status_code == 200) {\n        resData.data.allorder.forEach(element => {\n          //this.amountToApply = this.amountToApply + element.remaining_amount;\n          //this.ammountReceivedValue = this.amountToApply;\n        });\n\n        this.allorderData = resData.data.allorder;\n      }\n      else {\n        this.toastr.error('', resData.message);\n      }\n    },\n      err => {\n        this.toastr.error('', err.error.message);\n      });\n  }\n\n\n  submitAmountReceived() {\n    if (this.amountToApply < this.ammountReceivedValue) {\n      this.allorderData.forEach((element, index) => {\n        this.allorderData[index].remaining_amount = 0;\n      });\n      this.orderList.forEach((element, index) => {\n        this.orderList[index].remaining_amount = 0;\n      });\n      this.amountToApply = 0;\n    }\n  }\n\n\n  ngAfterViewInit(): void {\n    this.dtTrigger.next();\n  }\n\n\n  ngOnDestroy(): void {\n    this.dtTrigger.unsubscribe();\n  }\n\n\n  onImageFileChange(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      if (file) {\n        this.addPaymentMethodForm.patchValue({\n          imageSource: file\n        });\n        const reader = new FileReader();\n        reader.onloadend = (event: any) => {\n          this.imageUrl = event.target.result;\n        };\n        reader.readAsDataURL(event.target.files[0]);\n      }\n    }\n  }\n\n\n  getPaymentInfo() {\n    this.paymentReceivedService.getCustomer(this.customerId).subscribe(response => {\n      let resData = JSON.parse(JSON.stringify(response));\n\n      if (resData.status_code == 200) {\n        this.addPaymentReceivedForm.patchValue({\n          customer_name: resData.data.full_name,\n          email: resData.data.email,\n          phone: resData.data.phone\n        });\n\n        this.addPaymentReceivedForm.patchValue({\n          payment_due_date: new Date(this.payment_date)\n        });\n      }\n      else {\n        this.toastr.error('', resData.message);\n      }\n    },\n      err => {\n        this.toastr.error('', err.error.message);\n      });\n  }\n\n\n  submitAddPaymentReceivedForm() {\n    this.submittedPaymentReceived = true;\n\n    var formData = new FormData();\n    formData.append(\"customer_id\", this.customerId);\n    formData.append(\"payment_date\", this.datePipe.transform(this.addPaymentReceivedForm.controls.payment_due_date.value, 'yyyy-MM-dd'));\n\n    if (this.addPaymentReceivedForm.valid) {\n      this.paymentReceivedService.paymentreceived(formData).subscribe(response => {\n        let resData = JSON.parse(JSON.stringify(response));\n\n        if (resData.status_code == 200) {\n          this.paymentData = resData.data;\n          this.addPaymentMethodForm.patchValue({\n            mode: this.paymentData.method,\n            cheque_no: this.paymentData.reference_no,\n            ammount_received: this.paymentData.amount_recieved\n          });\n          this.submitAmountReceived();\n        } else {\n          this.toastr.error('', resData.message);\n        }\n      },\n        err => {\n          this.toastr.error('', err.error.message);\n        });\n    }\n  }\n\n\n  submitAddPaymentMethodForm() {\n    this.submittedMethodReceived = true;\n\n    if (this.addPaymentMethodForm.controls.ammount_received.value > 0) {\n      // this.rerender();\n\n      var formData = new FormData();\n\n      // formData.append(\"amount_received\", this.addPaymentMethodForm.controls.ammount_received.value);\n      formData.append(\"payment_method\", this.addPaymentMethodForm.controls.mode.value);\n\n      if (this.addPaymentMethodForm.controls.cheque_no.value) {\n        formData.append(\"cheque_no\", this.addPaymentMethodForm.controls.cheque_no.value);\n      }\n\n      if (this.addPaymentMethodForm.get('imageSource').value) {\n        formData.append(\"image\", this.addPaymentMethodForm.get('imageSource').value);\n      }\n\n      formData.append(\"customer_id\", this.customerId);\n\n      var paymentData: Array<any> = [];\n\n      for (let i = 0; i < this.orderList.length; i++) {\n        if (this.orderList[i].payment != \"0\") {\n          paymentData.push({\n            invoice_id: this.orderList[i].id, open_balance: parseFloat(this.orderList[i].open_balance), payment_amount: this.orderList[i].payment, payment_status: this.orderList[i].payment_status\n          });\n        }\n      }\n\n      setTimeout(() => {\n        formData.append(\"paymentData\", JSON.stringify(paymentData));\n        if (this.addPaymentMethodForm.valid) {\n          this.paymentReceivedService.update_payment_history(formData).subscribe(response => {\n            let resData = JSON.parse(JSON.stringify(response));\n\n            if (resData.status_code == 200) {\n              this.toastr.success('', \"Payment details updated successfully!\");\n              this.rerender();\n\n              this.selectedMode = 'CASH';\n              this.submittedMethodReceived = false;\n              this.addPaymentMethodForm.controls.ammount_received.markAsUntouched();\n              this.addPaymentMethodForm.patchValue({ ammount_received: '' })\n              this.showPaymentMessage = false;\n              this.showClearPaymentButton = false;\n              this.calculatedReceivedAmount = 0;\n              this.tickedAmount = 0;\n            } else {\n              this.toastr.error('', resData.message);\n            }\n          },\n            err => {\n              this.toastr.error('', err.error.message);\n            });\n        }\n      }, 1000);\n    }\n  }\n\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      dtInstance.destroy();\n      this.dtTrigger.next();\n    });\n  }\n\n\n  changePaymentValue(paymentValue, orderData, i) {\n    // this.allorderData.forEach(element => {\n    //   if (element.id == orderData.id) {\n    //     let index = this.allorderData.findIndex(x => x.id === orderData.id);\n    //     this.allorderData[index].remaining_amount = Number(paymentValue);\n    //     this.amountToApply = this.amountToApply + Number(paymentValue);\n    //   }\n    // });\n\n    this.amountToApply = 0;\n    this.ammountReceivedValue = 0;\n\n    this.allPaymentData.push({\n      \"orderId\": orderData.id,\n      \"payment\": Number(paymentValue)\n    });\n\n    var amount = [];\n\n    $(\"table tbody tr\").each(function () {\n      var currentRow = $(this);\n      var col1_value = currentRow.find(\"td:eq(6) input\").val();\n      amount.push(col1_value);\n    });\n\n    amount.splice(-1, 1);\n\n    amount.forEach(element => {\n      this.amountToApply = this.amountToApply + Number(element);\n    });\n\n    this.ammountReceivedValue = this.amountToApply;\n  }\n\n\n  changeMode() {\n    if (this.selectedMode != 'CASH') {\n      this.addPaymentMethodForm.get('cheque_no').clearValidators();\n      this.addPaymentMethodForm.get('cheque_no').updateValueAndValidity();\n    }\n    else {\n      this.addPaymentMethodForm.get('cheque_no').setValidators([\n        Validators.required\n      ]);\n\n      this.addPaymentMethodForm.get('cheque_no').updateValueAndValidity();\n    }\n  }\n\n\n  submitPayment() {\n    // var array = [];\n    // this.allorderData.forEach(element => {\n    //   array.push({\n    //     \"orderId\": element.id,\n    //     \"payment\": element.remaining_amount\n    //   });\n    // });\n    if (this.allPaymentData.length != 0) {\n      this.paymentReceivedService.clear_payment(this.allPaymentData).subscribe(response => {\n        let resData = JSON.parse(JSON.stringify(response));\n\n        if (resData.status_code == 200) {\n          this.toastr.success('', resData.message);\n          this.amountToApply = 0;\n          this.rerender();\n\n        } else {\n          this.toastr.error('', resData.message);\n        }\n      },\n        err => {\n          this.toastr.error('', err.error.message);\n        });\n    }\n  }\n\n\n  calculateAmountReceived(checked: boolean, amount: number, index: number) {\n    this.showClearPaymentButton = this.orderList.some(e => {\n      return e.checked;\n    });\n\n    if (checked && this.ammountReceivedValue != null) {\n      this.showPaymentMessage = true;\n\n      this.tickedAmount += amount;\n\n      if (this.ammountReceivedValue - this.tickedAmount < 0) {\n        this.amountRecievedMessage = \"Under payment for invoice number \" + (index + 1);\n        this.calculatedReceivedAmount = (this.ammountReceivedValue - this.tickedAmount) * -1;\n        this.orderList[index].payment_status = \"under\";\n\n        for (let i = 0; i < this.orderList.length; i++) {\n          if (this.orderList[i].payment != this.orderList[index].payment && this.orderList[i].payment != 0) {\n            this.orderList[i].payment_status = \"completed\";\n          }\n        }\n\n        if (amount - (this.ammountReceivedValue - this.tickedAmount) * -1 < 0) {\n          for (let i = 0; i < this.orderList.length; i++) {\n            if (!this.orderList[i].checked) {\n              this.orderList[i].disabled = true;\n            }\n          }\n          this.orderList[index].payment = 0;\n        }\n        else {\n          for (let i = 0; i < this.orderList.length; i++) {\n            this.orderList[i].disabled = false;\n          }\n          this.orderList[index].payment = (amount - (this.ammountReceivedValue - this.tickedAmount) * -1);\n\n          for (let i = 0; i < this.orderList.length; i++) {\n            if (!this.orderList[i].checked) {\n              this.orderList[i].disabled = true;\n            }\n          }\n        }\n      }\n      else if (this.ammountReceivedValue - this.tickedAmount == 0) {\n        this.showPaymentMessage = false;\n        this.orderList[index].payment = amount;\n\n        for (let i = 0; i < this.orderList.length; i++) {\n          if (!this.orderList[i].checked) {\n            this.orderList[i].disabled = true;\n          }\n        }\n      }\n      else {\n        this.amountRecievedMessage = \"Over payment for invoice number \" + (index + 1);\n        this.calculatedReceivedAmount = (this.ammountReceivedValue - this.tickedAmount);\n        this.orderList[index].payment = amount;\n        this.orderList[index].payment_status = \"over\";\n\n        for (let i = 0; i < this.orderList.length; i++) {\n          if (this.orderList[i].payment != this.orderList[index].payment && this.orderList[i].payment != 0) {\n            this.orderList[i].payment_status = \"completed\";\n          }\n        }\n      }\n    }\n    else {\n      this.orderList[index].payment = 0;\n\n      this.tickedAmount -= amount;\n      let lastCheckedIndex: number = null;\n\n      for (let i = 0; i < this.orderList.length; i++) {\n        if (this.orderList[i].checked) {\n          lastCheckedIndex = i;\n        }\n      }\n\n      if (lastCheckedIndex == null) {\n        this.showPaymentMessage = false;\n      }\n      else {\n        this.showPaymentMessage = true;\n      }\n\n      if (this.ammountReceivedValue - this.tickedAmount < 0) {\n        this.amountRecievedMessage = \"Under payment for invoice number \" + (lastCheckedIndex + 1);\n        this.calculatedReceivedAmount = (this.ammountReceivedValue - this.tickedAmount) * -1;\n        this.orderList[index].payment_status = \"under\";\n\n        for (let i = 0; i < this.orderList.length; i++) {\n          if (this.orderList[i].payment != this.orderList[index].payment && this.orderList[i].payment != 0) {\n            this.orderList[i].payment_status = \"completed\";\n          }\n        }\n      }\n      else if (this.ammountReceivedValue - this.tickedAmount == 0) {\n        this.showPaymentMessage = false;\n\n        for (let i = 0; i < this.orderList.length; i++) {\n          if (!this.orderList[i].checked) {\n            this.orderList[i].disabled = true;\n          }\n        }\n      }\n      else {\n        this.amountRecievedMessage = \"Over payment for invoice number \" + (lastCheckedIndex + 1);\n        this.calculatedReceivedAmount = (this.ammountReceivedValue - this.tickedAmount);\n        this.orderList[index].payment_status = \"over\";\n\n        for (let i = 0; i < this.orderList.length; i++) {\n          if (this.orderList[i].payment != this.orderList[index].payment && this.orderList[i].payment != 0) {\n            this.orderList[i].payment_status = \"completed\";\n          }\n        }\n      }\n\n      for (let i = 0; i < this.orderList.length; i++) {\n        this.orderList[i].disabled = false;\n      }\n    }\n  }\n\n\n  uncheckAll() {\n    this.showPaymentMessage = false;\n    this.showClearPaymentButton = false;\n\n    this.calculatedReceivedAmount = 0;\n    this.tickedAmount = 0;\n\n    for (let i = 0; i < this.orderList.length; i++) {\n      this.orderList[i].checked = false;\n      this.orderList[i].disabled = false;\n      this.orderList[i].payment = 0;\n    }\n  }\n\n\n  onAmountChange() {\n    this.showPaymentMessage = false;\n    this.showClearPaymentButton = false;\n    this.calculatedReceivedAmount = 0;\n    this.tickedAmount = 0;\n\n    for (let i = 0; i < this.orderList.length; i++) {\n      this.orderList[i].checked = false;\n      this.orderList[i].disabled = true;\n      this.orderList[i].payment = 0;\n    }\n  }\n\n\n  goPreviousUrl() {\n    this.location.back();\n  }\n\n\n  exportCsv() {\n    this.paymentReceivedService.displayorder(this.datatableParams).subscribe(response => {\n      let resData = JSON.parse(JSON.stringify(response));\n\n      if (resData.status_code == 200) {\n        const onlyNameAndSymbolArr = resData.data.allorder.map(x => ({\n          \"Order Date\": this.datePipe.transform(x.created_at, 'MM-dd-yyyy') || \"-\",\n          \"Invoice No#\": x.invoice_no || \"-\",\n          \"Payment Due Date\": this.datePipe.transform(x.due_date, 'MM-dd-yyyy') || \"-\",\n          \"Order Amount\": x.amount ? \"$\" + parseFloat(x.amount).toFixed(2) : \"$0.00\",\n          \"Payment Amount Received\": x.amount_recieved ? \"$\" + parseFloat(x.amount_recieved).toFixed(2) : \"$0.00\",\n          \"Open Balance\": x.open_balance ? \"$\" + parseFloat(x.open_balance).toFixed(2) : \"$0.00\"\n        }));\n        this.commonService.exportCsv(resData.data.allorder, onlyNameAndSymbolArr, 'paymentRecievedList');\n\n      } else {\n        this.toastr.error('', resData.message);\n      }\n    },\n      err => {\n        this.toastr.error('', err.error.message);\n      });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { CostumerService } from '../../../shared/services/costumer.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { environment } from '../../../../environments/environment';\n\n@Component({\n  templateUrl: 'view.component.html',\n})\nexport class ViewComponent implements OnInit {\n  \n  customerData:any;\n  customerId:any;\n  baseUrl: string = '';\n\t\n  constructor(\n    private titleService: Title,\n    private toastr: ToastrService,\n    private costumerService:CostumerService,\n    private router:Router, \n    private route:ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.titleService.setTitle(\"Customer View\");\n    this.baseUrl = environment.base_url;\n    this.getCustomerInfo();\n  }\n\n  getCustomerInfo(){\n  \tthis.route.queryParams.subscribe(param => {\n      this.customerId = param.id;\n    });\n    \n    this.costumerService.getCustomer(this.customerId).subscribe(response => {\n        let resData = JSON.parse(JSON.stringify(response));\n\n        if(resData.status_code == 200){\n          this.customerData = resData.data;\n        }else{\n          this.toastr.error('', resData.message);\n        }\n      },\n        err => {\n          this.toastr.error('', err.error.message);\n        });\n  }\n\n}\n"],"sourceRoot":"webpack:///"}