{"version":3,"sources":["./node_modules/ng-multiselect-dropdown/fesm5/ng-multiselect-dropdown.js","./src/app/views/inventory-management/add-inventory/add-inventory.component.html","./src/app/views/inventory-management/adjust-quantity/adjust-quantity.component.html","./src/app/views/inventory-management/edit-invertory/edit-invertory.component.html","./src/app/views/inventory-management/inventory-management.component.html","./src/app/shared/services/inventory-management.service.ts","./src/app/views/inventory-management/add-inventory/add-inventory.component.ts","./src/app/views/inventory-management/adjust-quantity/adjust-quantity.component.ts","./src/app/views/inventory-management/edit-invertory/edit-invertory.component.ts","./src/app/views/inventory-management/inventory-management-routing.module.ts","./src/app/views/inventory-management/inventory-management.component.ts","./src/app/views/inventory-management/inventory-management.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmC;AAC8H;AACjG;AACjB;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,wCAAwC,EAAE;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,wDAAU;AAC/B,QAAQ,0DAAI;AACZ;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;;AAED;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU,cAAc,6BAA6B,EAAE;AACxE;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,0DAAY;AAC9C,mCAAmC,0DAAY;AAC/C,4BAA4B,0DAAY;AACxC,8BAA8B,0DAAY;AAC1C,+BAA+B,0DAAY;AAC3C,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,wBAAwB,EAAE;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gHAAgH,yBAAyB,EAAE;AAC3I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD,SAAS;AACT,MAAM;AACN,IAAI,wDAAU;AACd,QAAQ,2DAAK;AACb;AACA,IAAI,wDAAU;AACd,QAAQ,2DAAK;AACb;AACA,IAAI,wDAAU;AACd,QAAQ,2DAAK;AACb;AACA,IAAI,wDAAU;AACd,QAAQ,2DAAK;AACb;AACA,IAAI,wDAAU;AACd,QAAQ,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","file":"views-inventory-management-inventory-management-module.js","sourcesContent":["import { __decorate } from 'tslib';\nimport { Pipe, forwardRef, EventEmitter, Input, Output, HostListener, Component, ChangeDetectionStrategy, ElementRef, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nvar ListItem = /** @class */ (function () {\n    function ListItem(source) {\n        if (typeof source === 'string' || typeof source === 'number') {\n            this.id = this.text = source;\n            this.isDisabled = false;\n        }\n        if (typeof source === 'object') {\n            this.id = source.id;\n            this.text = source.text;\n            this.isDisabled = source.isDisabled;\n        }\n    }\n    return ListItem;\n}());\n\nvar ListFilterPipe = /** @class */ (function () {\n    function ListFilterPipe() {\n    }\n    ListFilterPipe.prototype.transform = function (items, filter) {\n        var _this = this;\n        if (!items || !filter) {\n            return items;\n        }\n        return items.filter(function (item) { return _this.applyFilter(item, filter); });\n    };\n    ListFilterPipe.prototype.applyFilter = function (item, filter) {\n        if (typeof item.text === 'string' && typeof filter.text === 'string') {\n            return !(filter.text && item.text && item.text.toLowerCase().indexOf(filter.text.toLowerCase()) === -1);\n        }\n        else {\n            return !(filter.text && item.text && item.text.toString().toLowerCase().indexOf(filter.text.toString().toLowerCase()) === -1);\n        }\n    };\n    ListFilterPipe = __decorate([\n        Pipe({\n            name: 'multiSelectFilter',\n            pure: false\n        })\n    ], ListFilterPipe);\n    return ListFilterPipe;\n}());\n\nvar DROPDOWN_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return MultiSelectComponent; }),\n    multi: true\n};\nvar noop = function () { };\nvar ɵ0 = noop;\nvar MultiSelectComponent = /** @class */ (function () {\n    function MultiSelectComponent(listFilterPipe) {\n        this.listFilterPipe = listFilterPipe;\n        this._data = [];\n        this.selectedItems = [];\n        this.isDropdownOpen = true;\n        this._placeholder = \"Select\";\n        this._sourceDataType = null; // to keep note of the source data type. could be array of string/number/object\n        this._sourceDataFields = []; // store source data fields names\n        this.filter = new ListItem(this.data);\n        this.defaultSettings = {\n            singleSelection: false,\n            idField: \"id\",\n            textField: \"text\",\n            disabledField: \"isDisabled\",\n            enableCheckAll: true,\n            selectAllText: \"Select All\",\n            unSelectAllText: \"UnSelect All\",\n            allowSearchFilter: false,\n            limitSelection: -1,\n            clearSearchFilter: true,\n            maxHeight: 197,\n            itemsShowLimit: 999999999999,\n            searchPlaceholderText: \"Search\",\n            noDataAvailablePlaceholderText: \"No data available\",\n            closeDropDownOnSelection: false,\n            showSelectedItemsAtTop: false,\n            defaultOpen: false,\n            allowRemoteDataSearch: false\n        };\n        this.disabled = false;\n        this.onFilterChange = new EventEmitter();\n        this.onDropDownClose = new EventEmitter();\n        this.onSelect = new EventEmitter();\n        this.onDeSelect = new EventEmitter();\n        this.onSelectAll = new EventEmitter();\n        this.onDeSelectAll = new EventEmitter();\n        this.onTouchedCallback = noop;\n        this.onChangeCallback = noop;\n    }\n    Object.defineProperty(MultiSelectComponent.prototype, \"placeholder\", {\n        set: function (value) {\n            if (value) {\n                this._placeholder = value;\n            }\n            else {\n                this._placeholder = \"Select\";\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MultiSelectComponent.prototype, \"settings\", {\n        set: function (value) {\n            if (value) {\n                this._settings = Object.assign(this.defaultSettings, value);\n            }\n            else {\n                this._settings = Object.assign(this.defaultSettings);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MultiSelectComponent.prototype, \"data\", {\n        set: function (value) {\n            var _this = this;\n            if (!value) {\n                this._data = [];\n            }\n            else {\n                var firstItem = value[0];\n                this._sourceDataType = typeof firstItem;\n                this._sourceDataFields = this.getFields(firstItem);\n                this._data = value.map(function (item) {\n                    return typeof item === \"string\" || typeof item === \"number\"\n                        ? new ListItem(item)\n                        : new ListItem({\n                            id: item[_this._settings.idField],\n                            text: item[_this._settings.textField],\n                            isDisabled: item[_this._settings.disabledField]\n                        });\n                });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MultiSelectComponent.prototype.onFilterTextChange = function ($event) {\n        this.onFilterChange.emit($event);\n    };\n    MultiSelectComponent.prototype.onItemClick = function ($event, item) {\n        if (this.disabled || item.isDisabled) {\n            return false;\n        }\n        var found = this.isSelected(item);\n        var allowAdd = this._settings.limitSelection === -1 || (this._settings.limitSelection > 0 && this.selectedItems.length < this._settings.limitSelection);\n        if (!found) {\n            if (allowAdd) {\n                this.addSelected(item);\n            }\n        }\n        else {\n            this.removeSelected(item);\n        }\n        if (this._settings.singleSelection && this._settings.closeDropDownOnSelection) {\n            this.closeDropdown();\n        }\n    };\n    MultiSelectComponent.prototype.writeValue = function (value) {\n        var _this = this;\n        if (value !== undefined && value !== null && value.length > 0) {\n            if (this._settings.singleSelection) {\n                try {\n                    if (value.length >= 1) {\n                        var firstItem = value[0];\n                        this.selectedItems = [\n                            typeof firstItem === \"string\" || typeof firstItem === \"number\"\n                                ? new ListItem(firstItem)\n                                : new ListItem({\n                                    id: firstItem[this._settings.idField],\n                                    text: firstItem[this._settings.textField],\n                                    isDisabled: firstItem[this._settings.disabledField]\n                                })\n                        ];\n                    }\n                }\n                catch (e) {\n                    // console.error(e.body.msg);\n                }\n            }\n            else {\n                var _data = value.map(function (item) {\n                    return typeof item === \"string\" || typeof item === \"number\"\n                        ? new ListItem(item)\n                        : new ListItem({\n                            id: item[_this._settings.idField],\n                            text: item[_this._settings.textField],\n                            isDisabled: item[_this._settings.disabledField]\n                        });\n                });\n                if (this._settings.limitSelection > 0) {\n                    this.selectedItems = _data.splice(0, this._settings.limitSelection);\n                }\n                else {\n                    this.selectedItems = _data;\n                }\n            }\n        }\n        else {\n            this.selectedItems = [];\n        }\n        this.onChangeCallback(value);\n    };\n    // From ControlValueAccessor interface\n    MultiSelectComponent.prototype.registerOnChange = function (fn) {\n        this.onChangeCallback = fn;\n    };\n    // From ControlValueAccessor interface\n    MultiSelectComponent.prototype.registerOnTouched = function (fn) {\n        this.onTouchedCallback = fn;\n    };\n    // Set touched on blur\n    MultiSelectComponent.prototype.onTouched = function () {\n        this.closeDropdown();\n        this.onTouchedCallback();\n    };\n    MultiSelectComponent.prototype.trackByFn = function (index, item) {\n        return item.id;\n    };\n    MultiSelectComponent.prototype.isSelected = function (clickedItem) {\n        var found = false;\n        this.selectedItems.forEach(function (item) {\n            if (clickedItem.id === item.id) {\n                found = true;\n            }\n        });\n        return found;\n    };\n    MultiSelectComponent.prototype.isLimitSelectionReached = function () {\n        return this._settings.limitSelection === this.selectedItems.length;\n    };\n    MultiSelectComponent.prototype.isAllItemsSelected = function () {\n        // get disabld item count\n        var filteredItems = this.listFilterPipe.transform(this._data, this.filter);\n        var itemDisabledCount = filteredItems.filter(function (item) { return item.isDisabled; }).length;\n        // take disabled items into consideration when checking\n        if ((!this.data || this.data.length === 0) && this._settings.allowRemoteDataSearch) {\n            return false;\n        }\n        return filteredItems.length === this.selectedItems.length + itemDisabledCount;\n    };\n    MultiSelectComponent.prototype.showButton = function () {\n        if (!this._settings.singleSelection) {\n            if (this._settings.limitSelection > 0) {\n                return false;\n            }\n            // this._settings.enableCheckAll = this._settings.limitSelection === -1 ? true : false;\n            return true; // !this._settings.singleSelection && this._settings.enableCheckAll && this._data.length > 0;\n        }\n        else {\n            // should be disabled in single selection mode\n            return false;\n        }\n    };\n    MultiSelectComponent.prototype.itemShowRemaining = function () {\n        return this.selectedItems.length - this._settings.itemsShowLimit;\n    };\n    MultiSelectComponent.prototype.addSelected = function (item) {\n        if (this._settings.singleSelection) {\n            this.selectedItems = [];\n            this.selectedItems.push(item);\n        }\n        else {\n            this.selectedItems.push(item);\n        }\n        this.onChangeCallback(this.emittedValue(this.selectedItems));\n        this.onSelect.emit(this.emittedValue(item));\n    };\n    MultiSelectComponent.prototype.removeSelected = function (itemSel) {\n        var _this = this;\n        this.selectedItems.forEach(function (item) {\n            if (itemSel.id === item.id) {\n                _this.selectedItems.splice(_this.selectedItems.indexOf(item), 1);\n            }\n        });\n        this.onChangeCallback(this.emittedValue(this.selectedItems));\n        this.onDeSelect.emit(this.emittedValue(itemSel));\n    };\n    MultiSelectComponent.prototype.emittedValue = function (val) {\n        var _this = this;\n        var selected = [];\n        if (Array.isArray(val)) {\n            val.map(function (item) {\n                selected.push(_this.objectify(item));\n            });\n        }\n        else {\n            if (val) {\n                return this.objectify(val);\n            }\n        }\n        return selected;\n    };\n    MultiSelectComponent.prototype.objectify = function (val) {\n        if (this._sourceDataType === 'object') {\n            var obj = {};\n            obj[this._settings.idField] = val.id;\n            obj[this._settings.textField] = val.text;\n            if (this._sourceDataFields.includes(this._settings.disabledField)) {\n                obj[this._settings.disabledField] = val.isDisabled;\n            }\n            return obj;\n        }\n        if (this._sourceDataType === 'number') {\n            return Number(val.id);\n        }\n        else {\n            return val.text;\n        }\n    };\n    MultiSelectComponent.prototype.toggleDropdown = function (evt) {\n        evt.preventDefault();\n        if (this.disabled && this._settings.singleSelection) {\n            return;\n        }\n        this._settings.defaultOpen = !this._settings.defaultOpen;\n        if (!this._settings.defaultOpen) {\n            this.onDropDownClose.emit();\n        }\n    };\n    MultiSelectComponent.prototype.closeDropdown = function () {\n        this._settings.defaultOpen = false;\n        // clear search text\n        if (this._settings.clearSearchFilter) {\n            this.filter.text = \"\";\n        }\n        this.onDropDownClose.emit();\n    };\n    MultiSelectComponent.prototype.toggleSelectAll = function () {\n        if (this.disabled) {\n            return false;\n        }\n        if (!this.isAllItemsSelected()) {\n            // filter out disabled item first before slicing\n            this.selectedItems = this.listFilterPipe.transform(this._data, this.filter).filter(function (item) { return !item.isDisabled; }).slice();\n            this.onSelectAll.emit(this.emittedValue(this.selectedItems));\n        }\n        else {\n            this.selectedItems = [];\n            this.onDeSelectAll.emit(this.emittedValue(this.selectedItems));\n        }\n        this.onChangeCallback(this.emittedValue(this.selectedItems));\n    };\n    MultiSelectComponent.prototype.getFields = function (inputData) {\n        var fields = [];\n        if (typeof inputData !== \"object\") {\n            return fields;\n        }\n        // tslint:disable-next-line:forin\n        for (var prop in inputData) {\n            fields.push(prop);\n        }\n        return fields;\n    };\n    MultiSelectComponent.ctorParameters = function () { return [\n        { type: ListFilterPipe }\n    ]; };\n    __decorate([\n        Input()\n    ], MultiSelectComponent.prototype, \"placeholder\", null);\n    __decorate([\n        Input()\n    ], MultiSelectComponent.prototype, \"disabled\", void 0);\n    __decorate([\n        Input()\n    ], MultiSelectComponent.prototype, \"settings\", null);\n    __decorate([\n        Input()\n    ], MultiSelectComponent.prototype, \"data\", null);\n    __decorate([\n        Output(\"onFilterChange\")\n    ], MultiSelectComponent.prototype, \"onFilterChange\", void 0);\n    __decorate([\n        Output(\"onDropDownClose\")\n    ], MultiSelectComponent.prototype, \"onDropDownClose\", void 0);\n    __decorate([\n        Output(\"onSelect\")\n    ], MultiSelectComponent.prototype, \"onSelect\", void 0);\n    __decorate([\n        Output(\"onDeSelect\")\n    ], MultiSelectComponent.prototype, \"onDeSelect\", void 0);\n    __decorate([\n        Output(\"onSelectAll\")\n    ], MultiSelectComponent.prototype, \"onSelectAll\", void 0);\n    __decorate([\n        Output(\"onDeSelectAll\")\n    ], MultiSelectComponent.prototype, \"onDeSelectAll\", void 0);\n    __decorate([\n        HostListener(\"blur\")\n    ], MultiSelectComponent.prototype, \"onTouched\", null);\n    MultiSelectComponent = __decorate([\n        Component({\n            selector: \"ng-multiselect-dropdown\",\n            template: \"<div tabindex=\\\"0\\\" (blur)=\\\"onTouched()\\\" class=\\\"multiselect-dropdown\\\" (clickOutside)=\\\"closeDropdown()\\\">\\n  <div [class.disabled]=\\\"disabled\\\">\\n    <span tabindex=\\\"-1\\\" class=\\\"dropdown-btn\\\" (click)=\\\"toggleDropdown($event)\\\">\\n      <span *ngIf=\\\"selectedItems.length == 0\\\">{{_placeholder}}</span>\\n      <span class=\\\"selected-item\\\" *ngFor=\\\"let item of selectedItems;trackBy: trackByFn;let k = index\\\" [hidden]=\\\"k > _settings.itemsShowLimit-1\\\">\\n        <span>{{item.text}}</span>\\n        <a style=\\\"padding-left:2px;color:white\\\" (click)=\\\"onItemClick($event,item)\\\">x</a>\\n      </span>\\n      <span [ngClass]=\\\"{ 'dropdown-multiselect--active': _settings.defaultOpen }\\\" style=\\\"float:right !important;padding-right:4px\\\">\\n        <span style=\\\"padding-right: 15px;\\\" *ngIf=\\\"itemShowRemaining()>0\\\">+{{itemShowRemaining()}}</span>\\n        <span class=\\\"dropdown-multiselect__caret\\\"></span>\\n      </span>\\n    </span>\\n  </div>\\n  <div class=\\\"dropdown-list\\\" [hidden]=\\\"!_settings.defaultOpen\\\">\\n    <ul class=\\\"item1\\\">\\n      <li (click)=\\\"toggleSelectAll()\\\" *ngIf=\\\"(_data.length > 0 || _settings.allowRemoteDataSearch) && !_settings.singleSelection && _settings.enableCheckAll && _settings.limitSelection===-1\\\" class=\\\"multiselect-item-checkbox\\\" style=\\\"border-bottom: 1px solid #ccc;padding:10px\\\">\\n        <input type=\\\"checkbox\\\" aria-label=\\\"multiselect-select-all\\\" [checked]=\\\"isAllItemsSelected()\\\" [disabled]=\\\"disabled || isLimitSelectionReached()\\\" />\\n        <div>{{!isAllItemsSelected() ? _settings.selectAllText : _settings.unSelectAllText}}</div>\\n      </li>\\n      <li class=\\\"filter-textbox\\\" *ngIf=\\\"(_data.length>0 || _settings.allowRemoteDataSearch) && _settings.allowSearchFilter\\\">\\n        <input type=\\\"text\\\" aria-label=\\\"multiselect-search\\\" [readOnly]=\\\"disabled\\\" [placeholder]=\\\"_settings.searchPlaceholderText\\\" [(ngModel)]=\\\"filter.text\\\" (ngModelChange)=\\\"onFilterTextChange($event)\\\">\\n      </li>\\n    </ul>\\n    <ul class=\\\"item2\\\" [style.maxHeight]=\\\"_settings.maxHeight+'px'\\\">\\n      <li *ngFor=\\\"let item of _data | multiSelectFilter:filter; let i = index;\\\" (click)=\\\"onItemClick($event,item)\\\" class=\\\"multiselect-item-checkbox\\\">\\n        <input type=\\\"checkbox\\\" [attr.aria-label]=\\\"item.text\\\" [checked]=\\\"isSelected(item)\\\" [disabled]=\\\"disabled || (isLimitSelectionReached() && !isSelected(item)) || item.isDisabled\\\" />\\n        <div>{{item.text}}</div>\\n      </li>\\n      <li class='no-data' *ngIf=\\\"_data.length == 0 && !_settings.allowRemoteDataSearch\\\">\\n        <h5>{{_settings.noDataAvailablePlaceholderText}}</h5>\\n      </li>\\n    </ul>\\n  </div>\\n</div>\\n\",\n            providers: [DROPDOWN_CONTROL_VALUE_ACCESSOR],\n            changeDetection: ChangeDetectionStrategy.OnPush,\n            styles: [\".multiselect-dropdown{position:relative;width:100%;font-size:inherit;font-family:inherit}.multiselect-dropdown .dropdown-btn{display:inline-block;border:1px solid #adadad;width:100%;padding:6px 12px;margin-bottom:0;font-weight:400;line-height:1.52857143;text-align:left;vertical-align:middle;cursor:pointer;background-image:none;border-radius:4px}.multiselect-dropdown .dropdown-btn .selected-item{border:1px solid #337ab7;margin-right:4px;background:#337ab7;padding:0 5px;color:#fff;border-radius:2px;float:left;display:flex;max-width:100px}.multiselect-dropdown .dropdown-btn .selected-item span{overflow:hidden;text-overflow:ellipsis}.multiselect-dropdown .dropdown-btn .selected-item a{text-decoration:none}.multiselect-dropdown .dropdown-btn .selected-item:hover{box-shadow:1px 1px #959595}.multiselect-dropdown .dropdown-btn .dropdown-multiselect__caret{line-height:16px;display:block;position:absolute;box-sizing:border-box;width:40px;height:38px;right:1px;top:0;padding:4px 8px;margin:0;text-decoration:none;text-align:center;cursor:pointer;transition:transform .2s}.multiselect-dropdown .dropdown-btn .dropdown-multiselect__caret:before{position:relative;right:0;top:65%;color:#999;margin-top:4px;border-style:solid;border-width:8px 8px 0;border-color:#999 transparent;content:\\\"\\\"}.multiselect-dropdown .dropdown-btn .dropdown-multiselect--active .dropdown-multiselect__caret{transform:rotateZ(180deg)}.multiselect-dropdown .disabled>span{background-color:#eceeef}.dropdown-list{position:absolute;padding-top:6px;width:100%;z-index:9999;border:1px solid #ccc;border-radius:3px;background:#fff;margin-top:10px;box-shadow:0 1px 5px #959595}.dropdown-list ul{padding:0;list-style:none;overflow:auto;margin:0}.dropdown-list li{padding:6px 10px;cursor:pointer;text-align:left}.dropdown-list .filter-textbox{border-bottom:1px solid #ccc;position:relative;padding:10px}.dropdown-list .filter-textbox input{border:0;width:100%;padding:0 0 0 26px}.dropdown-list .filter-textbox input:focus{outline:0}.multiselect-item-checkbox:hover{background-color:#e4e3e3}.multiselect-item-checkbox input[type=checkbox]{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.multiselect-item-checkbox input[type=checkbox]:focus+div:before,.multiselect-item-checkbox input[type=checkbox]:hover+div:before{border-color:#337ab7;background-color:#f2f2f2}.multiselect-item-checkbox input[type=checkbox]:active+div:before{transition-duration:0s}.multiselect-item-checkbox input[type=checkbox]+div{position:relative;padding-left:2em;vertical-align:middle;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;margin:0;color:#000}.multiselect-item-checkbox input[type=checkbox]+div:before{box-sizing:content-box;content:\\\"\\\";color:#337ab7;position:absolute;top:50%;left:0;width:14px;height:14px;margin-top:-9px;border:2px solid #337ab7;text-align:center;transition:.4s}.multiselect-item-checkbox input[type=checkbox]+div:after{box-sizing:content-box;content:\\\"\\\";position:absolute;transform:scale(0);transform-origin:50%;transition:transform .2s ease-out;background-color:transparent;top:50%;left:4px;width:8px;height:3px;margin-top:-4px;border-style:solid;border-color:#fff;border-width:0 0 3px 3px;-o-border-image:none;border-image:none;transform:rotate(-45deg) scale(0)}.multiselect-item-checkbox input[type=checkbox]:disabled+div:before{border-color:#ccc}.multiselect-item-checkbox input[type=checkbox]:disabled:focus+div:before .multiselect-item-checkbox input[type=checkbox]:disabled:hover+div:before{background-color:inherit}.multiselect-item-checkbox input[type=checkbox]:disabled:checked+div:before{background-color:#ccc}.multiselect-item-checkbox input[type=checkbox]:checked+div:after{content:\\\"\\\";transition:transform .2s ease-out;transform:rotate(-45deg) scale(1)}.multiselect-item-checkbox input[type=checkbox]:checked+div:before{-webkit-animation:.2s ease-in borderscale;animation:.2s ease-in borderscale;background:#337ab7}@-webkit-keyframes borderscale{50%{box-shadow:0 0 0 2px #337ab7}}@keyframes borderscale{50%{box-shadow:0 0 0 2px #337ab7}}\"]\n        })\n    ], MultiSelectComponent);\n    return MultiSelectComponent;\n}());\n\nvar ClickOutsideDirective = /** @class */ (function () {\n    function ClickOutsideDirective(_elementRef) {\n        this._elementRef = _elementRef;\n        this.clickOutside = new EventEmitter();\n    }\n    ClickOutsideDirective.prototype.onClick = function (event, targetElement) {\n        if (!targetElement) {\n            return;\n        }\n        var clickedInside = this._elementRef.nativeElement.contains(targetElement);\n        if (!clickedInside) {\n            this.clickOutside.emit(event);\n        }\n    };\n    ClickOutsideDirective.ctorParameters = function () { return [\n        { type: ElementRef }\n    ]; };\n    __decorate([\n        Output()\n    ], ClickOutsideDirective.prototype, \"clickOutside\", void 0);\n    __decorate([\n        HostListener('document:click', ['$event', '$event.target'])\n    ], ClickOutsideDirective.prototype, \"onClick\", null);\n    ClickOutsideDirective = __decorate([\n        Directive({\n            selector: '[clickOutside]'\n        })\n    ], ClickOutsideDirective);\n    return ClickOutsideDirective;\n}());\n\nvar NgMultiSelectDropDownModule = /** @class */ (function () {\n    function NgMultiSelectDropDownModule() {\n    }\n    NgMultiSelectDropDownModule_1 = NgMultiSelectDropDownModule;\n    NgMultiSelectDropDownModule.forRoot = function () {\n        return {\n            ngModule: NgMultiSelectDropDownModule_1\n        };\n    };\n    var NgMultiSelectDropDownModule_1;\n    NgMultiSelectDropDownModule = NgMultiSelectDropDownModule_1 = __decorate([\n        NgModule({\n            imports: [CommonModule, FormsModule],\n            declarations: [MultiSelectComponent, ClickOutsideDirective, ListFilterPipe],\n            providers: [ListFilterPipe],\n            exports: [MultiSelectComponent]\n        })\n    ], NgMultiSelectDropDownModule);\n    return NgMultiSelectDropDownModule;\n}());\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MultiSelectComponent, NgMultiSelectDropDownModule, DROPDOWN_CONTROL_VALUE_ACCESSOR as ɵa, ListFilterPipe as ɵb, ClickOutsideDirective as ɵc };\n//# sourceMappingURL=ng-multiselect-dropdown.js.map\n","export default \"<div class=\\\"animated fadeIn\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n        <div class=\\\"col-sm-12\\\">\\n            <form class=\\\"card\\\" [formGroup]=\\\"addForm\\\" (ngSubmit)=\\\"submitAddForm()\\\" #formDir=\\\"ngForm\\\" novalidate>\\n                <div class=\\\"card-header\\\">Product Add</div>\\n                <div class=\\\"card-body p-4\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Product Name :</label>\\n                                <input formControlName=\\\"name\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\"\\n                                    placeholder=\\\"Product Name\\\">\\n                                <div class=\\\"error\\\"\\n                                    *ngIf=\\\"(submitted && addForm.controls.name.invalid) || addForm.controls.name.touched\\\">\\n                                    <div *ngIf=\\\"addForm.hasError('required','name')\\\" class=\\\"err-msg\\\">Product name is required.\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"name\\\" class=\\\"w-100\\\">Select Product Category :</label>\\n                                        <select [(ngModel)]=\\\"selectedcategory\\\" formControlName=\\\"category\\\"\\n                                            class=\\\"form-control\\\">\\n                                            <option value=\\\"\\\">Select Product Category</option>\\n                                            <option *ngFor=\\\"let category of categoryData\\\" [value]=\\\"category.id\\\">\\n                                                {{category.name}}</option>\\n                                        </select>\\n                                        <div class=\\\"error\\\"\\n                                            *ngIf=\\\"(submitted && addForm.controls.category.invalid) || addForm.controls.category.touched\\\">\\n                                            <div *ngIf=\\\"addForm.hasError('required','category')\\\" class=\\\"err-msg\\\">Product\\n                                                category is required.\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"name\\\" class=\\\"w-100\\\">Select Vendor :</label>\\n                                        <div class=\\\"form-group\\\">\\n                                            <select [(ngModel)]=\\\"selectedVendor\\\" formControlName=\\\"vendor\\\"\\n                                                class=\\\"form-control\\\">\\n                                                <option value=\\\"\\\">Select Vendor</option>\\n                                                <option *ngFor=\\\"let vendor of vendorData\\\" [value]=\\\"vendor.id\\\">\\n                                                    {{vendor.name}}</option>\\n                                            </select>\\n                                            <div class=\\\"error\\\"\\n                                                *ngIf=\\\"(submitted && addForm.controls.vendor.invalid) || addForm.controls.vendor.touched\\\">\\n                                                <div *ngIf=\\\"addForm.hasError('required','vendor')\\\" class=\\\"err-msg\\\">\\n                                                    Vendor is required.\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <!-- <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Select Pack Size :</label>\\n                                <select [(ngModel)]=\\\"selectedPackSize\\\" formControlName=\\\"pack_size\\\" class=\\\"form-control\\\">\\n                                    <option value=\\\"\\\">Select Pack Size</option>\\n                                    <option *ngFor=\\\"let packSize of packSizeData\\\" [value]=\\\"packSize.id\\\">{{packSize.size}}</option>\\n                                </select>\\n                                <div class=\\\"error\\\"\\n                                          *ngIf=\\\"(submitted && addForm.controls.pack_size.invalid) || addForm.controls.pack_size.touched\\\">\\n                                          <div *ngIf=\\\"addForm.hasError('required','pack_size')\\\" class=\\\"err-msg\\\">Pack size is required.\\n                                          </div>\\n                                        </div>\\n                            </div>\\n                        </div> -->\\n                        <div class=\\\"border-bottom p-2 mb-3 w-100\\\"></div>\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"name\\\" class=\\\"w-100\\\">Quantity On Hand :</label>\\n                                        <input formControlName=\\\"available_quantity\\\" class=\\\"form-control\\\" id=\\\"name\\\"\\n                                            type=\\\"number\\\" placeholder=\\\"Quantity On Hand\\\">\\n                                        <div class=\\\"error\\\"\\n                                            *ngIf=\\\"(submitted && addForm.controls.available_quantity.invalid) || addForm.controls.available_quantity.touched\\\">\\n                                            <div *ngIf=\\\"addForm.hasError('required','available_quantity')\\\"\\n                                                class=\\\"err-msg\\\">Quantity on hand is required.\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"name\\\" class=\\\"w-100\\\">As of Date - Default Today's Date :</label>\\n                                        <input [(ngModel)]=\\\"selectedDate\\\" formControlName=\\\"updated_on\\\"\\n                                            class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"date\\\" placeholder=\\\"Enter Today's Date\\\">\\n                                        <div class=\\\"error\\\"\\n                                            *ngIf=\\\"(submitted && addForm.controls.updated_on.invalid) || addForm.controls.updated_on.touched\\\">\\n                                            <div *ngIf=\\\"addForm.hasError('required','updated_on')\\\" class=\\\"err-msg\\\">Date\\n                                                is required.\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"name\\\" class=\\\"w-100\\\">Add Reorder Point of Quantity :</label>\\n                                        <input formControlName=\\\"low_stock_qauntity\\\" class=\\\"form-control\\\" id=\\\"name\\\"\\n                                            type=\\\"number\\\" placeholder=\\\"Reorder Point of Quantity\\\">\\n                                        <div class=\\\"error\\\"\\n                                            *ngIf=\\\"(submitted && addForm.controls.low_stock_qauntity.invalid) || addForm.controls.low_stock_qauntity.touched\\\">\\n                                            <div *ngIf=\\\"addForm.hasError('required','low_stock_qauntity')\\\"\\n                                                class=\\\"err-msg\\\">Reorder point is required.\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"name\\\" class=\\\"w-100\\\">Warehouse Location :</label>\\n                                        <input formControlName=\\\"location\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\"\\n                                            placeholder=\\\"Warehouse Location\\\">\\n                                        <div class=\\\"error\\\"\\n                                            *ngIf=\\\"(submitted && addForm.controls.location.invalid) || addForm.controls.location.touched\\\">\\n                                            <div *ngIf=\\\"addForm.hasError('required','location')\\\" class=\\\"err-msg\\\">\\n                                                Location is required.\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"border-bottom p-2 mb-3 w-100\\\"></div>\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"name\\\" class=\\\"w-100\\\">Sales Price :</label>\\n                                        <input formControlName=\\\"sale_price\\\" class=\\\"form-control\\\" type=\\\"number\\\"\\n                                            placeholder=\\\"Sales Price\\\">\\n                                        <div class=\\\"error\\\"\\n                                            *ngIf=\\\"(submitted && addForm.controls.sale_price.invalid) || addForm.controls.sale_price.touched\\\">\\n                                            <div *ngIf=\\\"addForm.hasError('required','sale_price')\\\" class=\\\"err-msg\\\">Sale\\n                                                price is required.\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"name\\\" class=\\\"w-100\\\">Purchase Price:</label>\\n                                        <input formControlName=\\\"purchase_cost\\\" class=\\\"form-control\\\" type=\\\"number\\\"\\n                                            placeholder=\\\"Purchase Price\\\">\\n                                        <div class=\\\"error\\\"\\n                                            *ngIf=\\\"(submitted && addForm.controls.purchase_cost.invalid) || addForm.controls.purchase_cost.touched\\\">\\n                                            <div *ngIf=\\\"addForm.hasError('required','purchase_cost')\\\" class=\\\"err-msg\\\">\\n                                                Purchase Price is required.\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"name\\\" class=\\\"w-100\\\">Sales Description :</label>\\n                                        <textarea formControlName=\\\"description\\\" class=\\\"form-control\\\"\\n                                            style=\\\"resize:none;\\\" name=\\\"textarea-input\\\" rows=\\\"9\\\"\\n                                            placeholder=\\\"Sales Description\\\" spellcheck=\\\"false\\\"></textarea>\\n                                        <div class=\\\"error\\\"\\n                                            *ngIf=\\\"(submitted && addForm.controls.description.invalid) || addForm.controls.description.touched\\\">\\n                                            <div *ngIf=\\\"addForm.hasError('required','description')\\\" class=\\\"err-msg\\\">\\n                                                Sales description is required.\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"name\\\" class=\\\"w-100\\\">Purchase Description:</label>\\n                                        <textarea formControlName=\\\"purchase_info\\\" class=\\\"form-control\\\"\\n                                            style=\\\"resize:none;\\\" name=\\\"textarea-input\\\" rows=\\\"9\\\"\\n                                            placeholder=\\\"Purchase Description\\\" spellcheck=\\\"false\\\"></textarea>\\n                                        <div class=\\\"error\\\"\\n                                            *ngIf=\\\"(submitted && addForm.controls.purchase_info.invalid) || addForm.controls.purchase_info.touched\\\">\\n                                            <div *ngIf=\\\"addForm.hasError('required','purchase_info')\\\" class=\\\"err-msg\\\">\\n                                                Purchase description is required.\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"border-bottom p-2 mb-3 w-100\\\"></div>\\n                        <!-- <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Upload Product Barcode :</label>\\n                                <input (change)=\\\"onBarcodeFileChange($event)\\\" formControlName=\\\"barcode_image\\\" class=\\\"form-control\\\" type=\\\"file\\\" placeholder=\\\"Enter Product Barcode \\\">\\n                                <div class=\\\"error\\\"\\n                                          *ngIf=\\\"(submitted && addForm.controls.barcode_image.invalid) || addForm.controls.barcode_image.touched\\\">\\n                                          <div *ngIf=\\\"addForm.hasError('required','barcode_image')\\\" class=\\\"err-msg\\\">Barcode image is required.\\n                                          </div>\\n                                          <div *ngIf=\\\"!addForm.hasError('required','barcode_image') && addForm.controls.barcode_image.invalid\\\" class=\\\"err-msg\\\">\\n                                            Please upload valid barcode image.\\n                                          </div>\\n                                        </div>\\n                                        <div style=\\\"margin: 11px;\\\" class=\\\"mb-3\\\" *ngIf=\\\"barcode_imageUrl\\\"><img src=\\\"{{barcode_imageUrl}}\\\" height=\\\"150\\\" width=\\\"200\\\"></div>\\n                            </div>\\n                        </div> -->\\n\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"name\\\" class=\\\"w-100\\\">Product Barcode :</label>\\n                                        <input formControlName=\\\"barcode\\\" class=\\\"form-control\\\" type=\\\"text\\\"\\n                                            placeholder=\\\"Barcode\\\" (change)=\\\"changeBarcodeValue()\\\">\\n                                        <div class=\\\"error\\\"\\n                                            *ngIf=\\\"(submitted && addForm.controls.barcode.invalid) || addForm.controls.barcode.touched\\\">\\n                                            <div *ngIf=\\\"addForm.hasError('required','barcode')\\\" class=\\\"err-msg\\\">Barcode is\\n                                                required.\\n                                            </div>\\n                                            <div *ngIf=\\\"!addForm.hasError('required','barcode') && addForm.controls.barcode.invalid\\\"\\n                                                class=\\\"err-msg\\\">\\n                                                Please enter valid barcode.\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"name\\\" class=\\\"w-100\\\">Item Number :</label>\\n                                        <input formControlName=\\\"item_number\\\" class=\\\"form-control\\\" type=\\\"text\\\"\\n                                        placeholder=\\\"Item Number\\\">\\n                                    <div class=\\\"error\\\"\\n                                        *ngIf=\\\"(submitted && addForm.controls.item_number.invalid) || addForm.controls.item_number.touched\\\">\\n                                        <div *ngIf=\\\"addForm.hasError('required','item_number')\\\" class=\\\"err-msg\\\">Item number\\n                                            is required.\\n                                        </div>\\n                                        <div *ngIf=\\\"!addForm.hasError('required','item_number') && addForm.controls.item_number.invalid\\\"\\n                                            class=\\\"err-msg\\\">\\n                                            Please enter valid item number.\\n                                        </div>\\n                                    </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Weight :</label>\\n                                <input formControlName=\\\"weight\\\" class=\\\"form-control\\\" type=\\\"text\\\"\\n                                    placeholder=\\\"Weight\\\">\\n                                <div class=\\\"error\\\"\\n                                    *ngIf=\\\"(submitted && addForm.controls.weight.invalid) || addForm.controls.weight.touched\\\">\\n                                    <div *ngIf=\\\"addForm.hasError('required','weight')\\\" class=\\\"err-msg\\\">Weight is\\n                                        required.\\n                                    </div>\\n                                    <div *ngIf=\\\"!addForm.hasError('required','weight') && addForm.controls.weight.invalid\\\"\\n                                        class=\\\"err-msg\\\">\\n                                        Please enter valid weight.\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row px-3\\\">\\n                            <div class=\\\"col-sm-12 mt-2\\\">\\n                                <button class=\\\"btn btn-md btn-dark mr-3\\\" type=\\\"submit\\\">ADD</button>\\n                                <button class=\\\"btn btn-md btn-danger mr-3\\\" type=\\\"reset\\\"\\n                                    (click)=\\\"addForm.reset()\\\">Reset</button>\\n                                <button class=\\\"btn btn-md btn-secondary\\\" type=\\\"button\\\"\\n                                    [routerLink]=\\\"['/inventory-management']\\\" [queryParams]='{vendor: filterVendor, category: filterCategory, product: filterProduct, stock: filterQuantity, limit: tableLimit, firstTime: true}'>Cancel</button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"animated fadeIn\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n        <div class=\\\"col-sm-6\\\">\\n            <form class=\\\"card\\\" [formGroup]=\\\"addForm\\\" (ngSubmit)=\\\"submitAddForm()\\\" #formDir=\\\"ngForm\\\" novalidate>\\n                <div class=\\\"card-header\\\">Adjust Quantity</div>\\n                <div class=\\\"card-body p-4\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Date :</label>\\n                                <input formControlName=\\\"date\\\" type=\\\"text\\\" placeholder=\\\"Date\\\" class=\\\"form-control\\\" [bsConfig]=\\\"{dateInputFormat: 'MM-DD-YYYY'}\\\"\\n                                    bsDatepicker>\\n                                <div class=\\\"error\\\"\\n                                    *ngIf=\\\"(submitted && addForm.controls.date.invalid) || addForm.controls.date.touched\\\">\\n                                    <div *ngIf=\\\"addForm.hasError('required','date')\\\" class=\\\"err-msg\\\">Date is required.\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Product Name :</label>\\n                                <input formControlName=\\\"name\\\" class=\\\"form-control\\\" type=\\\"text\\\" readonly\\n                                    value=\\\"Ramdev Masala Garam Masala 100 Grams\\\" placeholder=\\\"Enter Product Name\\\">\\n                                <div class=\\\"error\\\"\\n                                    *ngIf=\\\"(submitted && addForm.controls.name.invalid) || addForm.controls.name.touched\\\">\\n                                    <div *ngIf=\\\"addForm.hasError('required','name')\\\" class=\\\"err-msg\\\">Product name is\\n                                        required.\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Quantity On Hand :</label>\\n                                <input formControlName=\\\"available_quantity\\\" class=\\\"form-control\\\" type=\\\"number\\\"\\n                                    value=\\\"10\\\" readonly placeholder=\\\"Enter Quantity On Hand\\\">\\n                                <div class=\\\"error\\\"\\n                                    *ngIf=\\\"(submitted && addForm.controls.available_quantity.invalid) || addForm.controls.available_quantity.touched\\\">\\n                                    <div *ngIf=\\\"addForm.hasError('required','available_quantity')\\\" class=\\\"err-msg\\\">\\n                                        Available quantity is required.\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"name\\\" class=\\\"w-100\\\">New Quantity:</label>\\n                                        <input formControlName=\\\"quantity\\\" class=\\\"form-control\\\" type=\\\"number\\\"\\n                                            placeholder=\\\"Enter New Quantity\\\" (keyup)=\\\"chnageQunatity()\\\">\\n                                        <div class=\\\"error\\\"\\n                                            *ngIf=\\\"(submitted && addForm.controls.quantity.invalid) || addForm.controls.quantity.touched\\\">\\n                                            <div *ngIf=\\\"addForm.hasError('required','quantity')\\\" class=\\\"err-msg\\\">\\n                                                Quantity is required.\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"name\\\" class=\\\"w-100\\\">New Purchase Price:</label>\\n                                        <input formControlName=\\\"new_purchase_price\\\" class=\\\"form-control\\\" type=\\\"number\\\"\\n                                            placeholder=\\\"Enter New Purchase Price\\\">\\n                                        <div class=\\\"error\\\"\\n                                            *ngIf=\\\"(submitted && addForm.controls.new_price.invalid) || addForm.controls.new_price.touched\\\">\\n                                            <div *ngIf=\\\"addForm.hasError('required','new_price')\\\" class=\\\"err-msg\\\">Sale\\n                                                price is required.\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"name\\\" class=\\\"w-100\\\">New Sales Price:</label>\\n                                        <input formControlName=\\\"new_price\\\" class=\\\"form-control\\\" type=\\\"number\\\"\\n                                            placeholder=\\\"Enter New Sales Price\\\">\\n                                        <div class=\\\"error\\\"\\n                                            *ngIf=\\\"(submitted && addForm.controls.new_price.invalid) || addForm.controls.new_price.touched\\\">\\n                                            <div *ngIf=\\\"addForm.hasError('required','new_price')\\\" class=\\\"err-msg\\\">Sale\\n                                                price is required.\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Total Quantity :</label>\\n                                <input [(ngModel)]=\\\"totalQunatity\\\" formControlName=\\\"total\\\" class=\\\"form-control\\\"\\n                                    type=\\\"number\\\" readonly placeholder=\\\"Enter Total Quantity\\\">\\n                                <div class=\\\"error\\\"\\n                                    *ngIf=\\\"(submitted && addForm.controls.total.invalid) || addForm.controls.total.touched\\\">\\n                                    <div *ngIf=\\\"addForm.hasError('required','total')\\\" class=\\\"err-msg\\\">Total is required.\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"name\\\" class=\\\"w-100\\\">Old Purchase Price :</label>\\n                                        <input formControlName=\\\"purchase_price\\\" class=\\\"form-control\\\" type=\\\"number\\\"\\n                                            placeholder=\\\"Enter Purchase Price\\\" readonly>\\n                                        <div class=\\\"error\\\"\\n                                            *ngIf=\\\"(submitted && addForm.controls.purchase_price.invalid) || addForm.controls.purchase_price.touched\\\">\\n                                            <div *ngIf=\\\"addForm.hasError('required','purchase_price')\\\" class=\\\"err-msg\\\">\\n                                                Purchase price is required.\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"name\\\" class=\\\"w-100\\\">Old Sales Price :</label>\\n                                        <input formControlName=\\\"sale_price\\\" class=\\\"form-control\\\" type=\\\"number\\\"\\n                                            placeholder=\\\"Enter Sales Price\\\" readonly>\\n                                        <div class=\\\"error\\\"\\n                                            *ngIf=\\\"(submitted && addForm.controls.sale_price.invalid) || addForm.controls.sale_price.touched\\\">\\n                                            <div *ngIf=\\\"addForm.hasError('required','sale_price')\\\" class=\\\"err-msg\\\">\\n                                                Sales price is required.\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Note :</label>\\n                                <!-- <input [(ngModel)]=\\\"totalQunatity\\\" formControlName=\\\"total\\\" class=\\\"form-control\\\"\\n                                    type=\\\"number\\\" readonly placeholder=\\\"Enter Note\\\"> -->\\n                                <textarea rows=\\\"4\\\" formControlName=\\\"note\\\" class=\\\"form-control\\\"\\n                                    placeholder=\\\"Enter Note\\\"></textarea>\\n                                <div class=\\\"error\\\"\\n                                    *ngIf=\\\"(submitted && addForm.controls.total.invalid) || addForm.controls.total.touched\\\">\\n                                    <div *ngIf=\\\"addForm.hasError('required','total')\\\" class=\\\"err-msg\\\">Total is required.\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12 mt-2\\\">\\n                            <button class=\\\"btn btn-md btn-dark mr-3\\\" type=\\\"submit\\\">Save</button>\\n                            <button *ngIf=\\\"redirect == 0\\\" class=\\\"btn btn-md btn-secondary\\\" type=\\\"button\\\"\\n                                [routerLink]=\\\"['/inventory-management/edit-inventory']\\\"\\n                                [queryParams]='{id: productId,vendor: filterVendor, category: filterCategory, product: filterProduct, stock: filterQuantity, limit: tableLimit, firstTime: true, search: searchValue}'>Cancel</button>\\n                            <button *ngIf=\\\"redirect == 2\\\" class=\\\"btn btn-md btn-secondary\\\" type=\\\"button\\\"\\n                                [routerLink]=\\\"['/inventory-management']\\\"\\n                                [queryParams]='{vendor: filterVendor, category: filterCategory, product: filterProduct, stock: filterQuantity, limit: tableLimit, firstTime: true, search: searchValue}'>Cancel</button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"animated fadeIn\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n        <div class=\\\"col-sm-12\\\">\\n            <form class=\\\"card\\\" [formGroup]=\\\"editForm\\\" (ngSubmit)=\\\"submitEditForm()\\\" #formDir=\\\"ngForm\\\" novalidate>\\n                <div class=\\\"card-header d-flex justify-content-between align-items-center\\\">Product Edit\\n                    <div class=\\\"pull-right\\\">\\n                        <a [routerLink]=\\\"['/inventory-management']\\\"\\n                            [queryParams]='{vendor: filterVendor, category: filterCategory, product: filterProduct, stock: filterQuantity, limit: tableLimit, firstTime: true, search: searchValue}'\\n                            class=\\\"btn btn-md btn-secondary\\\" type=\\\"button\\\">Back</a>\\n                    </div>\\n                </div>\\n                <div class=\\\"card-body p-4\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Product Name :</label>\\n                                <input formControlName=\\\"name\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\"\\n                                    placeholder=\\\"Enter Product Name\\\">\\n                                <div class=\\\"error\\\"\\n                                    *ngIf=\\\"(submitted && editForm.controls.name.invalid) || editForm.controls.name.touched\\\">\\n                                    <div *ngIf=\\\"editForm.hasError('required','name')\\\" class=\\\"err-msg\\\">Product name is\\n                                        required.\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Product Status :</label>\\n                                <!-- <select class=\\\"form-control\\\" formControlName=\\\"status\\\" disabled>\\n                                    <option>Active</option>\\n                                    <option>Inactive</option>\\n                                </select> -->\\n                                <input formControlName=\\\"status\\\" class=\\\"form-control\\\" type=\\\"text\\\"\\n                                    placeholder=\\\"Product Status\\\" readonly>\\n                                <!-- <div class=\\\"error\\\"\\n                                    *ngIf=\\\"(submitted && editForm.controls.name.invalid) || editForm.controls.name.touched\\\">\\n                                    <div *ngIf=\\\"editForm.hasError('required','name')\\\" class=\\\"err-msg\\\">Product name is\\n                                        required.\\n                                    </div>\\n                                </div> -->\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"name\\\" class=\\\"w-100\\\">Select Product Category :</label>\\n                                        <select [(ngModel)]=\\\"selectedcategory\\\" formControlName=\\\"category\\\"\\n                                            class=\\\"form-control\\\">\\n                                            <option value=\\\"\\\">Select Product Category</option>\\n                                            <option *ngFor=\\\"let category of categoryData\\\" [value]=\\\"category.id\\\">\\n                                                {{category.name}}</option>\\n                                        </select>\\n                                        <div class=\\\"error\\\"\\n                                            *ngIf=\\\"(submitted && editForm.controls.category.invalid) || editForm.controls.category.touched\\\">\\n                                            <div *ngIf=\\\"editForm.hasError('required','category')\\\" class=\\\"err-msg\\\">\\n                                                Product category is required.\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"name\\\" class=\\\"w-100\\\">Select Vendor :</label>\\n                                        <div class=\\\"form-group\\\">\\n                                            <select [(ngModel)]=\\\"selectedVendor\\\" formControlName=\\\"vendor\\\"\\n                                                class=\\\"form-control\\\">\\n                                                <option value=\\\"\\\">Select Vendor</option>\\n                                                <option *ngFor=\\\"let vendor of vendorData\\\" [value]=\\\"vendor.id\\\">\\n                                                    {{vendor.name}}</option>\\n                                            </select>\\n                                            <div class=\\\"error\\\"\\n                                                *ngIf=\\\"(submitted && editForm.controls.vendor.invalid) || editForm.controls.vendor.touched\\\">\\n                                                <div *ngIf=\\\"editForm.hasError('required','vendor')\\\" class=\\\"err-msg\\\">\\n                                                    Vendor is required.\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <!-- <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Select Pack Size :</label>\\n                                <select [(ngModel)]=\\\"selectedPackSize\\\" formControlName=\\\"pack_size\\\" class=\\\"form-control\\\">\\n                                    <option value=\\\"\\\">Select Pack Size</option>\\n                                    <option *ngFor=\\\"let packSize of packSizeData\\\" [value]=\\\"packSize.id\\\">{{packSize.size}}</option>\\n                                </select>\\n                                <div class=\\\"error\\\"\\n                                          *ngIf=\\\"(submitted && editForm.controls.pack_size.invalid) || editForm.controls.pack_size.touched\\\">\\n                                          <div *ngIf=\\\"editForm.hasError('required','pack_size')\\\" class=\\\"err-msg\\\">Pack size is required.\\n                                          </div>\\n                                        </div>\\n                            </div>\\n                        </div> -->\\n                        <div class=\\\"border-bottom p-2 mb-3 w-100\\\"></div>\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"name\\\" class=\\\"w-100\\\">Quantity On Hand :</label>\\n                                        <input formControlName=\\\"available_quantity\\\" class=\\\"form-control\\\" id=\\\"name\\\"\\n                                            type=\\\"number\\\" placeholder=\\\"Enter Quantity On Hand\\\" disabled>\\n                                        <div class=\\\"error\\\"\\n                                            *ngIf=\\\"(submitted && editForm.controls.available_quantity.invalid) || editForm.controls.available_quantity.touched\\\">\\n                                            <div *ngIf=\\\"editForm.hasError('required','available_quantity')\\\"\\n                                                class=\\\"err-msg\\\">Quantity on hand is required.\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"name\\\" class=\\\"w-100\\\">As of Date - Default Today's Date :</label>\\n                                        <input [(ngModel)]=\\\"selectedDate\\\" formControlName=\\\"updated_on\\\"\\n                                            class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"date\\\" placeholder=\\\"Enter Today's Date\\\">\\n                                        <div class=\\\"error\\\"\\n                                            *ngIf=\\\"(submitted && editForm.controls.updated_on.invalid) || editForm.controls.updated_on.touched\\\">\\n                                            <div *ngIf=\\\"editForm.hasError('required','updated_on')\\\" class=\\\"err-msg\\\">Date\\n                                                is required.\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"name\\\" class=\\\"w-100\\\">Add Reorder Point of Quantity :</label>\\n                                        <input formControlName=\\\"low_stock_qauntity\\\" class=\\\"form-control\\\" id=\\\"name\\\"\\n                                            type=\\\"number\\\" placeholder=\\\"Enter Reorder Point of Quantity\\\">\\n                                        <div class=\\\"error\\\"\\n                                            *ngIf=\\\"(submitted && editForm.controls.low_stock_qauntity.invalid) || editForm.controls.low_stock_qauntity.touched\\\">\\n                                            <div *ngIf=\\\"editForm.hasError('required','low_stock_qauntity')\\\"\\n                                                class=\\\"err-msg\\\">Reorder point is required.\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-6 d-flex align-items-center pt-3\\\">\\n                                    <button class=\\\"btn btn-md btn-dark mr-3\\\" type=\\\"button\\\"\\n                                        [routerLink]=\\\"['/inventory-management/adjust-quantity']\\\"\\n                                        [queryParams]='{id: productId,redirect: 0,vendor: filterVendor, category: filterCategory, product: filterProduct, stock: filterQuantity, limit: tableLimit, firstTime: true, search: searchValue}'>Adjust\\n                                        Product Quantity</button>\\n                                    <button class=\\\"btn btn-md btn-dark mr-3\\\" type=\\\"button\\\"\\n                                        (click)=\\\"salespricemodal.show();\\\">Set Sales\\n                                        Price</button>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Warehouse Location :</label>\\n                                <input class=\\\"form-control\\\" formControlName=\\\"location\\\" id=\\\"name\\\" type=\\\"text\\\"\\n                                    placeholder=\\\"Enter Warehouse Location\\\">\\n                                <div class=\\\"error\\\"\\n                                    *ngIf=\\\"(submitted && editForm.controls.location.invalid) || editForm.controls.location.touched\\\">\\n                                    <div *ngIf=\\\"editForm.hasError('required','location')\\\" class=\\\"err-msg\\\">Location is\\n                                        required.\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"border-bottom p-2 mb-3 w-100\\\"></div>\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"name\\\" class=\\\"w-100\\\">Sales Price :</label>\\n                                        <input formControlName=\\\"sale_price\\\" class=\\\"form-control\\\" type=\\\"number\\\"\\n                                            placeholder=\\\"Enter Sales Price\\\" disabled>\\n                                        <div class=\\\"error\\\"\\n                                            *ngIf=\\\"(submitted && editForm.controls.sale_price.invalid) || editForm.controls.sale_price.touched\\\">\\n                                            <div *ngIf=\\\"editForm.hasError('required','sale_price')\\\" class=\\\"err-msg\\\">Sale\\n                                                price is required.\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"name\\\" class=\\\"w-100\\\">Purchase Price:</label>\\n                                        <input formControlName=\\\"purchase_cost\\\" class=\\\"form-control\\\" type=\\\"number\\\"\\n                                            placeholder=\\\"Enter Purchase Price\\\" disabled>\\n                                        <div class=\\\"error\\\"\\n                                            *ngIf=\\\"(submitted && editForm.controls.purchase_cost.invalid) || editForm.controls.purchase_cost.touched\\\">\\n                                            <div *ngIf=\\\"editForm.hasError('required','purchase_cost')\\\" class=\\\"err-msg\\\">\\n                                                Purchase Price is required.\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"name\\\" class=\\\"w-100\\\">Sales Description :</label>\\n                                        <textarea formControlName=\\\"description\\\" class=\\\"form-control\\\"\\n                                            style=\\\"resize:none;\\\" name=\\\"textarea-input\\\" rows=\\\"9\\\"\\n                                            placeholder=\\\"Sales Description\\\" spellcheck=\\\"false\\\"></textarea>\\n                                        <div class=\\\"error\\\"\\n                                            *ngIf=\\\"(submitted && editForm.controls.description.invalid) || editForm.controls.description.touched\\\">\\n                                            <div *ngIf=\\\"editForm.hasError('required','description')\\\" class=\\\"err-msg\\\">\\n                                                Sales description is required.\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"name\\\" class=\\\"w-100\\\">Purchase Description:</label>\\n                                        <textarea formControlName=\\\"purchase_info\\\" class=\\\"form-control\\\"\\n                                            style=\\\"resize:none;\\\" name=\\\"textarea-input\\\" rows=\\\"9\\\"\\n                                            placeholder=\\\"Purchase Description\\\" spellcheck=\\\"false\\\"></textarea>\\n                                        <div class=\\\"error\\\"\\n                                            *ngIf=\\\"(submitted && editForm.controls.purchase_info.invalid) || editForm.controls.purchase_info.touched\\\">\\n                                            <div *ngIf=\\\"editForm.hasError('required','purchase_info')\\\" class=\\\"err-msg\\\">\\n                                                Purchase description is required.\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"border-bottom p-2 mb-3 w-100\\\"></div>\\n                        <!-- <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Upload Product Barcode :</label>\\n                                <input (change)=\\\"onBarcodeFileChange($event)\\\" formControlName=\\\"barcode_image\\\" class=\\\"form-control\\\" type=\\\"file\\\" placeholder=\\\"Enter Product Barcode \\\">\\n                                <div class=\\\"error\\\"\\n                                          *ngIf=\\\"(submitted && editForm.controls.barcode_image.invalid) || editForm.controls.barcode_image.touched\\\">\\n                                          <div *ngIf=\\\"editForm.hasError('required','barcode_image')\\\" class=\\\"err-msg\\\">Barcode image is required.\\n                                          </div>\\n                                          <div *ngIf=\\\"!editForm.hasError('required','barcode_image') && editForm.controls.barcode_image.invalid\\\" class=\\\"err-msg\\\">\\n                                            Please upload valid barcode image.\\n                                          </div>\\n                                        </div>\\n                                        <div style=\\\"margin: 11px;\\\" class=\\\"mb-3\\\" *ngIf=\\\"barcode_imageUrl\\\"><img src=\\\"{{barcode_imageUrl}}\\\" height=\\\"150\\\" width=\\\"200\\\"></div>\\n                            </div>\\n                        </div> -->\\n\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"name\\\" class=\\\"w-100\\\">Product Barcode :</label>\\n                                        <input formControlName=\\\"barcode\\\" class=\\\"form-control\\\" type=\\\"text\\\"\\n                                            placeholder=\\\"Enter Barcode\\\" (change)=\\\"changeBarcodeValue()\\\">\\n                                        <div class=\\\"error\\\"\\n                                            *ngIf=\\\"(submitted && editForm.controls.barcode.invalid) || editForm.controls.barcode.touched\\\">\\n                                            <div *ngIf=\\\"editForm.hasError('required','barcode')\\\" class=\\\"err-msg\\\">Barcode\\n                                                is\\n                                                required.\\n                                            </div>\\n                                            <div *ngIf=\\\"!editForm.hasError('required','barcode') && editForm.controls.barcode.invalid\\\"\\n                                                class=\\\"err-msg\\\">\\n                                                Please enter valid barcode.\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"name\\\" class=\\\"w-100\\\">Item Number :</label>\\n                                        <input formControlName=\\\"item_number\\\" class=\\\"form-control\\\" type=\\\"text\\\"\\n                                            placeholder=\\\"Enter Item Number\\\">\\n                                        <div class=\\\"error\\\"\\n                                            *ngIf=\\\"(submitted && editForm.controls.item_number.invalid) || editForm.controls.item_number.touched\\\">\\n                                            <div *ngIf=\\\"editForm.hasError('required','item_number')\\\" class=\\\"err-msg\\\">\\n                                                Item number\\n                                                is required.\\n                                            </div>\\n                                            <div *ngIf=\\\"!editForm.hasError('required','item_number') && editForm.controls.item_number.invalid\\\"\\n                                                class=\\\"err-msg\\\">\\n                                                Please enter valid item number.\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Weight :</label>\\n                                <input formControlName=\\\"weight\\\" class=\\\"form-control\\\" type=\\\"text\\\"\\n                                    placeholder=\\\"Enter Weight\\\">\\n                                <div class=\\\"error\\\"\\n                                    *ngIf=\\\"(submitted && editForm.controls.weight.invalid) || editForm.controls.weight.touched\\\">\\n                                    <div *ngIf=\\\"editForm.hasError('required','weight')\\\" class=\\\"err-msg\\\">Weight is\\n                                        required.\\n                                    </div>\\n                                    <div *ngIf=\\\"!editForm.hasError('required','weight') && editForm.controls.weight.invalid\\\"\\n                                        class=\\\"err-msg\\\">\\n                                        Please enter valid weight.\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12 mt-2\\\">\\n                            <button class=\\\"btn btn-md btn-dark mr-3\\\" type=\\\"submit\\\">Edit</button>\\n                            <button class=\\\"btn btn-md btn-secondary\\\" type=\\\"button\\\"\\n                                [routerLink]=\\\"['/inventory-management']\\\"\\n                                [queryParams]='{vendor: filterVendor, category: filterCategory, product: filterProduct, stock: filterQuantity, limit: tableLimit, firstTime: true, search: searchValue}'>Cancel</button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n<div bsModal #salespricemodal=\\\"bs-modal\\\" class=\\\"modal fade text-center\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\n    aria-labelledby=\\\"Delete\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-md modal-dialog-centered\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-body py-4 text-center d-flex flex-column justify-content-center\\\">\\n                <h2 class=\\\"font-weight-bold mb-4 text-primary\\\">Set Sales Price</h2>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"name\\\" class=\\\"w-100\\\">Old Sales Price:</label>\\n                            <input [(ngModel)]=\\\"old_sales_price\\\" class=\\\"form-control\\\" type=\\\"number\\\"\\n                                placeholder=\\\"Old Sales Price\\\" readonly>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-sm-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"name\\\" class=\\\"w-100\\\">New Sales Price:</label>\\n                            <input [(ngModel)]=\\\"new_sales_price\\\" class=\\\"form-control\\\" type=\\\"number\\\"\\n                                placeholder=\\\"New Sales Price\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"modal-footer justify-content-start flex-wrap w-100 pb-0\\\">\\n                        <button type=\\\"button\\\" (click)=\\\"salesPriceChange()\\\" class=\\\"btn btn-dark mr-3\\\">Submit</button>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\"\\n                            (click)=\\\"salespricemodal.hide();\\\">Cancel</button>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row justify-content-center product-box\\\">\\n    <div class=\\\"col-md-6 col-sm-12\\\">\\n      <div class=\\\"card text-white bg-orange\\\" style=\\\"min-height: 80px;border:0;\\\">\\n        <div class=\\\"card-body pt-4\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-transparent p-0 float-right\\\">\\n          </button>\\n          <div class=\\\"text-value\\\" style=\\\"font-size: 30px;\\\">\\n            Products At Low Stock\\n            <a style=\\\"float: right;font-size: 40px;\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"changeQuantity('low_stock')\\\">\\n              {{dashboardData?.low_stock}}\\n            </a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-6 col-sm-12\\\">\\n      <div class=\\\"card text-white bg-orange\\\" style=\\\"min-height: 80px;border:0;\\\">\\n        <div class=\\\"card-body pt-4\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-transparent p-0 float-right\\\">\\n          </button>\\n          <div class=\\\"text-value\\\" style=\\\"font-size: 30px;\\\">\\n            Products Out of Stock\\n            <a style=\\\"float: right;font-size: 40px;\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"changeQuantity('out_of_stock')\\\">\\n              {{dashboardData?.product_out_of_stock}}\\n            </a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"card\\\">\\n        <!-- <div class=\\\"card-header\\\">Product Management</div> -->\\n        <div class=\\\"card-header d-flex justify-content-between align-items-center\\\">Product Management\\n          <div class=\\\"d-flex flex-wrap justify-content-end align-items-center\\\">\\n            <div class=\\\"pull-right mr-2\\\">\\n              <button class=\\\"btn btn-md btn-primary\\\" type=\\\"button\\\"\\n                [routerLink]=\\\"['/inventory-management/add-inventory']\\\"\\n                [queryParams]='{vendor: selectedVendor, category: selectedcategory, product: selectedProductIdArray, quantity: selectedQuantity, limit: tableLimit, firstTime: firstTime, search: searchValue}'>\\n                <i class=\\\"fa fa-plus mr-2\\\"></i>\\n                Add New Product\\n              </button>\\n            </div>\\n            <div class=\\\"dropdown pull-right\\\">\\n              <button (click)=\\\"commonService.toggleDropDown()\\\" class=\\\"btn btn-md btn-primary dropbtn\\\" type=\\\"button\\\">\\n                <i class=\\\"fa fa-file-export mr-2\\\"></i>\\n                Export\\n              </button>\\n              <div id=\\\"myDropdown\\\" class=\\\"dropdown-content\\\">\\n                <a href=\\\"javascript:void(0)\\\" (click)=\\\"exportTable('xlsx')\\\"\\n                  style=\\\"font-size: small; text-decoration: none;\\\">\\n                  Export to XLSX\\n                </a>\\n                <!-- <a href=\\\"javascript:void(0)\\\"\\n                        (click)=\\\"commonService.exportPDF(false, 0, 'avarageProductList')\\\">Export to PDF</a> -->\\n                <!-- <a href=\\\"javascript:void(0)\\\" (click)=\\\"exportTable('pdf')\\\">Export to PDF</a> -->\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"card-body p-4\\\">\\n          <div class=\\\"row justify-content-start align-items-center mb-2\\\">\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label>Stock availability</label>\\n              <select (change)=\\\"rerender()\\\" [(ngModel)]=\\\"selectedQuantity\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                class=\\\"form-control\\\">\\n                <option value=\\\"\\\">All</option>\\n                <option value=\\\"out_of_stock\\\">Out of Stock</option>\\n                <option value=\\\"low_stock\\\">Low Stock</option>\\n              </select>\\n            </div>\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label>Category</label>\\n              <select (change)=\\\"rerender()\\\" [(ngModel)]=\\\"selectedcategory\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                class=\\\"form-control\\\">\\n                <option value=\\\"\\\">All</option>\\n                <option *ngFor=\\\"let category of categoryData\\\" [value]=\\\"category.id\\\">{{category.name}}\\n                </option>\\n              </select>\\n            </div>\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label>Vendor</label>\\n              <select (change)=\\\"rerender()\\\" [(ngModel)]=\\\"selectedVendor\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                class=\\\"form-control\\\">\\n                <option value=\\\"\\\">All</option>\\n                <option *ngFor=\\\"let vendor of vendorData\\\" [value]=\\\"vendor.id\\\">{{vendor.name}}</option>\\n              </select>\\n            </div>\\n            <!-- <div style=\\\"margin-top: 25px;\\\" class=\\\"form-group\\\">\\n              <button class=\\\"btn btn-md btn-primary\\\" type=\\\"button\\\"\\n                [routerLink]=\\\"['/inventory-management/add-inventory']\\\"\\n                [queryParams]='{vendor: selectedVendor, category: selectedcategory, product: selectedProductIdArray, quantity: selectedQuantity, limit: tableLimit, firstTime: firstTime, search: searchValue}'><i\\n                  class=\\\"fa fa-plus mr-2\\n                        \\\"></i>Add New Product</button>\\n            </div>\\n            <div class=\\\"form-group dropdown\\\" style=\\\"float: right; margin-top: 25px;\\\">\\n              <button (click)=\\\"commonService.toggleDropDown()\\\" class=\\\"btn btn-md btn-primary dropbtn\\\" type=\\\"button\\\"><i\\n                  class=\\\"fa fa-file-export mr-2\\n                            \\\"></i>Export</button>\\n              <div id=\\\"myDropdown\\\" class=\\\"dropdown-content\\\">\\n                <a href=\\\"javascript:void(0)\\\" (click)=\\\"exportTable('xlsx')\\\">Export to XLSX</a> -->\\n            <!-- <a href=\\\"javascript:void(0)\\\"\\n                                    (click)=\\\"commonService.exportPDF(true, 8, 'productList');rerender();\\\">Export to\\n                                    PDF</a> -->\\n            <!-- <a href=\\\"javascript:void(0)\\\" (click)=\\\"exportTable('pdf')\\\">Export to\\n                                    PDF</a> -->\\n            <!-- </div>\\n            </div> -->\\n            <div class=\\\"form-group col-md-12\\\">\\n              <label>Product Name</label>\\n              <!-- <select (change)=\\\"rerender()\\\" [(ngModel)]=\\\"selectedProduct\\\"\\n                              [ngModelOptions]=\\\"{standalone: true}\\\" class=\\\"form-control\\\">\\n                              <option value=\\\"\\\">All</option>\\n                              <option *ngFor=\\\"let product of productDropdownData\\\" [value]=\\\"product.name\\\">\\n                                  {{product.name}}</option>\\n                          </select> -->\\n              <ng-multiselect-dropdown [placeholder]=\\\"'All'\\\" [settings]=\\\"dropdownSettings\\\" [data]=\\\"productDropdownData\\\"\\n                [(ngModel)]=\\\"selectedProduct\\\" (onSelect)=\\\"onSelectProduct($event)\\\"\\n                (onSelectAll)=\\\"onSelectAllProduct($event)\\\" (onDeSelect)=\\\"onDeSelectProduct($event)\\\"\\n                (onDeSelectAll)=\\\"onDeSelectAllProduct()\\\">\\n              </ng-multiselect-dropdown>\\n            </div>\\n          </div>\\n          <!-- <perfect-scrollbar>\\n            <div class=\\\"responsive-table rounded mb-4\\\"> -->\\n          <table datatable [dtOptions]=\\\"dtOptions\\\" [dtTrigger]=\\\"dtTrigger\\\" style=\\\"width: 100%;\\\"\\n            class=\\\"data row-border hover table order-table border\\\" id=\\\"excel-table\\\">\\n            <thead>\\n              <tr>\\n                <th style=\\\"padding:12px !important;\\\">Status</th>\\n                <th>Category</th>\\n                <th>Item <br> Number</th>\\n                <th style=\\\"min-width: 100px;\\\">Name</th>\\n                <th>Weight</th>\\n                <th style=\\\"min-width: 10px;\\\">Quantity <br> On Hand</th>\\n                <th>Sales <br> Price</th>\\n                <th>Avg.<br> Purchase<br> Price</th>\\n                <th>Margin</th>\\n                <th>Mark up</th>\\n                <th id=\\\"last-header\\\">Action</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let product of productList;let i = index;\\\">\\n                <td style=\\\"text-align: center;padding: 0;\\\">\\n                  <i class=\\\"fa fa-check\\\" *ngIf=\\\"product.is_active\\\" style=\\\"color: green; cursor: pointer;\\\"\\n                    (click)=\\\"productStatus = product.is_active;statusModal.show();saveId(product?.id);\\\"></i>\\n                  <i class=\\\"fa fa-times\\\" *ngIf=\\\"!product.is_active\\\" style=\\\"color: red; cursor: pointer;\\\"\\n                    (click)=\\\"productStatus = product.is_active; statusModal.show();saveId(product?.id);\\\"></i>\\n                </td>\\n                <td>{{product.category_name || \\\"-\\\"}}</td>\\n                <td>\\n                  <a class=\\\"text-dark mx-2\\\" [routerLink]=\\\"['/inventory-management/edit-inventory']\\\"\\n                    [queryParams]='{id: product?.id, vendor: selectedVendor, category: selectedcategory, product: selectedProductIdArray, quantity: selectedQuantity, limit: tableLimit, firstTime: true, search: searchValue}'>\\n                    <span class=\\\"anchor-tag\\\">\\n                      {{product.item_no || \\\"-\\\"}}\\n                    </span>\\n                  </a>\\n                </td>\\n                <!-- <td>\\n                  <a class=\\\"text-dark mx-2\\\" [routerLink]=\\\"['/inventory-management/edit-inventory']\\\"\\n                    [queryParams]='{id: product?.id, vendor: selectedVendor, category: selectedcategory, product: selectedProductIdArray, quantity: selectedQuantity, limit: tableLimit, firstTime: true, search: searchValue}'>\\n                    <span class=\\\"anchor-tag\\\">\\n                      {{product.barcode_string || \\\"-\\\"}}\\n                    </span>\\n                  </a>\\n                </td> -->\\n                <td style=\\\"text-align: left; white-space: nowrap;\\\">\\n                  <a class=\\\"text-dark\\\" [routerLink]=\\\"['/inventory-management/edit-inventory']\\\"\\n                    [queryParams]='{id: product?.id, vendor: selectedVendor, category: selectedcategory, product: selectedProductIdArray, quantity: selectedQuantity, limit: tableLimit, firstTime: true, search: searchValue}'>\\n                    <span class=\\\"anchor-tag\\\">\\n                      {{product.name || \\\"-\\\"}}\\n                    </span>\\n                  </a>\\n                </td>\\n                <td>{{product.weight ? (product.weight+\\\" lbs\\\") : \\\"0 lbs\\\"}}</td>\\n                <td>{{product.available_quantity ? (product.available_quantity | number :\\n                  '1.2-2') : \\\"0.00\\\"}}</td>\\n                <td>{{product.sale_price ? (\\\"$\\\"+(product.sale_price | number : '1.2-2')) :\\n                  \\\"$0.00\\\"}}</td>\\n                <!-- <td>{{product.purchase_cost ? (\\\"$\\\"+(product.purchase_cost | number : '1.2-2')) :\\n                                            \\\"$0.00\\\"}}</td> -->\\n                <!-- <td>{{product.average_purchase_price ? (\\\"$\\\"+(product.average_purchase_price |\\n                                            number : '1.2-2')) :\\n                                            \\\"$0.00\\\"}}</td> -->\\n                <td>{{product.average_purchase_price ? (\\\"$\\\"+(product.average_purchase_price |\\n                  number : '1.2-2')) :\\n                  (\\\"$\\\"+(product.purchase_cost |\\n                  number : '1.2-2'))}}</td>\\n                <!-- <td>${{((product.sale_price - product.purchase_cost) | number : '.2-2')}}</td>\\n                                        <td>{{(((product.sale_price - product.purchase_cost) * 100\\n                                            )/product.purchase_cost) | number : '.2-2'}}%</td> -->\\n                <td>{{product.margin ? (\\\"$\\\"+(product.margin | number : '1.2-2')) : \\\"$0.00\\\"}}</td>\\n                <td>{{product.mark_up ? ((product.mark_up | number : '1.2-2')+\\\"%\\\") : \\\"0.00%\\\"}}\\n                </td>\\n                <!-- <td>\\n                                        <div *ngIf=\\\"product.description.length>30\\\" style=\\\"resize: none;height: 94px;width: 300px;overflow: auto;\\\"><span [outerHTML]=\\\"product?.description\\\">\\n                                        </span>\\n                                        </div>\\n                                        <ng-container *ngIf=\\\"product.description.length<30\\\">\\n                                            {{product?.description}}\\n                                        </ng-container></td> -->\\n\\n                <td>\\n                  <div class=\\\"d-flex align-items-center justify-content-center\\\">\\n                    <a class=\\\"text-dark mx-2\\\" [routerLink]=\\\"['/inventory-management/adjust-quantity']\\\"\\n                      [queryParams]='{id: product?.id,redirect: 2, vendor: selectedVendor, category: selectedcategory, product: selectedProductIdArray, quantity: selectedQuantity, limit: tableLimit, search: searchValue}'><i\\n                        class=\\\"fa fa-adjust\\\"></i></a>\\n                    <a class=\\\"text-dark mx-2\\\" [routerLink]=\\\"['/inventory-management/edit-inventory']\\\"\\n                      [queryParams]='{id: product?.id, vendor: selectedVendor, category: selectedcategory, product: selectedProductIdArray, quantity: selectedQuantity, limit: tableLimit, search: searchValue}'><i\\n                        class=\\\"fa fa-pencil\\\"></i></a>\\n                    <a class=\\\"text-danger mx-2\\\" href=\\\"javascript:void(0)\\\"\\n                      (click)=\\\"deleteModal.show();saveId(product?.id);\\\"><i class=\\\"far fa-trash-alt\\\"></i></a>\\n\\n                  </div>\\n                </td>\\n              </tr>\\n              <tr *ngIf=\\\"productList?.length == 0\\\">\\n                <td colspan=\\\"11\\\" class=\\\"no-data-available\\\">No Data Found !</td>\\n              </tr>\\n            </tbody>\\n          </table>\\n          <!-- </div>\\n          </perfect-scrollbar> -->\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\\n<!-- delete modal -->\\n<div bsModal #deleteModal=\\\"bs-modal\\\" class=\\\"modal fade text-center\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"Delete\\\"\\n  aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-sm modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-body py-4 text-center d-flex flex-column justify-content-center\\\">\\n        <h2 class=\\\"font-weight-bold mb-4 text-primary\\\">Delete</h2>\\n        <p class=\\\"mb-0\\\">Are You Sure You Want To Delete ?</p>\\n      </div>\\n      <div class=\\\"modal-footer justify-content-center\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"deleteModal.hide()\\\">Cancel</button>\\n        <button (click)=\\\"deleteProduct()\\\" type=\\\"button\\\" class=\\\"btn btn-danger\\\">Delete</button>\\n      </div>\\n    </div><!-- /.modal-content -->\\n  </div>\\n</div><!-- /.modal -->\\n\\n<div bsModal #statusModal=\\\"bs-modal\\\" class=\\\"modal fade text-center\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"Delete\\\"\\n  aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-sm modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-body py-4 text-center d-flex flex-column justify-content-center\\\">\\n        <h2 class=\\\"font-weight-bold mb-4 text-primary\\\">Status</h2>\\n        <p class=\\\"mb-0\\\">Are You Sure You Want To Change Status ?</p>\\n      </div>\\n      <div class=\\\"modal-footer justify-content-center\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"statusModal.hide()\\\">No</button>\\n        <button (click)=\\\"changeStatus()\\\" type=\\\"button\\\" class=\\\"btn btn-danger\\\">Yes</button>\\n      </div>\\n    </div><!-- /.modal-content -->\\n  </div>\\n</div>\\n\";","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\n@Injectable()\nexport class InventoryManagementService {\n\n  constructor(private http: HttpClient) { }\n\n  productlist(data): Observable<any> {\n    return this.http.post<any>(`${environment.base_url}/productlist/`, data);\n  }\n\n  productDropdownData(): Observable<any> {\n    return this.http.get<any>(`${environment.base_url}/product_only_list/`);\n  }\n\n  getDashoardInfo(): Observable<any> {\n    return this.http.get<any>(`${environment.base_url}/dashboard/`);\n  }\n\n  createProduct(data): Observable<any> {\n    return this.http.post<any>(`${environment.base_url}/create_product/`, data);\n  }\n\n  updateProduct(data, id): Observable<any> {\n    return this.http.patch<any>(`${environment.base_url}/create_product/${id}/`, data);\n  }\n\n  getVendors(data): Observable<any> {\n    return this.http.post<any>(`${environment.base_url}/vendor/listview/`, data);\n  }\n\n  getPackSize(data): Observable<any> {\n    return this.http.post<any>(`${environment.base_url}/pack/listview/`, data);\n  }\n\n  getCategories(): Observable<any> {\n    return this.http.get<any>(`${environment.base_url}/categorieslistNoPagnination/`);\n  }\n\n  deleteProduct(id): Observable<any> {\n    return this.http.delete<any>(`${environment.base_url}/create_product/${id}/`);\n  }\n\n  getProduct(id): Observable<any> {\n    return this.http.get<any>(`${environment.base_url}/product/${id}/`);\n  }\n\n  adjustQuantity(data): Observable<any> {\n    return this.http.post<any>(`${environment.base_url}/adjust_quantity/`, data);\n  }\n\n  salesPriceChange(data): Observable<any> {\n    return this.http.post<any>(`${environment.base_url}/adjust_product_data/modify_salesprice/`, data);\n  }\n\n  statusChange(data): Observable<any> {\n    return this.http.post<any>(`${environment.base_url}/adjust_product_data/change_active_status/`, data);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { InventoryManagementService } from '../../../shared/services/inventory-management.service';\nimport { Validations } from '../../../shared/validators/Validations';\nimport { RxwebValidators } from \"@rxweb/reactive-form-validators\";\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-add-inventory',\n  templateUrl: './add-inventory.component.html',\n})\nexport class AddInventoryComponent implements OnInit {\n  \n  addForm: FormGroup;\n  submitted: boolean = false;\n  categoryData: any;\n  vendorData: any;\n  packSizeData: any;\n  selectedcategory: string = '';\n  selectedVendor: string = '';\n  selectedPackSize: string = '';\n  barcode_imageUrl: string = '';\n  selectedDate: string = \"2020-10-20\";\n\n  filterVendor: any;\n  filterCategory: any;\n  filterProduct: any;\n  filterQuantity: any;\n  tableLimit: number = 10;\n  \n  constructor(\n    private titleService: Title,\n    private inventoryManagementService:InventoryManagementService,\n    private toastr: ToastrService,\n    private router:Router, \n    private route:ActivatedRoute,\n    private datePipe: DatePipe\n  ) {}\n\n  ngOnInit(): void {\n    this.selectedDate = this.datePipe.transform(new Date(), 'yyyy-MM-dd');\n\n    this.titleService.setTitle(\"Add Inventory\");\n\n    this.addForm = new FormGroup({\n      name: new FormControl('', [\n        Validators.required\n      ]),\n      category: new FormControl('', [\n        Validators.required\n      ]),\n      vendor: new FormControl('', [\n        Validators.required\n      ]),\n      // pack_size: new FormControl('', [\n      //   Validators.required\n      // ]),\n      available_quantity: new FormControl('', [\n        Validators.required\n      ]),\n      updated_on: new FormControl('', [\n        Validators.required\n      ]),\n      low_stock_qauntity: new FormControl('', [\n        Validators.required\n      ]),\n      location: new FormControl('', [\n        // Validators.required\n      ]),\n      sale_price: new FormControl('', [\n        Validators.required\n      ]),\n      description: new FormControl('', [\n        // Validators.required\n      ]),\n      purchase_cost: new FormControl('', [\n        Validators.required\n      ]),\n      purchase_info: new FormControl('', [\n        // Validators.required\n      ]),\n      barcode: new FormControl('', [\n        Validators.required\n      ]),\n      item_number: new FormControl('', [\n        Validators.required\n      ]),\n      barcode_image: new FormControl('', [\n          RxwebValidators.extension({extensions:[\"png\",\"jpg\",\"jpeg\",\"emf\",\"jpe\",\"jfif\",\"bmp\",\"gif\",\"wmf\",\"dib\",\"tif\",\"tiff\",'pdf']\n          })\n      ]),\n      barcode_imageSource: new FormControl(''),\n      weight: new FormControl('', [\n        Validators.required\n      ]),\n    });\n\n    this.route.queryParams.subscribe(param => {\n      this.filterVendor = param.vendor;\n      this.filterCategory = param.category;\n      this.filterProduct = param.product;\n      this.filterQuantity = param.quantity;\n      this.tableLimit = param.limit;\n    });\n\n    this.getProductData();\n  }\n\n  getProductData(){\n  \tthis.inventoryManagementService.getVendors(\"\").subscribe(response => {\n        let resData = JSON.parse(JSON.stringify(response));\n\n        if(resData.status_code == 200){\n          this.vendorData = resData.data;\n        }else{\n          this.toastr.error('', resData.message);\n        }\n      },\n        err => {\n          this.toastr.error('', err.error.message);\n        });\n\n        this.inventoryManagementService.getPackSize(\"\").subscribe(response => {\n        let resData = JSON.parse(JSON.stringify(response));\n\n        if(resData.status_code == 200){\n          this.packSizeData = resData.data;\n        }else{\n          this.toastr.error('', resData.message);\n        }\n      },\n        err => {\n          this.toastr.error('', err.error.message);\n        });\n\n        this.inventoryManagementService.getCategories().subscribe(response => {\n        let resData = JSON.parse(JSON.stringify(response));\n\n        if(resData.status_code == 200){\n          this.categoryData = resData.data;\n        }else{\n          this.toastr.error('', resData.message);\n        }\n      },\n        err => {\n          this.toastr.error('', err.error.message);\n        });\n  }\n\n  onBarcodeFileChange(event)\n  {\n\t  if (event.target.files.length > 0) {\n\t    const file = event.target.files[0];\n\t    if(file){\n\t      this.addForm.patchValue({\n\t        barcode_imageSource: file\n\t      });\n\t      const reader = new FileReader();\n\t      reader.onloadend = (event: any) => {\n\t        this.barcode_imageUrl = event.target.result;\n\t      };\n\t      reader.readAsDataURL(event.target.files[0]);\n\t    }\n\t  }\n\t}\n\n\tsubmitAddForm(){\n    this.submitted = true;\n\n      var formData = new FormData();\n      formData.append(\"name\", this.addForm.controls.name.value);\n      formData.append(\"category\", this.addForm.controls.category.value);\n      formData.append(\"vendor\", this.addForm.controls.vendor.value);\n      // formData.append(\"pack_size\", this.addForm.controls.pack_size.value);\n      formData.append(\"available_quantity\", this.addForm.controls.available_quantity.value);\n      formData.append(\"updated_on\", this.addForm.controls.updated_on.value);\n      formData.append(\"low_stock_qauntity\", this.addForm.controls.low_stock_qauntity.value);\n      formData.append(\"location\", this.addForm.controls.location.value);\n      formData.append(\"sale_price\", this.addForm.controls.sale_price.value);\n      formData.append(\"description\", this.addForm.controls.description.value);\n      formData.append(\"purchase_cost\", this.addForm.controls.purchase_cost.value);\n      formData.append(\"purchase_info\", this.addForm.controls.purchase_info.value);\n      // formData.append(\"barcode_image\", this.addForm.get('barcode_imageSource').value);\n      formData.append(\"barcode_string\", this.addForm.controls.barcode.value);\n      formData.append(\"weight\", this.addForm.controls.weight.value);\n      formData.append(\"item_no\", this.addForm.controls.item_number.value);\n      \n      if (this.addForm.valid) {\n      this.inventoryManagementService.createProduct(formData).subscribe(response => {\n        let resData = JSON.parse(JSON.stringify(response));\n\n        if(resData.status_code == 200){\n          this.router.navigate(['inventory-management'], { queryParams: {vendor: this.filterVendor, category: this.filterCategory, product: this.filterProduct, stock: this.filterQuantity, limit: this.tableLimit, firstTime: true} }).then(() => {\n            this.toastr.success('', \"Product added successfully!\");\n          });\n        }else{\n          this.toastr.error('', resData.message);\n        }\n      },\n        err => {\n          this.toastr.error('', err.error.message);\n        });\n\n    }\n  }\n\n  changeBarcodeValue(){\n    this.addForm.patchValue({\n      item_number: this.addForm.controls.barcode.value.substr(-6)\n    });\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { InventoryManagementService } from '../../../shared/services/inventory-management.service';\nimport { Validations } from '../../../shared/validators/Validations';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-adjust-quantity',\n  templateUrl: './adjust-quantity.component.html',\n})\nexport class AdjustQuantityComponent implements OnInit {\n\n  addForm: FormGroup;\n  submitted: boolean = false;\n  productId: string = '';\n  totalQunatity: number = 0;\n  redirect: number = 0;\n\n  filterVendor: any;\n  filterCategory: any;\n  filterProduct: any;\n  filterQuantity: any;\n  tableLimit: number = 10;\n  firstTime: boolean = false;\n  searchValue: string = \"\";\n\n  constructor(\n    private titleService: Title,\n    private inventoryManagementService: InventoryManagementService,\n    private toastr: ToastrService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private datePipe: DatePipe\n  ) { }\n\n  ngOnInit(): void {\n    this.titleService.setTitle(\"Add Inventory\");\n\n    this.addForm = new FormGroup({\n      date: new FormControl('', [\n        Validators.required\n      ]),\n      new_price: new FormControl('', [\n        Validators.required\n      ]),\n      purchase_price: new FormControl('', [\n        Validators.required\n      ]),\n      new_purchase_price: new FormControl('', [\n        Validators.required\n      ]),\n      sale_price: new FormControl('', [\n        Validators.required\n      ]),\n      quantity: new FormControl('', [\n        Validators.required\n      ]),\n      available_quantity: new FormControl(''),\n      name: new FormControl(''),\n      total: new FormControl(''),\n      note: new FormControl('')\n    });\n\n    this.getProductData();\n  }\n\n  getProductData() {\n    this.route.queryParams.subscribe(param => {\n      this.productId = param.id;\n      this.redirect = param.redirect;\n      this.filterVendor = param.vendor;\n      this.filterCategory = param.category;\n      this.filterProduct = param.product;\n      this.filterQuantity = param.quantity;\n      this.tableLimit = param.limit;\n      this.firstTime = param.firstTime;\n      this.searchValue = param.search;\n    });\n\n    this.inventoryManagementService.getProduct(this.productId).subscribe(response => {\n      let resData = JSON.parse(JSON.stringify(response));\n\n      if (resData.status_code == 200) {\n        var data = resData.data;\n\n        this.addForm.patchValue({\n          name: data.name,\n          available_quantity: data.available_quantity,\n          date: new Date(data.updated_on),\n          purchase_price: data.purchase_cost,\n          new_purchase_price: data.purchase_cost,\n          sale_price: data.sale_price,\n          new_price: data.sale_price\n        });\n\n        this.totalQunatity = data.available_quantity;\n\n      } else {\n        this.toastr.error('', resData.message);\n      }\n    },\n      err => {\n        this.toastr.error('', err.error.message);\n      });\n  }\n\n  submitAddForm() {\n    this.submitted = true;\n\n    var formData = new FormData();\n    formData.append(\"product_id\", this.productId);\n    formData.append(\"date\", this.datePipe.transform(this.addForm.controls.date.value, \"yyyy-MM-dd\"));\n    formData.append(\"new_selling_price\", this.addForm.controls.new_price.value);\n    formData.append(\"quantity\", this.addForm.controls.quantity.value);\n    formData.append(\"new_purchase_price\", this.addForm.controls.new_purchase_price.value);\n    formData.append(\"notes\", this.addForm.controls.note.value);\n\n    if (this.addForm.valid) {\n      this.inventoryManagementService.adjustQuantity(formData).subscribe(response => {\n        let resData = JSON.parse(JSON.stringify(response));\n\n        if (resData.status_code == 200) {\n          if (this.redirect == 0) {\n            this.router.navigate(['/inventory-management/edit-inventory'], { queryParams: { id: this.productId, vendor: this.filterVendor, category: this.filterCategory, product: this.filterProduct, stock: this.filterQuantity, limit: this.tableLimit, firstTime: true, search: this.searchValue } }).then(() => {\n              this.toastr.success('', \"Quantity adjusted successfully!\");\n            });\n          } else {\n            this.router.navigate(['/inventory-management'], { queryParams: { vendor: this.filterVendor, category: this.filterCategory, product: this.filterProduct, stock: this.filterQuantity } }).then(() => {\n              this.toastr.success('', \"Quantity adjusted successfully!\");\n            });\n          }\n\n        } else {\n          this.toastr.error('', resData.message);\n        }\n      },\n        err => {\n          this.toastr.error('', err.error.message);\n        });\n\n    }\n  }\n\n  chnageQunatity() {\n    this.totalQunatity = this.addForm.controls.available_quantity.value + this.addForm.controls.quantity.value;\n  }\n\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { InventoryManagementService } from '../../../shared/services/inventory-management.service';\nimport { Validations } from '../../../shared/validators/Validations';\nimport { RxwebValidators } from \"@rxweb/reactive-form-validators\";\nimport { environment } from '../../../../environments/environment';\nimport { DatePipe } from '@angular/common';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-edit-invertory',\n  templateUrl: './edit-invertory.component.html',\n})\nexport class EditInvertoryComponent implements OnInit {\n\n  @ViewChild('salespricemodal') public salespricemodal: ModalDirective;\n\n  editForm: FormGroup;\n  submitted: boolean = false;\n  categoryData: any;\n  vendorData: any;\n  packSizeData: any;\n  old_sales_price: string = \"\";\n  new_sales_price: string = \"\";\n  selectedcategory: string = '';\n  selectedVendor: string = '';\n  selectedPackSize: string = '';\n  barcode_imageUrl: string = '';\n  productId: string = '';\n  selectedDate: string = \"2020-10-20\";\n  filterVendor: any;\n  filterCategory: any;\n  filterProduct: any;\n  filterQuantity: any;\n  tableLimit: number = 10;\n  firstTime: boolean = false;\n  searchValue: string = \"\";\n\n  constructor(\n    private titleService: Title,\n    private inventoryManagementService: InventoryManagementService,\n    private toastr: ToastrService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private datePipe: DatePipe\n  ) { }\n\n  ngOnInit(): void {\n    this.selectedDate = this.datePipe.transform(new Date(), 'yyyy-MM-dd');\n\n    this.titleService.setTitle(\"Edit Inventory\");\n\n    this.editForm = new FormGroup({\n      name: new FormControl('', [\n        Validators.required\n      ]),\n      status: new FormControl(''),\n      category: new FormControl('', [\n        Validators.required\n      ]),\n      vendor: new FormControl('', [\n        Validators.required\n      ]),\n      // pack_size: new FormControl('', [\n      //   Validators.required\n      // ]),\n      available_quantity: new FormControl('', [\n        Validators.required\n      ]),\n      updated_on: new FormControl('', [\n        Validators.required\n      ]),\n      low_stock_qauntity: new FormControl('', [\n        Validators.required\n      ]),\n      location: new FormControl('', [\n        // Validators.required\n      ]),\n      sale_price: new FormControl('', [\n        Validators.required\n      ]),\n      description: new FormControl('', [\n        // Validators.required\n      ]),\n      purchase_cost: new FormControl('', [\n        Validators.required\n      ]),\n      purchase_info: new FormControl('', [\n        // Validators.required\n      ]),\n      barcode_image: new FormControl('', [\n        RxwebValidators.extension({\n          extensions: [\"png\", \"jpg\", \"jpeg\", \"emf\", \"jpe\", \"jfif\", \"bmp\", \"gif\", \"wmf\", \"dib\", \"tif\", \"tiff\", 'pdf']\n        })\n      ]),\n      barcode_imageSource: new FormControl(''),\n      barcode: new FormControl('', [\n        Validators.required\n      ]),\n      item_number: new FormControl('', [\n        Validators.required\n      ]),\n      weight: new FormControl('', [\n        Validators.required\n      ])\n    });\n\n    this.getProductData();\n  }\n\n  getProductData() {\n    this.route.queryParams.subscribe(param => {\n      this.productId = param.id;\n      this.filterVendor = param.vendor;\n      this.filterCategory = param.category;\n      this.filterProduct = param.product;\n      this.filterQuantity = param.quantity;\n      this.tableLimit = param.limit;\n      this.firstTime = param.firstTime;\n      this.searchValue = param.search;\n    });\n\n    this.inventoryManagementService.getVendors(\"\").subscribe(response => {\n      let resData = JSON.parse(JSON.stringify(response));\n\n      if (resData.status_code == 200) {\n        this.vendorData = resData.data;\n      } else {\n        this.toastr.error('', resData.message);\n      }\n    },\n      err => {\n        this.toastr.error('', err.error.message);\n      });\n\n    this.inventoryManagementService.getPackSize({ product_id: this.productId }).subscribe(response => {\n      let resData = JSON.parse(JSON.stringify(response));\n\n      if (resData.status_code == 200) {\n        this.packSizeData = resData.data;\n      } else {\n        this.toastr.error('', resData.message);\n      }\n    },\n      err => {\n        this.toastr.error('', err.error.message);\n      });\n\n    this.inventoryManagementService.getCategories().subscribe(response => {\n      let resData = JSON.parse(JSON.stringify(response));\n\n      if (resData.status_code == 200) {\n        this.categoryData = resData.data;\n      } else {\n        this.toastr.error('', resData.message);\n      }\n    },\n      err => {\n        this.toastr.error('', err.error.message);\n      });\n\n    this.inventoryManagementService.getProduct(this.productId).subscribe(response => {\n      let resData = JSON.parse(JSON.stringify(response));\n\n      if (resData.status_code == 200) {\n        var data = resData.data;\n        this.old_sales_price = data.sale_price;\n        this.editForm.patchValue({\n          name: data.name,\n          status: data.is_active ? \"Active\" : \"Inactive\",\n          available_quantity: data.available_quantity,\n          updated_on: data.updated_on,\n          low_stock_qauntity: data.low_stock_qauntity,\n          location: data.location,\n          sale_price: data.sale_price,\n          description: data.description,\n          purchase_cost: data.purchase_cost,\n          purchase_info: data.purchase_info,\n          barcode: data.barcode_string,\n          item_number: data.barcode_string.substr(-6),\n          weight: data.weight\n        });\n\n        this.selectedcategory = data.category;\n        this.selectedVendor = data.vendor;\n        // this.selectedPackSize = data.pack_size;\n        if (data.barcode_image != null) {\n          this.barcode_imageUrl = environment.base_url + data.barcode_image;\n        }\n\n      } else {\n        this.toastr.error('', resData.message);\n      }\n    },\n      err => {\n        this.toastr.error('', err.error.message);\n      });\n  }\n\n  onBarcodeFileChange(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      if (file) {\n        this.editForm.patchValue({\n          barcode_imageSource: file\n        });\n        const reader = new FileReader();\n        reader.onloadend = (event: any) => {\n          this.barcode_imageUrl = event.target.result;\n        };\n        reader.readAsDataURL(event.target.files[0]);\n      }\n    }\n  }\n\n  submitEditForm() {\n\n    this.submitted = true;\n\n    var formData = new FormData();\n    formData.append(\"name\", this.editForm.controls.name.value);\n    formData.append(\"category\", this.editForm.controls.category.value);\n    formData.append(\"vendor\", this.editForm.controls.vendor.value);\n    // formData.append(\"pack_size\", this.editForm.controls.pack_size.value);\n    formData.append(\"available_quantity\", this.editForm.controls.available_quantity.value);\n    formData.append(\"updated_on\", this.editForm.controls.updated_on.value);\n    formData.append(\"low_stock_qauntity\", this.editForm.controls.low_stock_qauntity.value);\n    formData.append(\"location\", this.editForm.controls.location.value);\n    formData.append(\"sale_price\", this.editForm.controls.sale_price.value);\n    formData.append(\"description\", this.editForm.controls.description.value);\n    formData.append(\"purchase_cost\", this.editForm.controls.purchase_cost.value);\n    formData.append(\"purchase_info\", this.editForm.controls.purchase_info.value);\n    if (this.editForm.get('barcode_imageSource').value) {\n      formData.append(\"barcode_image\", this.editForm.get('barcode_imageSource').value);\n    }\n    formData.append(\"barcode_string\", this.editForm.controls.barcode.value);\n    formData.append(\"weight\", this.editForm.controls.weight.value);\n    formData.append(\"item_no\", this.editForm.controls.item_number.value);\n\n    if (this.editForm.valid) {\n      this.inventoryManagementService.updateProduct(formData, this.productId).subscribe(response => {\n        let resData = JSON.parse(JSON.stringify(response));\n\n        if (resData.status_code == 200) {\n          this.router.navigate(['inventory-management'], { queryParams: { vendor: this.filterVendor, category: this.filterCategory, product: this.filterProduct, stock: this.filterQuantity, limit: this.tableLimit, firstTime: true, search: this.searchValue } }).then(() => {\n            this.toastr.success('', \"Product updated successfully!\");\n          });\n        } else {\n          this.toastr.error('', resData.message);\n        }\n      },\n        err => {\n          this.toastr.error('', err.error.message);\n        });\n\n    }\n  }\n\n  changeBarcodeValue() {\n    this.editForm.patchValue({\n      item_number: this.editForm.controls.barcode.value.substr(-6)\n    });\n  }\n\n  salesPriceChange() {\n    var data = {\n      product_id: this.productId,\n      new_sales_price: this.new_sales_price\n    }\n    this.inventoryManagementService.salesPriceChange(data).subscribe(response => {\n      let resData = JSON.parse(JSON.stringify(response));\n\n      if (resData.status_code == 200) {\n        this.salespricemodal.hide();\n        this.toastr.success('', \"Product added successfully!\");\n        this.getProductData();\n        this.old_sales_price = '';\n        this.new_sales_price = '';\n      } else {\n        this.salespricemodal.hide();\n        this.toastr.error('', resData.message);\n        this.old_sales_price = '';\n        this.new_sales_price = '';\n      }\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AddInventoryComponent } from './add-inventory/add-inventory.component';\nimport { AdjustQuantityComponent } from './adjust-quantity/adjust-quantity.component';\nimport { EditInvertoryComponent } from './edit-invertory/edit-invertory.component';\nimport {InventoryManagementComponent} from './inventory-management.component';\n\n\nconst routes: Routes = [ \n  {\n    path: '',\n    data: {\n      title: 'Inventory Management'\n    },\n    children: [\n      {\n        path: '',\n        component: InventoryManagementComponent,\n        data: {\n          title: 'List'\n        }\n      },\n      {\n        path: 'add-inventory',\n        component: AddInventoryComponent,\n        data: {\n          title: 'Add'\n        }\n      },\n      {\n        path: 'edit-inventory',\n        component: EditInvertoryComponent,\n        data: {\n          title: 'Edit'\n        }\n      },\n      {\n        path: 'adjust-quantity',\n        component: AdjustQuantityComponent,\n        data: {\n          title: 'Adjust Quantity'\n        }\n      },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class InventoryManagementRoutingModule { }\n","import { Component, OnInit, TemplateRef, ViewChild, AfterViewInit, OnDestroy, ElementRef } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport { DataTableDirective } from 'angular-datatables';\nimport { ToastrService } from 'ngx-toastr';\nimport { InventoryManagementService } from '../../shared/services/inventory-management.service';\nimport { Subject } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { CommonService } from '../../shared/services/common.service';\nimport { DecimalPipe } from '@angular/common';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\n\n@Component({\n  selector: 'app-inventory-management',\n  templateUrl: './inventory-management.component.html',\n  styles: [`\n  .anchor-tag {\n    color: #23282c;\n    text-decoration: none !important;\n  }\n  #last-header {\n    width: auto;\n  }\n  `]\n})\n\nexport class InventoryManagementComponent implements OnInit, AfterViewInit, OnDestroy {\n\n  @ViewChild('deleteModal') public deleteModal: ModalDirective;\n  @ViewChild('statusModal') public statusModal: ModalDirective;\n\n  @ViewChild('content') content: ElementRef;\n\n  @ViewChild(DataTableDirective)\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n\n  selectedQuantity: string = \"\";\n  selectedcategory: string = '';\n  searchValue: string = '';\n  selectedVendor: string = '';\n  searchTextInput: string = \"\";\n\n  selectedProduct: any = [];\n  selectedProductIdArray: any = [];\n  vendorData: any;\n  datatbaleData: any;\n  dashboardData: any;\n  productList: Array<any>;\n  productId: any;\n  categoryData: any;\n  productDropdownData: any;\n\n  productStatus: boolean;\n  firstTime: boolean = false;\n  firstTimeSearch: boolean = false;\n\n  tableLimit: number;\n\n  dropdownSettings: IDropdownSettings = {};\n\n  constructor(\n    private titleService: Title,\n    private toastr: ToastrService,\n    private inventoryManagementService: InventoryManagementService,\n    private route: ActivatedRoute,\n    public commonService: CommonService,\n    private _decimalPipe: DecimalPipe\n  ) { }\n\n  ngOnInit(): void {\n    this.titleService.setTitle(\"Inventory Management\");\n\n    this.getProductDropdownData();\n\n    this.route.queryParams.subscribe(param => {\n      this.selectedQuantity = param.stock || \"\";\n      this.selectedVendor = param.vendor || \"\";\n      this.selectedcategory = param.category || \"\";\n\n      this.selectedProductIdArray = param.product || [];\n      if (typeof this.selectedProductIdArray == \"string\") {\n        this.selectedProductIdArray = this.selectedProductIdArray.split(',');\n      }\n      for (var i = 0; i < this.selectedProductIdArray.length; i++) {\n        this.selectedProductIdArray[i] = this.selectedProductIdArray[i] * 1;\n      };\n\n      this.tableLimit = param.limit;\n      this.firstTime = param.firstTime || false;\n      this.firstTimeSearch = param.firstTime || false;\n      this.searchValue = param.search || \"\";\n    });\n\n\n    this.getProductList();\n    this.getDashboardCount();\n    this.getCategoryData();\n    this.getVendorData();\n\n    this.dropdownSettings = {\n      singleSelection: false,\n      idField: 'id',\n      textField: 'name',\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      allowSearchFilter: true\n    };\n  }\n\n  getDashboardCount() {\n    this.inventoryManagementService.getDashoardInfo().subscribe(response => {\n      let resData = JSON.parse(JSON.stringify(response));\n\n      if (resData.status_code == 200) {\n        this.dashboardData = resData.data;\n      } else {\n        this.toastr.error('', resData.message);\n      }\n    },\n      err => {\n        this.toastr.error('', err.error.message);\n      });\n  }\n\n  getCategoryData() {\n    this.inventoryManagementService.getCategories().subscribe(response => {\n      let resData = JSON.parse(JSON.stringify(response));\n\n      if (resData.status_code == 200) {\n        this.categoryData = resData.data;\n      } else {\n        this.toastr.error('', resData.message);\n      }\n    },\n      err => {\n        this.toastr.error('', err.error.message);\n      });\n  }\n\n  getProductDropdownData() {\n    this.inventoryManagementService.productDropdownData().subscribe(response => {\n      let resData = JSON.parse(JSON.stringify(response));\n\n      if (resData.status_code == 200) {\n        this.productDropdownData = resData.data;\n\n        this.selectedProduct = [];\n\n        for (var i = 0; i < this.selectedProductIdArray.length; i++) {\n          for (var k = 0; k < this.productDropdownData.length; k++) {\n            if (this.selectedProductIdArray[i] == this.productDropdownData[k].id) {\n              this.selectedProduct.push({ id: this.productDropdownData[k].id, name: this.productDropdownData[k].name });\n            }\n          }\n        }\n      } else {\n        this.toastr.error('', resData.message);\n      }\n    },\n      err => {\n        this.toastr.error('', err.error.message);\n      });\n  }\n\n  getProductList() {\n    this.dtOptions = {\n      pagingType: 'full_numbers',\n      pageLength: 100,\n      order: [1, 'asc'],\n      serverSide: true,\n      scrollY: \"450px\",\n      scrollX: true,\n      scrollCollapse: true,\n      searchDelay: 1300,\n      processing: true,\n      ajax: (dataTablesParameters: any, callback) => {\n        dataTablesParameters.page = parseInt(dataTablesParameters.start) / parseInt(dataTablesParameters.length) + 1;\n        dataTablesParameters.limit = dataTablesParameters.length;\n        (dataTablesParameters.draw == 1 && this.firstTime) ? ((dataTablesParameters.limit = Number(this.tableLimit))) : \"\";\n        (dataTablesParameters.draw == 1 && this.firstTime) ? ((dataTablesParameters.length = Number(this.tableLimit))) : \"\";\n        dataTablesParameters.filter = this.selectedQuantity;\n\n        if (!this.firstTime) {\n          dataTablesParameters.search_param = dataTablesParameters.search.value;\n\n          this.searchValue = dataTablesParameters.search.value;\n        } else if (this.firstTime) {\n          dataTablesParameters.search_param = this.searchValue;\n\n          $('.dataTables_filter input').val(this.searchValue);\n\n          this.firstTime = false;\n        }\n\n        this.tableLimit = dataTablesParameters.limit;\n        $('.dataTables_wrapper .dataTables_length label select').val(this.tableLimit);\n\n        // sorting\n        dataTablesParameters.order[0].column == 1 ? dataTablesParameters.category = (dataTablesParameters.order[0].column == 1 && dataTablesParameters.order[0].dir == \"asc\") ? (\"category\") : (\"-category\") : \"\";\n        dataTablesParameters.order[0].column == 3 ? dataTablesParameters.item_no = (dataTablesParameters.order[0].column == 3 && dataTablesParameters.order[0].dir == \"asc\") ? (\"item_no\") : (\"-item_no\") : \"\";\n        dataTablesParameters.order[0].column == 4 ? dataTablesParameters.name = (dataTablesParameters.order[0].column == 4 && dataTablesParameters.order[0].dir == \"asc\") ? (\"name\") : (\"-name\") : \"\";\n        dataTablesParameters.order[0].column == 5 ? dataTablesParameters.weight = (dataTablesParameters.order[0].column == 5 && dataTablesParameters.order[0].dir == \"asc\") ? (\"weight\") : (\"-weight\") : \"\";\n        dataTablesParameters.order[0].column == 6 ? dataTablesParameters.available_quantity = (dataTablesParameters.order[0].column == 6 && dataTablesParameters.order[0].dir == \"asc\") ? (\"available_quantity\") : (\"-available_quantity\") : \"\";\n        dataTablesParameters.order[0].column == 7 ? dataTablesParameters.sale_price = (dataTablesParameters.order[0].column == 7 && dataTablesParameters.order[0].dir == \"asc\") ? (\"sale_price\") : (\"-sale_price\") : \"\";\n        dataTablesParameters.order[0].column == 8 ? dataTablesParameters.purchase_cost = (dataTablesParameters.order[0].column == 8 && dataTablesParameters.order[0].dir == \"asc\") ? (\"purchase_cost\") : (\"-purchase_cost\") : \"\";\n        dataTablesParameters.order[0].column == 9 ? dataTablesParameters.margin = (dataTablesParameters.order[0].column == 9 && dataTablesParameters.order[0].dir == \"asc\") ? (\"margin\") : (\"-margin\") : \"\";\n        dataTablesParameters.order[0].column == 10 ? dataTablesParameters.mark_up = (dataTablesParameters.order[0].column == 10 && dataTablesParameters.order[0].dir == \"asc\") ? (\"mark_up\") : (\"-mark_up\") : \"\";\n        // dataTablesParameters.order[0].column == 2 ? dataTablesParameters.description = (dataTablesParameters.order[0].column == 2 && dataTablesParameters.order[0].dir == \"asc\") ? (\"description\") : (\"-description\") : \"\";\n        // dataTablesParameters.order[0].column == 6 ? dataTablesParameters.average_purchase_price = (dataTablesParameters.order[0].column == 6 && dataTablesParameters.order[0].dir == \"asc\") ? (\"average_purchase_price\") : (\"-average_purchase_price\") : \"\";\n\n        // filter\n        dataTablesParameters.product_name_filter = this.selectedProductIdArray;\n        dataTablesParameters.category_id_filter = this.selectedcategory;\n        dataTablesParameters.vendor_id_filter = this.selectedVendor;\n        this.datatbaleData = dataTablesParameters\n\n        this.inventoryManagementService.productlist(dataTablesParameters).subscribe(respones => {\n          let resData = JSON.parse(JSON.stringify(respones));\n\n          if (resData.status_code == 200) {\n            this.productList = resData.data;\n\n            setTimeout(() => {\n              var table = $('#excel-table').DataTable();\n\n              table.columns.adjust();\n\n              document.getElementById(\"last-header\").style.width = \"auto\";\n            }, 10);\n\n            // this.productList.forEach(element => {\n            //   element.margin = element.sale_price - element.purchase_cost;\n            //   element.markup = (((element.sale_price - element.purchase_cost) * 100\n            //   ) / element.purchase_cost);\n            // });\n            // dataTablesParameters.order[0].column == 1 ? dataTablesParameters.item_no = (dataTablesParameters.order[0].column == 1 && dataTablesParameters.order[0].dir == \"asc\") ? (this.productList.sort((a, b) => 0 - (a.item_no > b.item_no ? -1 : 1))) : (this.productList.sort((a, b) => 0 - (a.item_no > b.item_no ? 1 : -1))) : \"\";\n            // dataTablesParameters.order[0].column == 3 ? dataTablesParameters.weight = (dataTablesParameters.order[0].column == 3 && dataTablesParameters.order[0].dir == \"asc\") ? (this.productList.sort((a, b) => 0 - (a.weight > b.weight ? -1 : 1))) : (this.productList.sort((a, b) => 0 - (a.weight > b.weight ? 1 : -1))) : \"\";\n            // dataTablesParameters.order[0].column == 7 ? dataTablesParameters.margin = (dataTablesParameters.order[0].column == 7 && dataTablesParameters.order[0].dir == \"asc\") ? (this.productList.sort((a, b) => 0 - (a.margin > b.margin ? -1 : 1))) : (this.productList.sort((a, b) => 0 - (a.margin > b.margin ? 1 : -1))) : \"\";\n            // dataTablesParameters.order[0].column == 8 ? dataTablesParameters.markup = (dataTablesParameters.order[0].column == 8 && dataTablesParameters.order[0].dir == \"asc\") ? (this.productList.sort((a, b) => 0 - (a.markup > b.markup ? -1 : 1))) : (this.productList.sort((a, b) => 0 - (a.markup > b.markup ? 1 : -1))) : \"\";\n\n            callback({\n              recordsTotal: resData.total_record,\n              recordsFiltered: (dataTablesParameters.search_param == \"\" && dataTablesParameters.product_name_filter == [] && dataTablesParameters.category_id_filter == \"\" && dataTablesParameters.vendor_id_filter == \"\") ? resData.total_record : resData.filter_record,\n              data: []\n            });\n          } else {\n            this.toastr.error('', resData.message);\n          }\n        },\n          err => {\n            this.toastr.error('', err.error.message);\n          }\n        );\n      },\n      columns: [\n        { data: 'status', searchable: false, orderable: false },\n        { data: 'category_name', searchable: true, orderable: true },\n        { data: 'item_no', searchable: true, orderable: true },\n        // { data: 'barcode_string', searchable: true, orderable: false },\n        { data: 'name', searchable: true, orderable: true },\n        { data: 'weight', searchable: false, orderable: true },\n        { data: 'available_quantity', searchable: false, orderable: true },\n        { data: 'sale_price', searchable: false, orderable: true },\n        { data: 'purchase_cost', searchable: false, orderable: true },\n        { data: 'margin', searchable: false, orderable: true },\n        { data: 'mark_up', searchable: false, orderable: true },\n        { data: 'action', searchable: false, orderable: false }]\n    };\n  }\n\n  ngAfterViewInit(): void {\n    this.dtTrigger.next();\n  }\n\n  ngOnDestroy(): void {\n    this.dtTrigger.unsubscribe();\n  }\n\n  saveId(productId) {\n    this.productId = productId;\n  }\n\n  deleteProduct() {\n    this.inventoryManagementService\n      .deleteProduct(this.productId)\n      .subscribe(\n        response => {\n          let resData = JSON.parse(JSON.stringify(response));\n          if (resData.status_code == 200) {\n            this.deleteModal.hide();\n\n            this.toastr.success('', \"Product deleted successfully!\");\n\n            this.rerender();\n\n            this.getDashboardCount();\n          } else {\n            this.toastr.error('', resData.message);\n          }\n        },\n        err => {\n          this.toastr.error('', err.error.mesaage);\n        }\n      );\n  }\n\n  changeStatus() {\n    this.inventoryManagementService\n      .statusChange({ product_id: this.productId, product_status: this.productStatus ? \"inactive\" : \"active\" })\n      .subscribe(\n        response => {\n          let resData = JSON.parse(JSON.stringify(response));\n          if (resData.status_code == 200) {\n            this.statusModal.hide();\n            this.toastr.success('', resData.message);\n            this.rerender();\n            this.getDashboardCount();\n          } else {\n            this.toastr.error('', resData.message);\n          }\n        },\n        err => {\n          this.toastr.error('', err.error.mesaage);\n        }\n      );\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      dtInstance.destroy();\n\n      this.dtTrigger.next();\n    });\n  }\n\n\n  changeQuantity(type) {\n    this.selectedQuantity = type;\n\n    this.rerender();\n  }\n\n\n  exportTable(type) {\n\n    this.datatbaleData.page = \"1\";\n    this.datatbaleData.limit = \"100000\";\n\n    this.inventoryManagementService\n      .productlist(this.datatbaleData).subscribe(response => {\n        let resData = JSON.parse(JSON.stringify(response));\n\n        if (resData.status_code == 200) {\n          const onlyNameAndSymbolArr = resData.data.map(x => ({\n            'Category': x.category_name || \"-\",\n            'Item Number': x.item_no || \"-\",\n            // 'Barcode': x.barcode_string || \"-\",\n            'Name': x.name || \"-\",\n            'Weight': x.weight ? `${x.weight} lbs` : \"0 lbs\",\n            'Margin': (Number((x.sale_price - x.purchase_cost).toFixed(2))),\n            'Mark up': (Number((((x.sale_price - x.purchase_cost) * 100) / x.purchase_cost).toFixed(2))),\n            'Quantity': x.available_quantity,\n            'Sales Price': x.sale_price ? `$ ${this._decimalPipe.transform(x.sale_price, '1.2-2')}` : \"$0\",\n            'Purchase Price': x.purchase_cost ? `$ ${this._decimalPipe.transform(x.purchase_cost, '1.2-2')}` : \"$0\",\n          }));\n\n          if (type == 'pdf') {\n            if (onlyNameAndSymbolArr.length > 0) {\n              var keys = [Object.keys(onlyNameAndSymbolArr[0])]\n              var values = onlyNameAndSymbolArr.map(element => Object.values(element));\n\n              this.commonService.exportArrayPDF(keys, values, 'productList')\n            } else {\n              this.toastr.error('', \"No Data Found !\");\n\n              $(\"#myDropdown\").toggle();\n            }\n          } else {\n            this.commonService.exportCsv(resData.data, onlyNameAndSymbolArr, 'productList');\n          }\n        } else {\n          this.toastr.error('', resData.message);\n        }\n      },\n        err => {\n          this.toastr.error('', err.error.message);\n        });\n  }\n\n\n  getVendorData() {\n    var formData = new FormData();\n\n    formData.append(\"page\", \"1\");\n    formData.append(\"limit\", \"100000\");\n\n    this.inventoryManagementService.getVendors(formData).subscribe(response => {\n      let resData = JSON.parse(JSON.stringify(response));\n\n      if (resData.status_code == 200) {\n        this.vendorData = resData.data;\n      }\n      else {\n        this.toastr.error('', resData.message);\n      }\n    },\n      err => {\n        this.toastr.error('', err.error.message);\n      });\n  }\n\n\n  onSelectProduct(event: any) {\n    this.selectedProductIdArray.push(event.id);\n\n    this.rerender();\n  }\n\n\n  onSelectAllProduct(event: any) {\n    this.selectedProductIdArray = [];\n\n    for (var i = 0; i < event.length; i++) {\n      this.selectedProductIdArray.push(event[i].id);\n    }\n\n    this.rerender();\n  }\n\n\n  onDeSelectProduct(event: any) {\n    const index = this.selectedProductIdArray.indexOf(event.id);\n\n    if (index > -1) {\n      this.selectedProductIdArray.splice(index, 1);\n    }\n\n    this.rerender();\n  }\n\n\n  onDeSelectAllProduct() {\n    this.selectedProductIdArray = [];\n\n    this.rerender();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport { InventoryManagementComponent } from './inventory-management.component';\nimport { InventoryManagementRoutingModule } from './inventory-management-routing.module';\nimport { DataTablesModule } from 'angular-datatables';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { AddInventoryComponent } from './add-inventory/add-inventory.component';\nimport { EditInvertoryComponent } from './edit-invertory/edit-invertory.component';\nimport { AdjustQuantityComponent } from './adjust-quantity/adjust-quantity.component';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { InventoryManagementService } from '../../shared/services/inventory-management.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RxReactiveFormsModule } from \"@rxweb/reactive-form-validators\";\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\n\n@NgModule({\n  declarations: [InventoryManagementComponent, AddInventoryComponent, EditInvertoryComponent, AdjustQuantityComponent],\n  imports: [\n    CommonModule,\n    DataTablesModule,\n    InventoryManagementRoutingModule,\n    ModalModule,\n    BsDatepickerModule.forRoot(),\n    PerfectScrollbarModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RxReactiveFormsModule,\n    NgMultiSelectDropDownModule.forRoot()\n  ],\n  providers: [\n    InventoryManagementService,\n    DatePipe\n  ]\n})\nexport class InventoryManagementModule { }\n"],"sourceRoot":"webpack:///"}