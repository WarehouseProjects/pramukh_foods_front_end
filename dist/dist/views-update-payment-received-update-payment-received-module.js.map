{"version":3,"sources":["./src/app/views/update-payment-received/update-payment-received.component.html","./src/app/views/update-payment-received/update-payment-received-routing.module.ts","./src/app/views/update-payment-received/update-payment-received.component.ts","./src/app/views/update-payment-received/update-payment-received.module.ts"],"names":[],"mappings":"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","file":"views-update-payment-received-update-payment-received-module.js","sourcesContent":["export default \"<div class=\\\"animated fadeIn\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-header d-flex justify-content-between align-items-center\\\">Payment Method\\n                    <div class=\\\"pull-right\\\">\\n                        <a (click)=\\\"goPreviousUrl()\\\" class=\\\"btn btn-md btn-secondary\\\" type=\\\"button\\\">Back</a>\\n                    </div>\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <form [formGroup]=\\\"addPaymentMethodForm\\\" (ngSubmit)=\\\"uncheckAll();\\\" #formDir=\\\"ngForm\\\" novalidate\\n                        class=\\\"customer-content sales-content payment-received-content\\\">\\n                        <ul class=\\\"d-flex\\\">\\n                            <li>\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"name\\\" class=\\\"w-100\\\">Payment Method</label>\\n                                    <select (change)=\\\"changeMode()\\\" [(ngModel)]=\\\"selectedMode\\\" formControlName=\\\"mode\\\"\\n                                        class=\\\"form-control\\\">\\n                                        <option value=\\\"CASH\\\">Cash</option>\\n                                        <option value=\\\"CHECK\\\">Check</option>\\n                                    </select>\\n                                    <div class=\\\"error\\\"\\n                                        *ngIf=\\\"(submittedMethodReceived && addPaymentMethodForm.controls.mode.invalid) || addPaymentMethodForm.controls.mode.touched\\\">\\n                                        <div *ngIf=\\\"addPaymentMethodForm.hasError('required','mode')\\\" class=\\\"err-msg\\\">\\n                                            Payment mode is required.\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </li>\\n                            <li *ngIf=\\\"selectedMode == 'CHECK'\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"name\\\" class=\\\"w-100\\\">{{selectedMode == 'CHECK' ? \\\"Check No\\\" :\\n                                        \\\"Transaction No\\\"}}</label>\\n                                    <input formControlName=\\\"cheque_no\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\"\\n                                        placeholder=\\\"Enter {{selectedMode == 'CHECK' ? 'Check No' : 'Transaction No'}}\\\">\\n                                    <div class=\\\"error\\\"\\n                                        *ngIf=\\\"(submittedMethodReceived && addPaymentMethodForm.controls.cheque_no.invalid) || addPaymentMethodForm.controls.cheque_no.touched\\\">\\n                                        <div *ngIf=\\\"addPaymentMethodForm.hasError('required','cheque_no')\\\"\\n                                            class=\\\"err-msg\\\">{{selectedMode == 'CHECK' ? \\\"Check no\\\" : \\\"Transaction\\n                                            no\\\"}} is required.\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </li>\\n                            <!-- <li>\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"name\\\" class=\\\"w-100\\\">Bank Name :</label>\\n                                    <input formControlName=\\\"bank_name\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\"\\n                                        placeholder=\\\"Enter Bank Name\\\">\\n                                    <div class=\\\"error\\\"\\n                                        *ngIf=\\\"(submittedMethodReceived && addPaymentMethodForm.controls.bank_name.invalid) || addPaymentMethodForm.controls.bank_name.touched\\\">\\n                                        <div *ngIf=\\\"addPaymentMethodForm.hasError('required','bank_name')\\\"\\n                                            class=\\\"err-msg\\\">Bank name is required.\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </li> -->\\n                            <li>\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"name\\\" class=\\\"w-100\\\">Amount Received</label>\\n                                    <input [(ngModel)]=\\\"ammountReceivedValue\\\" (change)=\\\"onAmountChange();\\\"\\n                                        formControlName=\\\"ammount_received\\\" class=\\\"form-control quantity\\\" id=\\\"name\\\"\\n                                        type=\\\"number\\\" placeholder=\\\"Enter Amount Received\\\">\\n                                    <div class=\\\"error\\\"\\n                                        *ngIf=\\\"(submittedMethodReceived && addPaymentMethodForm.controls.ammount_received.invalid) || addPaymentMethodForm.controls.ammount_received.touched\\\">\\n                                        <div *ngIf=\\\"addPaymentMethodForm.hasError('required','ammount_received')\\\"\\n                                            class=\\\"err-msg\\\">Amount received is required.\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </li>\\n                            <li *ngIf=\\\"selectedMode == 'CHECK'\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"name\\\" class=\\\"w-100\\\">Image</label>\\n                                    <input (change)=\\\"onImageFileChange($event)\\\" formControlName=\\\"image\\\"\\n                                        class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"file\\\" placeholder=\\\"Enter Bank Name\\\">\\n                                    <div class=\\\"error\\\"\\n                                        *ngIf=\\\"(submittedMethodReceived && addPaymentMethodForm.controls.image.invalid) || addPaymentMethodForm.controls.image.touched\\\">\\n                                        <div *ngIf=\\\"addPaymentMethodForm.controls.image.invalid\\\" class=\\\"err-msg\\\">\\n                                            Please Select Valid Image.\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </li>\\n                            <li class=\\\"d-flex align-items-end w-auto\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <button class=\\\"btn btn-md btn-dark mr-3\\\" type=\\\"submit\\\">Submit</button>\\n                                </div>\\n                            </li>\\n                        </ul>\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n            <form class=\\\"card\\\">\\n                <div class=\\\"card-header d-flex justify-content-between align-items-center\\\">Outstanding Order\\n                    <div class=\\\"dropdown pull-right\\\">\\n                        <button (click)=\\\"commonService.toggleDropDown()\\\" class=\\\"btn btn-md btn-primary dropbtn\\\"\\n                            type=\\\"button\\\">\\n                            <i class=\\\"fa fa-file-export mr-2\\\"></i>\\n                            Export\\n                        </button>\\n                        <div id=\\\"myDropdown\\\" class=\\\"dropdown-content\\\">\\n                            <a href=\\\"javascript:void(0)\\\" (click)=\\\"exportCsv()\\\"\\n                                style=\\\"font-size: small; text-decoration: none;\\\">\\n                                Export to XLSX\\n                            </a>\\n                        </div>\\n                        <button *ngIf=\\\"showClearPaymentButton\\\" class=\\\"btn btn-md btn-dark\\\" type=\\\"button\\\"\\n                            (click)=\\\"submitAddPaymentMethodForm()\\\">Clear\\n                            Payment</button>\\n                    </div>\\n                </div>\\n                <div class=\\\"card-body p-4\\\">\\n                    <div class=\\\"d-flex flex-wrap justify-content-end align-items-start mb-0\\\">\\n                        <!-- <div class=\\\"form-group\\\">\\n                            <button class=\\\"btn btn-md btn-primary\\\" type=\\\"button\\\" (click)=\\\"addmodal.show()\\\"><i class=\\\"fa fa-plus mr-2\\n                        \\\"></i>Add Payment</button>\\n                        </div> -->\\n                        <!-- <div *ngIf=\\\"showPaymentMessage\\\" class=\\\"row\\\">\\n                            <div class=\\\"col-sm-12 py-3 text-center\\\">\\n                                <button class=\\\"btn btn-md btn-dark mr-3\\\" type=\\\"button\\\" (click)=\\\"submitPayment()\\\">Clear\\n                                    Payment</button>\\n                            </div>\\n                        </div> -->\\n                    </div>\\n                    <perfect-scrollbar>\\n                        <div class=\\\"responsive-table rounded mb-4\\\">\\n                            <table datatable [dtOptions]=\\\"dtOptions\\\" [dtTrigger]=\\\"dtTrigger\\\" datatable\\n                                class=\\\"data row-border hover table order-table border\\\">\\n                                <thead>\\n                                    <tr>\\n                                        <th>Select</th>\\n                                        <th>Order Date</th>\\n                                        <th>Invoice No#</th>\\n                                        <th>Invoice Date</th>\\n                                        <th>Payment Due<br>Date</th>\\n                                        <th>Order Amount</th>\\n                                        <th>Payment<br>Amount<br>Received</th>\\n                                        <th>Open<br>Balance</th>\\n                                        <th>Payment</th>\\n                                    </tr>\\n                                </thead>\\n                                <tbody>\\n                                    <tr *ngFor=\\\"let order of orderList;let i = index;\\\">\\n                                        <td>\\n                                            <div class=\\\"custom-control custom-checkbox\\\">\\n                                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\"\\n                                                    (click)=\\\"order.checked=!order.checked; calculateAmountReceived(order.checked, order.open_balance*1, i)\\\"\\n                                                    [id]=\\\"'checkbox' + order.id\\\" [checked]=\\\"order.checked\\\"\\n                                                    [disabled]=\\\"order.disabled\\\">\\n                                                <label class=\\\"custom-control-label\\\"\\n                                                    [for]=\\\"'checkbox' + order.id\\\"></label>\\n                                            </div>\\n                                        </td>\\n                                        <td>{{order.created_at ? (order.created_at | date: 'MM-dd-yyyy') : \\\"-\\\"}}</td>\\n                                        <td>{{order.invoice_no || \\\"-\\\"}}</td>\\n                                        <td>{{order.invoice_date ? (order.invoice_date | date: 'MM-dd-yyyy') : \\\"-\\\"}}\\n                                        </td>\\n                                        <td>{{order.due_date ? (order.due_date | date: 'MM-dd-yyyy') : \\\"-\\\"}}</td>\\n                                        <td>\\n                                            {{order.amount ? (\\\"$\\\"+(order.amount | number : '1.2-2')) : \\\"$0.00\\\"}}\\n                                        </td>\\n                                        <td>\\n                                            {{order.amount_recieved ? (\\\"$\\\"+(order.amount_recieved | number : '1.2-2')) :\\n                                            \\\"$0.00\\\"}}\\n                                        </td>\\n                                        <td>\\n                                            {{order.open_balance ? (\\\"$\\\"+(order.open_balance | number : '1.2-2')) :\\n                                            \\\"$0.00\\\"}}\\n                                        </td>\\n                                        <td>\\n                                            <!-- <input style=\\\"width: 90px;\\\" class=\\\"form-control quantity\\\" #paymentValue\\n                                                type=\\\"number\\\" [value]=\\\"order?.payment\\\"\\n                                                (change)=\\\"changePaymentValue(paymentValue.value,order, i)\\\"\\n                                                (keyup)=\\\"paymentValue.value > order.remaining_amount ? paymentValue.value = order.remaining_amount : paymentValue.value\\\"> -->\\n                                            <!-- <input style=\\\"width: 90px;\\\" class=\\\"form-control quantity\\\" type=\\\"number\\\"\\n                                                [value]=\\\"order?.payment\\\"> -->\\n                                            {{order.payment ? (\\\"$\\\"+(order.payment | number : '1.2-2')) : \\\"$0.00\\\"}}\\n                                        </td>\\n\\n                                    </tr>\\n                                    <tr *ngIf=\\\"orderList?.length == 0\\\">\\n                                        <td colspan=\\\"7\\\" class=\\\"no-data-available\\\">No Data Found !</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </perfect-scrollbar>\\n                    <div class=\\\"calcuted-data\\\">\\n                        <ul class=\\\"w-100\\\">\\n                            <!-- <li>\\n                                <strong>Amount to Apply </strong>\\n                                <span>{{\\\"$ \\\"+(amountToApply | number : '1.2-2')}}</span>\\n                            </li> -->\\n                            <li class=\\\"w-auto pull-left\\\" *ngIf=\\\"showPaymentMessage\\\">\\n                                <strong>{{amountRecievedMessage}}</strong>\\n                                <span>${{calculatedReceivedAmount | number : '1.2-2'}}</span>\\n                            </li>\\n                            <li class=\\\"w-auto text-right pull-right\\\">\\n                                <strong>Outstanding Amount</strong>\\n                                <span>{{\\\"$ \\\"+(orderData?.total_remaining_amount | number :\\n                                    '1.2-2')}}</span>\\n                            </li>\\n                        </ul>\\n                    </div>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\\n\\n<div bsModal #addmodal=\\\"bs-modal\\\" class=\\\"modal fade text-center\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"Delete\\\"\\n    aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-md modal-dialog-centered\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-body py-4 text-center d-flex flex-column justify-content-center\\\">\\n                <h2 class=\\\"font-weight-bold mb-4 text-primary\\\">Outstanding Order</h2>\\n                <form class=\\\"d-inline-block w-100 text-left\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Payment:</label>\\n                                <input class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\" placeholder=\\\"Payment\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"modal-footer justify-content-start flex-wrap w-100 pb-0\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-dark mr-3\\\">ADD</button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"editmodal.hide()\\\">Cancel</button>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div bsModal #editmodal=\\\"bs-modal\\\" class=\\\"modal fade text-center\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"Delete\\\"\\n    aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-md modal-dialog-centered\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-body py-4 text-center d-flex flex-column justify-content-center\\\">\\n                <h2 class=\\\"font-weight-bold mb-4 text-primary\\\">Outstanding Order</h2>\\n                <form class=\\\"d-inline-block w-100 text-left\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Payment:</label>\\n                                <input class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\" placeholder=\\\"Payment\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"modal-footer justify-content-start flex-wrap w-100 pb-0\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-dark mr-3\\\">Edit</button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"editmodal.hide()\\\">Cancel</button>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n<!-- delete modal -->\\n<div bsModal #deleteModal=\\\"bs-modal\\\" class=\\\"modal fade text-center\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"Delete\\\"\\n    aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-sm modal-dialog-centered\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-body py-4 text-center d-flex flex-column justify-content-center\\\">\\n                <h2 class=\\\"font-weight-bold mb-4 text-primary\\\">Delete</h2>\\n                <p class=\\\"mb-0\\\">Are You Sure You Want To Delete ?</p>\\n            </div>\\n            <div class=\\\"modal-footer justify-content-center\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"deleteModal.hide()\\\">Cancel</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger\\\">Delete</button>\\n            </div>\\n        </div><!-- /.modal-content -->\\n    </div>\\n</div><!-- /.modal -->\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport {UpdatePaymentReceivedComponent} from './update-payment-received.component';\n\n\nconst routes: Routes = [ \n  {\n    path: '',\n    data: {\n      title: 'Update Payment Received'\n    },\n    children: [\n      {\n        path: '',\n        component: UpdatePaymentReceivedComponent,\n        data: {\n          title: 'List'\n        }\n      },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UpdatePaymentReceivedRoutingModule { }\n","import { Component, OnInit, TemplateRef, ViewChild, AfterViewInit, OnDestroy } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport { ToastrService } from 'ngx-toastr';\nimport { PaymentReceivedService } from '../../shared/services/payment-received.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { RxwebValidators } from \"@rxweb/reactive-form-validators\";\nimport { DataTableDirective } from 'angular-datatables';\nimport { Subject } from 'rxjs';\nimport { DatePipe, Location } from '@angular/common';\nimport { CommonService } from '../../shared/services/common.service';\n\n@Component({\n  selector: 'app-update-payment-received',\n  templateUrl: './update-payment-received.component.html',\n})\nexport class UpdatePaymentReceivedComponent implements AfterViewInit, OnDestroy, OnInit {\n\n  @ViewChild('addmodal') public addmodal: ModalDirective;\n  @ViewChild('editmodal') public editmodal: ModalDirective;\n  @ViewChild(DataTableDirective)\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  paymentData: any;\n  customerId: any;\n  payment_date: string = '';\n  addPaymentReceivedForm: FormGroup;\n  submittedPaymentReceived: boolean = false;\n  addPaymentMethodForm: FormGroup;\n  submittedMethodReceived: boolean = false;\n  disableCheckboxes: boolean = false;\n  imageUrl: string = \"\";\n  selectedMode: string = \"CASH\";\n  orderList: Array<any>;\n  orderData: any;\n  ammountReceivedValue: number = null;\n  amountRecievedMessage: string = \"\";\n  calculatedReceivedAmount: number;\n  showPaymentMessage: boolean = false;\n  showClearPaymentButton: boolean = false;\n  tickedAmount: number = 0;\n  amountToApply: number = 0;\n  allorderData: any;\n  allPaymentData: any = [];\n  stage1PaymentData: any = [];\n  firstStep: number = 0;\n  datatableParams: any;\n\n  constructor(\n    private titleService: Title,\n    private location: Location,\n    private toastr: ToastrService,\n    private paymentReceivedService: PaymentReceivedService,\n    private router: Router,\n    public commonService: CommonService,\n    private route: ActivatedRoute,\n    private datePipe: DatePipe\n  ) { }\n\n  ngOnInit(): void {\n    this.titleService.setTitle(\"Update Payement Received\");\n\n    this.route.queryParams.subscribe(param => {\n      this.customerId = param.id;\n      this.payment_date = param.payment_date;\n    });\n\n    this.addPaymentReceivedForm = new FormGroup({\n      customer_name: new FormControl('', [\n        Validators.required\n      ]),\n      email: new FormControl('', [\n        Validators.required\n      ]),\n      phone: new FormControl('', [\n        Validators.required\n      ]),\n      payment_due_date: new FormControl('', [\n        Validators.required\n      ])\n    });\n\n    this.addPaymentMethodForm = new FormGroup({\n      mode: new FormControl('', [\n        Validators.required\n      ]),\n      cheque_no: new FormControl('', [\n        //Validators.required\n      ]),\n      bank_name: new FormControl('', [\n        //Validators.required\n      ]),\n      ammount_received: new FormControl('', [\n        Validators.required\n      ]),\n      image: new FormControl('', [\n        RxwebValidators.extension({\n          extensions: [\"png\", \"jpg\", \"jpeg\", \"emf\", \"jpe\", \"jfif\", \"bmp\", \"gif\", \"wmf\", \"dib\", \"tif\", \"tiff\", 'pdf']\n        })\n      ]),\n      imageSource: new FormControl('')\n    });\n\n    this.getPaymentInfo();\n    this.getOrderList();\n  }\n\n  getOrderList() {\n    this.dtOptions = {\n      pagingType: 'full_numbers',\n      pageLength: 100,\n      order: [1, 'asc'],\n      serverSide: true,\n      processing: true,\n      searchDelay: 1300,\n      ajax: (dataTablesParameters: any, callback) => {\n        dataTablesParameters.page = parseInt(dataTablesParameters.start) / parseInt(dataTablesParameters.length) + 1;\n        dataTablesParameters.limit = dataTablesParameters.length;\n        dataTablesParameters.customer_id = this.customerId;\n        dataTablesParameters.created_at = (dataTablesParameters.order[0].column == 0 && dataTablesParameters.order[0].dir == \"asc\") ? (\"created_at\") : (\"-created_at\");\n        dataTablesParameters.invoice_no = (dataTablesParameters.order[0].column == 0 && dataTablesParameters.order[0].dir == \"asc\") ? (\"invoice_no\") : (\"-invoice_no\");\n        dataTablesParameters.due_date = (dataTablesParameters.order[0].column == 0 && dataTablesParameters.order[0].dir == \"asc\") ? (\"due_date\") : (\"-due_date\");\n        dataTablesParameters.amount = (dataTablesParameters.order[0].column == 0 && dataTablesParameters.order[0].dir == \"asc\") ? (\"amount\") : (\"-amount\");\n        dataTablesParameters.amount_recieved = (dataTablesParameters.order[0].column == 0 && dataTablesParameters.order[0].dir == \"asc\") ? (\"amount_recieved\") : (\"-amount_recieved\");\n        dataTablesParameters.remaining_amount = (dataTablesParameters.order[0].column == 0 && dataTablesParameters.order[0].dir == \"asc\") ? (\"remaining_amount\") : (\"-remaining_amount\");\n        dataTablesParameters.open_balance = (dataTablesParameters.order[0].column == 0 && dataTablesParameters.order[0].dir == \"asc\") ? (\"open_balance\") : (\"-open_balance\");\n        dataTablesParameters.for_payment = \"0\";\n        dataTablesParameters.search_params = dataTablesParameters.search.value;\n\n        this.datatableParams = dataTablesParameters;\n        this.paymentReceivedService\n          .displayorder(dataTablesParameters)\n          .subscribe(\n            respones => {\n              let resData = JSON.parse(JSON.stringify(respones));\n              if (resData.status_code == 200) {\n                this.orderList = resData.data.allorder;\n\n                this.showPaymentMessage = false;\n                this.orderData = resData.data;\n                // this.calculateAmount(resData.total_record);\n                if (this.ammountReceivedValue > 0) {\n                  var leftAmountReceived = this.ammountReceivedValue;\n                  this.amountToApply = 0;\n                  this.stage1PaymentData = [];\n                  this.orderList.forEach(element => {\n                    if (leftAmountReceived > 0) {\n\n                      // if(leftAmountReceived < element.open_balance){\n                      //   element.payment = element.open_balance - leftAmountReceived;\n                      //   leftAmountReceived = element.open_balance - leftAmountReceived;\n                      // }else{\n                      if (leftAmountReceived > element.open_balance) {\n                        element.payment = leftAmountReceived - element.open_balance;\n                        leftAmountReceived = leftAmountReceived - element.open_balance;\n                      } else {\n                        element.payment = 0;\n                      }\n                      if (element.payment > element.open_balance) {\n                        element.payment = element.open_balance;\n                      }\n\n                      if (element.payment != 0) {\n                        setTimeout(() => {\n                          this.stage1PaymentData.push({\n                            id: element.id,\n                            open_balance: element.open_balance,\n                            payment: parseFloat(element.payment)\n                          });\n                        }, 500);\n                      }\n\n                      this.amountToApply = Number(element.payment) + this.amountToApply;\n                    }\n                  });\n\n                } else {\n                  this.orderList.forEach(element => {\n                    element.payment = 0;\n                  });\n                }\n\n                this.orderList.forEach(element => {\n                  element.checked = false;\n                  element.disabled = true;\n                });\n\n                callback({\n                  recordsTotal: resData.total_record,\n                  recordsFiltered: dataTablesParameters.search_params == \"\" ? resData.total_record : resData.filter_record,\n                  data: []\n                });\n              } else {\n                this.toastr.error('', resData.message);\n              }\n\n            },\n            err => {\n              this.toastr.error('', err.error.message);\n            }\n          );\n      },\n      columns: [\n        { name: 'checkbox', searchable: false, orderable: false },\n        { data: 'created_at', searchable: true, orderable: true },\n        { data: 'invoice_no', searchable: true, orderable: true },\n        { data: 'invoice_date', searchable: true, orderable: true },\n        { data: 'due_date', searchable: true, orderable: false },\n        { data: 'amount', searchable: true, orderable: false },\n        // { data: 'status', searchable: true, orderable: false },\n        // { data: 'verfication_status', searchable: true, orderable: false },\n        { data: 'amount_recieved', searchable: true, orderable: true },\n        { data: 'open_balance', searchable: true, orderable: true },\n        { data: 'remaining_amount', searchable: true, orderable: false },\n        // { data: 'salesman', searchable: false, orderable: false },\n        // { data: 'action', searchable: false, orderable: false }\n      ]\n    };\n  }\n\n\n  calculateAmount(totalRecord) {\n    var parms = {\n      customer_id: this.customerId,\n      for_payment: '0',\n      limit: totalRecord\n    };\n\n    this.paymentReceivedService.displayorder(parms).subscribe(response => {\n      let resData = JSON.parse(JSON.stringify(response));\n\n      if (resData.status_code == 200) {\n        resData.data.allorder.forEach(element => {\n          //this.amountToApply = this.amountToApply + element.remaining_amount;\n          //this.ammountReceivedValue = this.amountToApply;\n        });\n\n        this.allorderData = resData.data.allorder;\n      }\n      else {\n        this.toastr.error('', resData.message);\n      }\n    },\n      err => {\n        this.toastr.error('', err.error.message);\n      });\n  }\n\n\n  submitAmountReceived() {\n    if (this.amountToApply < this.ammountReceivedValue) {\n      this.allorderData.forEach((element, index) => {\n        this.allorderData[index].remaining_amount = 0;\n      });\n      this.orderList.forEach((element, index) => {\n        this.orderList[index].remaining_amount = 0;\n      });\n      this.amountToApply = 0;\n    }\n  }\n\n\n  ngAfterViewInit(): void {\n    this.dtTrigger.next();\n  }\n\n\n  ngOnDestroy(): void {\n    this.dtTrigger.unsubscribe();\n  }\n\n\n  onImageFileChange(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      if (file) {\n        this.addPaymentMethodForm.patchValue({\n          imageSource: file\n        });\n        const reader = new FileReader();\n        reader.onloadend = (event: any) => {\n          this.imageUrl = event.target.result;\n        };\n        reader.readAsDataURL(event.target.files[0]);\n      }\n    }\n  }\n\n\n  getPaymentInfo() {\n    this.paymentReceivedService.getCustomer(this.customerId).subscribe(response => {\n      let resData = JSON.parse(JSON.stringify(response));\n\n      if (resData.status_code == 200) {\n        this.addPaymentReceivedForm.patchValue({\n          customer_name: resData.data.full_name,\n          email: resData.data.email,\n          phone: resData.data.phone\n        });\n\n        this.addPaymentReceivedForm.patchValue({\n          payment_due_date: new Date(this.payment_date)\n        });\n      }\n      else {\n        this.toastr.error('', resData.message);\n      }\n    },\n      err => {\n        this.toastr.error('', err.error.message);\n      });\n  }\n\n\n  submitAddPaymentReceivedForm() {\n    this.submittedPaymentReceived = true;\n\n    var formData = new FormData();\n    formData.append(\"customer_id\", this.customerId);\n    formData.append(\"payment_date\", this.datePipe.transform(this.addPaymentReceivedForm.controls.payment_due_date.value, 'yyyy-MM-dd'));\n\n    if (this.addPaymentReceivedForm.valid) {\n      this.paymentReceivedService.paymentreceived(formData).subscribe(response => {\n        let resData = JSON.parse(JSON.stringify(response));\n\n        if (resData.status_code == 200) {\n          this.paymentData = resData.data;\n          this.addPaymentMethodForm.patchValue({\n            mode: this.paymentData.method,\n            cheque_no: this.paymentData.reference_no,\n            ammount_received: this.paymentData.amount_recieved\n          });\n          this.submitAmountReceived();\n        } else {\n          this.toastr.error('', resData.message);\n        }\n      },\n        err => {\n          this.toastr.error('', err.error.message);\n        });\n    }\n  }\n\n\n  submitAddPaymentMethodForm() {\n    this.submittedMethodReceived = true;\n\n    if (this.addPaymentMethodForm.controls.ammount_received.value > 0) {\n      // this.rerender();\n\n      var formData = new FormData();\n\n      // formData.append(\"amount_received\", this.addPaymentMethodForm.controls.ammount_received.value);\n      formData.append(\"payment_method\", this.addPaymentMethodForm.controls.mode.value);\n\n      if (this.addPaymentMethodForm.controls.cheque_no.value) {\n        formData.append(\"cheque_no\", this.addPaymentMethodForm.controls.cheque_no.value);\n      }\n\n      if (this.addPaymentMethodForm.get('imageSource').value) {\n        formData.append(\"image\", this.addPaymentMethodForm.get('imageSource').value);\n      }\n\n      formData.append(\"customer_id\", this.customerId);\n\n      var paymentData: Array<any> = [];\n\n      for (let i = 0; i < this.orderList.length; i++) {\n        if (this.orderList[i].payment != 0) {\n          if (this.orderList[i].payment_status == \"over\") {\n            paymentData.push({\n              invoice_id: this.orderList[i].id, open_balance: parseFloat(this.orderList[i].open_balance), payment_amount: this.orderList[i].payment + this.calculatedReceivedAmount, payment_status: this.orderList[i].payment_status\n            });\n          }\n          else {\n            paymentData.push({\n              invoice_id: this.orderList[i].id, open_balance: parseFloat(this.orderList[i].open_balance), payment_amount: this.orderList[i].payment, payment_status: this.orderList[i].payment_status\n            });\n          }\n        }\n      }\n\n      setTimeout(() => {\n        formData.append(\"paymentData\", JSON.stringify(paymentData));\n        if (this.addPaymentMethodForm.valid) {\n          this.paymentReceivedService.update_payment_history(formData).subscribe(response => {\n            let resData = JSON.parse(JSON.stringify(response));\n\n            if (resData.status_code == 200) {\n              this.toastr.success('', \"Payment details updated successfully!\");\n              this.rerender();\n\n              this.selectedMode = 'CASH';\n              this.submittedMethodReceived = false;\n              this.addPaymentMethodForm.controls.ammount_received.markAsUntouched();\n              this.addPaymentMethodForm.patchValue({ ammount_received: '' })\n              this.showPaymentMessage = false;\n              this.showClearPaymentButton = false;\n              this.calculatedReceivedAmount = 0;\n              this.tickedAmount = 0;\n            } else {\n              this.toastr.error('', resData.message);\n            }\n          },\n            err => {\n              this.toastr.error('', err.error.message);\n            });\n        }\n      }, 1000);\n    }\n  }\n\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      dtInstance.destroy();\n      this.showPaymentMessage = false;\n      this.dtTrigger.next();\n    });\n  }\n\n\n  changePaymentValue(paymentValue, orderData, i) {\n    // this.allorderData.forEach(element => {\n    //   if (element.id == orderData.id) {\n    //     let index = this.allorderData.findIndex(x => x.id === orderData.id);\n    //     this.allorderData[index].remaining_amount = Number(paymentValue);\n    //     this.amountToApply = this.amountToApply + Number(paymentValue);\n    //   }\n    // });\n\n    this.amountToApply = 0;\n    this.ammountReceivedValue = 0;\n\n    this.allPaymentData.push({\n      \"orderId\": orderData.id,\n      \"payment\": Number(paymentValue)\n    });\n\n    var amount = [];\n\n    $(\"table tbody tr\").each(function () {\n      var currentRow = $(this);\n      var col1_value = currentRow.find(\"td:eq(6) input\").val();\n      amount.push(col1_value);\n    });\n\n    amount.splice(-1, 1);\n\n    amount.forEach(element => {\n      this.amountToApply = this.amountToApply + Number(element);\n    });\n\n    this.ammountReceivedValue = this.amountToApply;\n  }\n\n\n  changeMode() {\n    if (this.selectedMode == 'CASH') {\n      this.addPaymentMethodForm.get('cheque_no').clearValidators();\n      this.addPaymentMethodForm.get('cheque_no').updateValueAndValidity();\n\n      // this.addPaymentMethodForm.get('image').clearValidators();\n      // this.addPaymentMethodForm.get('image').updateValueAndValidity();\n    }\n    else {\n      this.addPaymentMethodForm.get('cheque_no').setValidators([Validators.required]);\n      this.addPaymentMethodForm.get('cheque_no').updateValueAndValidity();\n\n      // this.addPaymentMethodForm.controls[\"image\"].setValidators([Validators.required]);\n      // this.addPaymentMethodForm.get('image').setValidators([Validators.required]);\n      // this.addPaymentMethodForm.get('image').updateValueAndValidity();\n    }\n  }\n\n\n  submitPayment() {\n    // var array = [];\n    // this.allorderData.forEach(element => {\n    //   array.push({\n    //     \"orderId\": element.id,\n    //     \"payment\": element.remaining_amount\n    //   });\n    // });\n    if (this.allPaymentData.length != 0) {\n      this.paymentReceivedService.clear_payment(this.allPaymentData).subscribe(response => {\n        let resData = JSON.parse(JSON.stringify(response));\n\n        if (resData.status_code == 200) {\n          this.toastr.success('', resData.message);\n          this.amountToApply = 0;\n          this.rerender();\n\n        } else {\n          this.toastr.error('', resData.message);\n        }\n      },\n        err => {\n          this.toastr.error('', err.error.message);\n        });\n    }\n  }\n\n\n  calculateAmountReceived(checked: boolean, amount: number, index: number) {\n    this.showClearPaymentButton = this.orderList.some(e => {\n      return e.checked;\n    });\n\n    if (checked && this.ammountReceivedValue != null) {\n      this.showPaymentMessage = true;\n\n      this.tickedAmount += amount;\n\n      if (this.ammountReceivedValue - this.tickedAmount < 0) {\n        if (this.orderList[index].invoice_no) {\n          this.amountRecievedMessage = \"Under Payment for Invoice No# \" + this.orderList[index].invoice_no;\n        }\n        else {\n          this.amountRecievedMessage = \"Under Payment for Invoice No#\";\n        }\n        this.calculatedReceivedAmount = (this.ammountReceivedValue - this.tickedAmount) * -1;\n        this.orderList[index].payment_status = \"under\";\n\n        for (let i = 0; i < this.orderList.length; i++) {\n          if (this.orderList[i].id != this.orderList[index].id && this.orderList[i].payment != 0) {\n            // if (this.orderList[i].payment != this.orderList[index].payment && this.orderList[i].payment != 0) {\n            this.orderList[i].payment_status = \"completed\";\n          }\n        }\n\n        if (amount - (this.ammountReceivedValue - this.tickedAmount) * -1 < 0) {\n          for (let i = 0; i < this.orderList.length; i++) {\n            if (!this.orderList[i].checked) {\n              this.orderList[i].disabled = true;\n            }\n          }\n          this.orderList[index].payment = 0;\n        }\n        else {\n          for (let i = 0; i < this.orderList.length; i++) {\n            this.orderList[i].disabled = false;\n          }\n          this.orderList[index].payment = (amount - (this.ammountReceivedValue - this.tickedAmount) * -1);\n\n          for (let i = 0; i < this.orderList.length; i++) {\n            if (!this.orderList[i].checked) {\n              this.orderList[i].disabled = true;\n            }\n          }\n        }\n      }\n      else if (this.ammountReceivedValue - this.tickedAmount == 0) {\n        this.showPaymentMessage = false;\n        this.orderList[index].payment = amount;\n        // this.orderList[index].payment_status = \"completed\";\n\n        for (let i = 0; i < this.orderList.length; i++) {\n          if (!this.orderList[i].checked) {\n            this.orderList[i].disabled = true;\n          }\n          if (this.orderList[i].payment != 0) {\n            this.orderList[i].payment_status = \"completed\";\n          }\n        }\n      }\n      else {\n        if (this.orderList[index].invoice_no) {\n          this.amountRecievedMessage = \"Over Payment for Invoice No# \" + this.orderList[index].invoice_no;\n        }\n        else {\n          this.amountRecievedMessage = \"Over Payment for Invoice No#\";\n        }\n        this.calculatedReceivedAmount = (this.ammountReceivedValue - this.tickedAmount);\n        // this.orderList[index].payment = this.ammountReceivedValue - this.tickedAmount;\n        // for (let i = 0; i < this.orderList.length; i++) {\n        //   if (this.orderList[i].id != this.orderList[index].id && this.orderList[i].payment != 0) {\n        //     this.orderList[i].payment = this.orderList[index].open_balance;\n        //   }\n        // }\n        this.orderList[index].payment = amount;\n        this.orderList[index].payment_status = \"over\";\n\n        for (let i = 0; i < this.orderList.length; i++) {\n          if (this.orderList[i].id != this.orderList[index].id && this.orderList[i].payment != 0) {\n            // if (this.orderList[i].payment != this.orderList[index].payment && this.orderList[i].payment != 0) {\n            this.orderList[i].payment_status = \"completed\";\n          }\n        }\n      }\n    }\n    else {\n      this.orderList[index].payment = 0;\n\n      this.tickedAmount -= amount;\n      let lastCheckedIndex: number = null;\n\n      for (let i = 0; i < this.orderList.length; i++) {\n        if (this.orderList[i].checked) {\n          lastCheckedIndex = i;\n        }\n      }\n\n      if (lastCheckedIndex == null) {\n        this.showPaymentMessage = false;\n      }\n      else {\n        this.showPaymentMessage = true;\n      }\n\n      if (this.ammountReceivedValue - this.tickedAmount < 0) {\n        if (this.orderList[index].invoice_no) {\n          this.amountRecievedMessage = \"Under Payment for Invoice No# \" + this.orderList[lastCheckedIndex].invoice_no;\n        }\n        else {\n          this.amountRecievedMessage = \"Under Payment for Invoice No#\";\n        }\n        // this.amountRecievedMessage = \"Under Payment for Invoice No# \" + (lastCheckedIndex + 1);\n        this.calculatedReceivedAmount = (this.ammountReceivedValue - this.tickedAmount) * -1;\n        this.orderList[index].payment_status = \"under\";\n\n        for (let i = 0; i < this.orderList.length; i++) {\n          if (this.orderList[i].payment != this.orderList[index].payment && this.orderList[i].payment != 0) {\n            this.orderList[i].payment_status = \"completed\";\n          }\n        }\n      }\n      else if (this.ammountReceivedValue - this.tickedAmount == 0) {\n        this.showPaymentMessage = false;\n\n        for (let i = 0; i < this.orderList.length; i++) {\n          if (!this.orderList[i].checked) {\n            this.orderList[i].disabled = true;\n          }\n          // if (this.orderList[i].payment != 0) {\n          //   this.orderList[i].payment_status = \"completed\";\n          // }\n        }\n      }\n      else {\n        if (this.orderList[index].invoice_no) {\n          if (lastCheckedIndex != null) {\n            this.amountRecievedMessage = \"Over Payment for Invoice No# \" + this.orderList[lastCheckedIndex].invoice_no;\n          }\n        }\n        else {\n          this.amountRecievedMessage = \"Over Payment for Invoice No#\";\n        }\n        this.calculatedReceivedAmount = (this.ammountReceivedValue - this.tickedAmount);\n        this.orderList[index].payment_status = \"over\";\n\n        for (let i = 0; i < this.orderList.length; i++) {\n          if (this.orderList[i].payment != this.orderList[index].payment && this.orderList[i].payment != 0) {\n            this.orderList[i].payment_status = \"completed\";\n          }\n        }\n      }\n\n      for (let i = 0; i < this.orderList.length; i++) {\n        this.orderList[i].disabled = false;\n      }\n    }\n  }\n\n\n  uncheckAll() {\n    if (this.addPaymentMethodForm.valid) {\n      this.toastr.success(\"\", \"Now select invoices for clearance!\");\n      this.showPaymentMessage = false;\n      this.showClearPaymentButton = false;\n\n      this.calculatedReceivedAmount = 0;\n      this.tickedAmount = 0;\n\n      for (let i = 0; i < this.orderList.length; i++) {\n        this.orderList[i].checked = false;\n        this.orderList[i].disabled = false;\n        this.orderList[i].payment = 0;\n      }\n    }\n    else {\n      this.toastr.error(\"\", \"Please Fill All Fields!\");\n    }\n  }\n\n\n  onAmountChange() {\n    this.showPaymentMessage = false;\n    this.showClearPaymentButton = false;\n    this.calculatedReceivedAmount = 0;\n    this.tickedAmount = 0;\n\n    for (let i = 0; i < this.orderList.length; i++) {\n      this.orderList[i].checked = false;\n      this.orderList[i].disabled = true;\n      this.orderList[i].payment = 0;\n    }\n  }\n\n\n  goPreviousUrl() {\n    this.location.back();\n  }\n\n\n  exportCsv() {\n    this.paymentReceivedService.displayorder(this.datatableParams).subscribe(response => {\n      let resData = JSON.parse(JSON.stringify(response));\n\n      if (resData.status_code == 200) {\n        const onlyNameAndSymbolArr = resData.data.allorder.map(x => ({\n          \"Order Date\": this.datePipe.transform(x.created_at, 'MM-dd-yyyy') || \"-\",\n          \"Invoice No#\": x.invoice_no || \"-\",\n          \"Payment Due Date\": this.datePipe.transform(x.due_date, 'MM-dd-yyyy') || \"-\",\n          \"Order Amount\": x.amount ? \"$\" + parseFloat(x.amount).toFixed(2) : \"$0.00\",\n          \"Payment Amount Received\": x.amount_recieved ? \"$\" + parseFloat(x.amount_recieved).toFixed(2) : \"$0.00\",\n          \"Open Balance\": x.open_balance ? \"$\" + parseFloat(x.open_balance).toFixed(2) : \"$0.00\"\n        }));\n        this.commonService.exportCsv(resData.data.allorder, onlyNameAndSymbolArr, 'paymentRecievedList');\n\n      } else {\n        this.toastr.error('', resData.message);\n      }\n    },\n      err => {\n        this.toastr.error('', err.error.message);\n      });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport { UpdatePaymentReceivedComponent } from './update-payment-received.component';\nimport { UpdatePaymentReceivedRoutingModule } from './update-payment-received-routing.module';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { DataTablesModule } from 'angular-datatables';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { PaymentReceivedService } from '../../shared/services/payment-received.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RxReactiveFormsModule } from \"@rxweb/reactive-form-validators\";\n\n@NgModule({\n  declarations: [UpdatePaymentReceivedComponent],\n  imports: [\n    CommonModule,\n    UpdatePaymentReceivedRoutingModule,\n    DataTablesModule,\n    BsDatepickerModule.forRoot(),\n    PerfectScrollbarModule,\n    ModalModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RxReactiveFormsModule\n  ],\n  providers: [\n    PaymentReceivedService,\n    DatePipe\n  ]\n})\nexport class UpdatePaymentReceivedModule { }\n"],"sourceRoot":"webpack:///"}