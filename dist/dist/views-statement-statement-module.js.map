{"version":3,"sources":["./src/app/views/statement/statement.component.html","./src/app/shared/services/statement.service.ts","./src/app/views/statement/statement-routing.module.ts","./src/app/views/statement/statement.component.ts","./src/app/views/statement/statement.module.ts"],"names":[],"mappings":"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","file":"views-statement-statement-module.js","sourcesContent":["export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header d-flex justify-content-between align-items-center\\\">Statement\\n          <div class=\\\"pull-right\\\" *ngIf=\\\"selectedStore != ''\\\">\\n            <a (click)=\\\"exportToPDF()\\\" class=\\\"btn btn-primary text-light\\\" type=\\\"button\\\">Export</a>\\n          </div>\\n          <!-- <div class=\\\"dropdown pull-right\\\" *ngIf=\\\"selectedStore != ''\\\">\\n            <button (click)=\\\"commonService.toggleDropDown()\\\" class=\\\"btn btn-md btn-primary dropbtn\\\" type=\\\"button\\\">\\n              <i class=\\\"fa fa-file-export mr-2\\\"></i>\\n              Export\\n            </button>\\n            <div id=\\\"myDropdown\\\" class=\\\"dropdown-content\\\"> -->\\n          <!-- <a href=\\\"javascript:void(0)\\\" (click)=\\\"exportDynamic()\\\" style=\\\"font-size: small; text-decoration: none;\\\">\\n                Export to XLSX\\n              </a> -->\\n          <!-- <a href=\\\"javascript:void(0)\\\"\\n                              (click)=\\\"commonService.exportPDF(false, 0, 'avarageProductList')\\\">Export to PDF</a> -->\\n          <!-- <a href=\\\"javascript:void(0)\\\" (click)=\\\"exportToPDF()\\\"\\n                style=\\\"font-size: small; text-decoration: none;\\\">Export to PDF</a>\\n            </div>\\n          </div> -->\\n        </div>\\n        <div class=\\\"card-body p-4\\\">\\n          <form class=\\\"row justify-content-start align-items-center mb-1\\\">\\n            <div class=\\\"col-md-3 col-sm-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>From Date</label>\\n                <input type=\\\"text\\\" placeholder=\\\"From Date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedFromDate\\\"\\n                  [ngModelOptions]=\\\"{standalone: true}\\\" [bsConfig]=\\\"{dateInputFormat: 'MM-DD-YYYY'}\\\" bsDatepicker>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-3 col-sm-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>To Date</label>\\n                <input type=\\\"text\\\" placeholder=\\\"To Date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedToDate\\\"\\n                  [ngModelOptions]=\\\"{standalone: true}\\\" [bsConfig]=\\\"{dateInputFormat: 'MM-DD-YYYY'}\\\" bsDatepicker>\\n                <!-- [bsConfig]=\\\"{minMode: 'year', dateInputFormat: 'YYYY'}\\\" -->\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-4 col-sm-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Store Name</label>\\n                <select class=\\\"form-control\\\" [(ngModel)]=\\\"selectedStore\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                  (ngModelChange)=\\\"rerender()\\\">\\n                  <option value=\\\"\\\">Select Store Name</option>\\n                  <option *ngFor=\\\"let item of storeList\\\" [value]=\\\"item.id\\\">\\n                    {{item.store_name}}\\n                  </option>\\n                </select>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-2 col-sm-12 pt-3\\\">\\n              <button (click)=\\\"rerender()\\\" class=\\\"btn btn-md btn-dark mr-3\\\" type=\\\"button\\\">Filter</button>\\n            </div>\\n          </form>\\n          <!-- <div class=\\\"form-group dropdown\\\" style=\\\"float: right; margin-left: 10px;\\\">\\n                      <button (click)=\\\"commonService.toggleDropDown()\\\" class=\\\"btn btn-md btn-primary dropbtn\\\"\\n                          type=\\\"button\\\"><i class=\\\"fa fa-file-export mr-2\\n                      \\\"></i>Export</button>\\n                      <div id=\\\"myDropdown\\\" class=\\\"dropdown-content\\\">\\n                          <a href=\\\"javascript:void(0)\\\" (click)=\\\"exportTable('xlsx')\\\">Export to XLSX</a>\\n                          <a href=\\\"javascript:void(0)\\\" (click)=\\\"exportDynamic()\\\">Export to XLSX</a>\\n                          <a href=\\\"javascript:void(0)\\\" (click)=\\\"commonService.exportPDF(false, 0, 'agingReportList')\\\">Export to PDF</a>\\n                          <a href=\\\"javascript:void(0)\\\" (click)=\\\"exportTable('pdf')\\\">Export to PDF</a>\\n                      </div>\\n                  </div> -->\\n          <!-- <perfect-scrollbar> -->\\n          <div class=\\\"responsive-table rounded mb-4\\\">\\n            <table style=\\\"width: 100%;\\\" datatable [dtOptions]=\\\"dtOptions\\\" [dtTrigger]=\\\"dtTrigger\\\"\\n              class=\\\"data row-border hover table order-table border\\\" id=\\\"excel-table\\\">\\n              <thead>\\n                <tr>\\n                  <th style=\\\"width: 15%;\\\">Transaction Date</th>\\n                  <th style=\\\"width: 55%;\\\">Transaction</th>\\n                  <th style=\\\"width: 15%;\\\">Amount</th>\\n                  <th style=\\\"width: 15%;\\\" id=\\\"last-header\\\">Balance</th>\\n                </tr>\\n              </thead>\\n              <tbody *ngIf=\\\"statementList?.length != 0 && selectedStore != ''\\\">\\n                <tr *ngFor=\\\"let statement of statementList;let i = index;\\\">\\n                  <td>\\n                    {{statement.transaction_date ? (statement.transaction_date | date: 'MM-dd-yyyy') : \\\"-\\\"}}\\n                  </td>\\n                  <td style=\\\"white-space: nowrap;\\\">\\n                    {{statement.transaction_data}}\\n                  </td>\\n                  <td>\\n                    {{statement.amount ? \\\"$\\\" + (statement.amount.substring(1)*1 | number : '1.2-2') : \\\"$0.00\\\"}}\\n                  </td>\\n                  <td>\\n                    {{statement.balance ? \\\"$\\\" + (statement.balance.substring(1)*1 | number : '1.2-2') : \\\"$0.00\\\"}}\\n                  </td>\\n                </tr>\\n              </tbody>\\n              <tbody *ngIf=\\\"statementList?.length == 0 && selectedStore != ''\\\">\\n                <tr>\\n                  <td colspan=\\\"4\\\" class=\\\"no-data-available\\\">No Data Found !</td>\\n                </tr>\\n              </tbody>\\n              <tbody *ngIf=\\\"statementList?.length == 0 && selectedStore == ''\\\">\\n                <tr>\\n                  <td colspan=\\\"4\\\" class=\\\"no-data-available\\\">Please Select Store !</td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n          <!-- </perfect-scrollbar> -->\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StatementService {\n\n  constructor(private http: HttpClient) { }\n\n  customerStatment(data): Observable<any> {\n    return this.http.post<any>(`${environment.base_url}/customer_statement/list_view/`, data);\n  }\n\n  storelist(): Observable<any> {\n    return this.http.get<any>(`${environment.base_url}/store_name_list/`);\n  }\n\n  getPdf(data): Observable<any> {\n    return this.http.post<any>(`${environment.base_url}/customer_statement/get_pdf/`, data);\n  }\n}\n","import { StatementComponent } from './statement.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    data: {\n      title: 'Statement'\n    },\n    children: [\n      {\n        path: '',\n        component: StatementComponent,\n        data: {\n          title: 'List'\n        }\n      },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class StatementRoutingModule { }\n","import { DatePipe } from \"@angular/common\";\nimport {\n  AfterViewInit,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from \"@angular/core\";\nimport { Title } from \"@angular/platform-browser\";\nimport { DataTableDirective } from \"angular-datatables\";\nimport { Workbook } from \"exceljs\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { Subject } from \"rxjs\";\nimport { CommonService } from \"../../shared/services/common.service\";\nimport { StatementService } from \"../../shared/services/statement.service\";\nimport * as fs from \"file-saver\";\n\n@Component({\n  selector: \"app-statement\",\n  templateUrl: \"./statement.component.html\",\n})\nexport class StatementComponent implements AfterViewInit, OnDestroy, OnInit {\n  @ViewChild(DataTableDirective)\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n\n  datatableData: any;\n  statementList: Array<any>;\n  storeList: any;\n  selectedFromDate: any = new Date(new Date().getFullYear(), 0, 1);\n  selectedToDate: any = new Date();\n\n  selectedStore: string = \"\";\n  totalRemainingAmount: any;\n\n  header = [\n    \"Customer Name\",\n    \"Model Name\",\n    \"Remaining Amount\",\n    \"Transaction Data\",\n    \"Transaction Data\",\n  ];\n\n  constructor(\n    private titleService: Title,\n    private toastr: ToastrService,\n    private statementService: StatementService,\n    private datePipe: DatePipe,\n    public commonService: CommonService\n  ) {}\n\n  ngOnInit(): void {\n    this.titleService.setTitle(\"Statement\");\n\n    this.getStatementList();\n\n    this.getStoreData();\n  }\n\n  getStatementList() {\n    this.dtOptions = {\n      pagingType: \"full_numbers\",\n      pageLength: 100,\n      serverSide: true,\n      processing: true,\n      searchDelay: 1300,\n      ajax: (dataTablesParameters: any, callback) => {\n        dataTablesParameters.page =\n          parseInt(dataTablesParameters.start) /\n            parseInt(dataTablesParameters.length) +\n          1;\n        dataTablesParameters.limit = dataTablesParameters.length;\n        dataTablesParameters.search_param = dataTablesParameters.search.value;\n\n        // sorting\n        dataTablesParameters.order[0].column == 0\n          ? (dataTablesParameters.sort_field = \"transaction_date\")\n          : \"\";\n        dataTablesParameters.order[0].column == 1\n          ? (dataTablesParameters.sort_field = \"transaction_data\")\n          : \"\";\n        dataTablesParameters.order[0].column == 2\n          ? (dataTablesParameters.sort_field = \"amount\")\n          : \"\";\n        dataTablesParameters.order[0].column == 3\n          ? (dataTablesParameters.sort_field = \"balance\")\n          : \"\";\n\n        // filter\n        dataTablesParameters.from_date = this.datePipe.transform(\n          this.selectedFromDate,\n          \"yyyy-MM-dd\"\n        );\n        dataTablesParameters.to_date = this.datePipe.transform(\n          this.selectedToDate,\n          \"yyyy-MM-dd\"\n        );\n\n        dataTablesParameters.customer = this.selectedStore;\n\n        dataTablesParameters.sort_type = dataTablesParameters.order[0].dir;\n\n        this.datatableData = dataTablesParameters;\n\n        this.statementService.customerStatment(dataTablesParameters).subscribe(\n          (respones) => {\n            let resData = JSON.parse(JSON.stringify(respones));\n\n            if (resData.status_code == 200 && this.selectedStore != \"\") {\n              this.statementList = resData.data;\n\n              this.totalRemainingAmount = 0;\n\n              for (let i = 0; i < this.statementList.length; i++) {\n                this.totalRemainingAmount =\n                  this.totalRemainingAmount + this.statementList[i].balance;\n              }\n\n              callback({\n                recordsTotal: resData.total_record,\n                recordsFiltered:\n                  dataTablesParameters.search_param == \"\"\n                    ? resData.total_record\n                    : resData.filter_record,\n                data: [],\n              });\n            } else if (resData.status_code == 200 && this.selectedStore == \"\") {\n              this.statementList = [];\n\n              callback({\n                recordsTotal: 0,\n                recordsFiltered: 0,\n                data: [],\n              });\n\n              const elm =\n                document.querySelector<HTMLElement>(\".dataTables_empty\")!;\n\n              elm.style.display = \"none\";\n            } else {\n              this.toastr.error(\"\", resData.message);\n            }\n          },\n          (err) => {\n            this.toastr.error(\"\", err.error.message);\n          }\n        );\n      },\n      columns: [\n        { data: \"transaction_date\", orderable: false },\n        { data: \"transaction_data\", orderable: false },\n        { data: \"amount\", orderable: false },\n        { data: \"balance\", orderable: false },\n      ],\n    };\n  }\n\n  ngOnDestroy(): void {\n    this.dtTrigger.unsubscribe();\n  }\n\n  ngAfterViewInit(): void {\n    this.dtTrigger.next();\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      dtInstance.destroy();\n      this.dtTrigger.next();\n    });\n  }\n\n  exportTable(type) {\n    this.datatableData.page = \"1\";\n    this.datatableData.limit = \"100000\";\n\n    this.statementService.customerStatment(this.datatableData).subscribe(\n      (response) => {\n        let resData = JSON.parse(JSON.stringify(response));\n\n        if (resData.status_code == 200) {\n          const onlyNameAndSymbolArr = resData.data.map((x) => ({\n            \"Store Name\": x.store_name || \"-\",\n            \"Transaction Date\": x.transaction_date\n              ? this.datePipe.transform(x.transaction_date, \"MM-dd-yyyy\")\n              : \"-\",\n            Transaction: x.transaction_data || \"-\",\n            Amount: x.amount || \"$ 0.00\",\n            Balance: x.balance || \"$ 0.00\",\n          }));\n\n          if (type == \"pdf\") {\n            var keys = [Object.keys(onlyNameAndSymbolArr[0])];\n            var values = onlyNameAndSymbolArr.map((element) =>\n              Object.values(element)\n            );\n\n            this.commonService.exportArrayPDF(keys, values, \"statementList\");\n          } else {\n            this.commonService.exportCsv(\n              resData.data,\n              onlyNameAndSymbolArr,\n              \"statementList\"\n            );\n          }\n        } else {\n          this.toastr.error(\"\", resData.message);\n        }\n      },\n      (err) => {\n        this.toastr.error(\"\", err.error.message);\n      }\n    );\n  }\n\n  exportDynamic() {\n    this.statementService.customerStatment(this.datatableData).subscribe(\n      (response) => {\n        let resData = JSON.parse(JSON.stringify(response));\n\n        if (resData.status_code == 200) {\n          if (resData?.data?.length == 0) {\n            this.toastr.error(\"\", \"No Data Found !\");\n          } else {\n            var data = resData.data;\n\n            let workbook = new Workbook();\n\n            let worksheet = workbook.addWorksheet(\"statementList\", {\n              pageSetup: { paperSize: 9, orientation: \"landscape\" },\n            });\n            worksheet.getCell(\"A1:E1\").value = \"Krishiv Foods\";\n            worksheet.getCell(\"A2:E2\").value = \"Statements\";\n\n            if (this.datatableData.from_year == this.datatableData.to_year) {\n              worksheet.getCell(\"A3:E3\").value = this.datatableData.from_year;\n            } else {\n              worksheet.getCell(\"A3:E3\").value =\n                this.datatableData.from_year + \"-\" + this.datatableData.to_year;\n            }\n\n            // Set font, size and style in title row.\n            worksheet.getCell(\"A1:E1\").font = {\n              name: \"Arial\",\n              family: 4,\n              size: 14,\n              bold: true,\n            };\n            worksheet.getCell(\"A2:E2\").font = {\n              name: \"Arial\",\n              family: 4,\n              size: 16,\n              bold: true,\n            };\n            worksheet.getCell(\"A3:E3\").font = {\n              name: \"Arial\",\n              family: 4,\n              size: 14,\n              bold: true,\n            };\n            worksheet.getCell(\"A1:E1\").alignment = {\n              vertical: \"middle\",\n              horizontal: \"center\",\n            };\n            worksheet.getCell(\"A2:E2\").alignment = {\n              vertical: \"middle\",\n              horizontal: \"center\",\n            };\n            worksheet.getCell(\"A3:E3\").alignment = {\n              vertical: \"middle\",\n              horizontal: \"center\",\n            };\n            worksheet.mergeCells(\"A1:E1\");\n            worksheet.mergeCells(\"A2:E2\");\n            worksheet.mergeCells(\"A3:E3\");\n            // worksheet.getCell(\"A1\").value = this.datePipe.transform(new Date(), \"h:mm a\");\n            // worksheet.getCell(\"A2\").value = this.datePipe.transform(new Date(), \"MM-dd-yyyy\");\n\n            //Add Header Row\n            let headerRow = worksheet.addRow(this.header);\n            // Cell Style : Fill and Border\n            headerRow.eachCell((cell, number) => {\n              cell.border = {\n                top: { style: \"thin\" },\n                left: { style: \"thin\" },\n                bottom: { style: \"thin\" },\n                right: { style: \"thin\" },\n              };\n              cell.font = { name: \"Arial\", bold: true };\n              // cell.alignment = {\n              //   vertical: 'middle',\n              //   horizontal: 'center'\n              // }\n            });\n\n            data.forEach((e) => {\n              e = {\n                customer_name: e.customer_name,\n                model_name: e.model_name,\n                balance: e.balance ? \"$ \" + e.balance : \"$ 0.00\",\n                transaction_data: e.transaction_data,\n                transaction_date: e.transaction_date,\n              };\n\n              // let firstHead = worksheet.addRow([e.customer_name]).number;\n              // worksheet.mergeCells('A' + firstHead + \":\" + \"H\" + firstHead);\n              // worksheet.getCell('A' + firstHead + \":\" + \"H\" + firstHead).fill = {\n              //   type: 'pattern',\n              //   pattern: 'solid',\n              //   fgColor: { argb: 'CCCCCF' },\n              //   bgColor: { argb: 'CCCCCF' },\n              // }\n              // worksheet.getCell('A' + firstHead + \":\" + \"H\" + firstHead).font = {\n              //   name: 'Arial', bold: true\n              // }\n              var new_array = Object.values(e);\n\n              worksheet.addRow(new_array);\n\n              // Model Name\", \"Remaining Amount\", \"Transaction Data\", \"Transaction Data\"]\n              // e.map(element => Object.values(element)).forEach(e => {\n              //   var new_array = e.slice(1);\n              //   new_array = new_array.slice(2);\n              //   new_array = new_array.slice(3);\n              //   new_array = new_array.slice(4);\n\n              //   new_array[4] = this.datePipe.transform(new_array[4], \"yyyy\")\n\n              //   // let sum = new_array.reduce(add, 0); // with initial value to avoid when the array is empty\n\n              //   // function add(a, b) {\n              //   //   return a + b;\n              //   // }\n              //   // element['total'] = sum;\n              //   //new_array[7] = Number(parseFloat(new_array[7]).toFixed(2));\n              //   worksheet.addRow(new_array);\n              // })\n\n              // let secondHead = worksheet.addRow([\"Total: \" + e.customer_name, e.total]).number;\n              // worksheet.mergeCells('A' + secondHead + \":\" + \"G\" + secondHead);\n              // worksheet.getCell('A' + secondHead + \":\" + \"G\" + secondHead).fill = {\n              //   type: 'pattern',\n              //   pattern: 'solid',\n              //   fgColor: { argb: 'DCDCF5' },\n              //   bgColor: { argb: 'DCDCF5' },\n              // }\n\n              // worksheet.getCell(\"H\" + (secondHead - 1)).font = {\n              //   underline: true\n              // }\n\n              // // worksheet.getCell(\"H\" + secondHead).value = Number(parseFloat(e.total_of_open_balance).toFixed(2));\n              // worksheet.getCell(\"H\" + secondHead).value = e.total_of_open_balance;\n              // worksheet.getCell(\"H\" + secondHead).fill = {\n              //   type: 'pattern',\n              //   pattern: 'solid',\n              //   fgColor: { argb: 'DCDCF5' },\n              //   bgColor: { argb: 'DCDCF5' },\n              // }\n\n              // const sum = data.reduce(add, 0); // with initial value to avoid when the array is empty\n\n              // function add(a, b) {\n              //   return a + b;\n              // }\n\n              // data['total'] = sum;\n            });\n\n            worksheet.columns.forEach((d) => {\n              d.width = 20;\n              d.alignment = { vertical: \"middle\", horizontal: \"center\" };\n            });\n\n            // let thirdHead = worksheet.addRow([\"TOTAL\", this.totalRemainingAmount]).number;\n            // worksheet.mergeCells('A' + thirdHead + \":\" + \"E\" + thirdHead);\n            // worksheet.getCell('A' + thirdHead + \":\" + \"E\" + thirdHead).fill = {\n            //   type: 'pattern',\n            //   pattern: 'solid',\n            //   fgColor: { argb: 'CFCFDF' },\n            //   bgColor: { argb: 'CFCFDF' },\n            // }\n            // worksheet.getCell('A' + thirdHead + \":\" + \"E\" + thirdHead).font = { bold: true };\n            // // worksheet.getCell('A' + thirdHead + \":\" + \"E\" + thirdHead).alignment = { vertical: 'middle', horizontal: 'left' };\n\n            // // worksheet.getCell(\"H\" + thirdHead).value = Number((parseFloat(summary_data?.main_total).toFixed(2)));\n            // worksheet.getCell(\"E\" + thirdHead).value = \"$\" + parseFloat(this.totalRemainingAmount).toFixed(2);;\n            // worksheet.getCell(\"E\" + thirdHead).fill = {\n            //   type: 'pattern',\n            //   pattern: 'solid',\n            //   fgColor: { argb: 'CFCFDF' },\n            //   bgColor: { argb: 'CFCFDF' },\n            // }\n            // worksheet.getCell(\"E\" + thirdHead).font = { bold: true };\n\n            // for (let index = 6; index <= thirdHead - 2; index++) {\n            //   worksheet.getCell(\"G\" + index).alignment = {\n            //     vertical: 'middle',\n            //     horizontal: 'left'\n            //   }\n            // }\n\n            workbook.xlsx.writeBuffer().then((data) => {\n              let blob = new Blob([data], {\n                type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n              });\n              fs.saveAs(blob, \"statementList.xlsx\");\n            });\n\n            this.myFunction();\n          }\n        } else {\n          this.toastr.error(\"\", resData.message);\n          this.myFunction();\n        }\n      },\n      (err) => {\n        this.toastr.error(\"\", err.error.message);\n        this.myFunction();\n      }\n    );\n  }\n\n  myFunction() {\n    $(\"#myDropdown\").toggle();\n  }\n\n  getStoreData() {\n    this.statementService.storelist().subscribe(\n      (response) => {\n        let resData = JSON.parse(JSON.stringify(response));\n\n        if (resData.status_code == 200) {\n          this.storeList = resData.data;\n        } else {\n          this.toastr.error(\"\", resData.message);\n        }\n      },\n      (err) => {\n        this.toastr.error(\"\", err.error.message);\n      }\n    );\n  }\n\n  exportToPDF() {\n    if (this.statementList.length != 0) {\n      var formData = new FormData();\n\n      formData.append(\"customer\", this.selectedStore);\n      formData.append(\n        \"from_date\",\n        this.datePipe.transform(this.selectedFromDate, \"yyyy-MM-dd\")\n      );\n      formData.append(\n        \"to_date\",\n        this.datePipe.transform(this.selectedToDate, \"yyyy-MM-dd\")\n      );\n\n      this.statementService.getPdf(formData).subscribe(\n        (response) => {\n          if (response.status_code == 200) {\n            window.open(response.pdf_url);\n          } else {\n            this.toastr.error(\"\", response.message);\n          }\n        },\n        (err) => {\n          this.toastr.error(\"\", err.error.message);\n        }\n      );\n    } else {\n      this.toastr.error(\"\", \"No data available for export\");\n    }\n  }\n}\n","import { StatementService } from './../../shared/services/statement.service';\nimport { StatementRoutingModule } from './statement-routing.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport { StatementComponent } from './statement.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DataTablesModule } from 'angular-datatables';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StatementRoutingModule,\n    DataTablesModule,\n    BsDatepickerModule.forRoot(),\n    PerfectScrollbarModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    StatementService,\n    DatePipe\n  ],\n  declarations: [\n    StatementComponent\n  ]\n})\nexport class StatementModule { }\n"],"sourceRoot":"webpack:///"}