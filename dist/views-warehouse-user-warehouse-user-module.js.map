{"version":3,"sources":["./src/app/views/warehouse-user/add/add.component.html","./src/app/views/warehouse-user/edit/edit.component.html","./src/app/views/warehouse-user/view/view.component.html","./src/app/views/warehouse-user/warehouse-user.component.html","./src/app/views/warehouse-user/add/add.component.ts","./src/app/views/warehouse-user/edit/edit.component.ts","./src/app/views/warehouse-user/view/view.component.ts","./src/app/views/warehouse-user/warehouse-user-routing.module.ts","./src/app/views/warehouse-user/warehouse-user.component.ts","./src/app/views/warehouse-user/warehouse-user.module.ts"],"names":[],"mappings":"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","file":"views-warehouse-user-warehouse-user-module.js","sourcesContent":["export default \"<div class=\\\"animated fadeIn\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n        <div class=\\\"col-sm-6\\\">\\n            <form class=\\\"card\\\" [formGroup]=\\\"addForm\\\" (ngSubmit)=\\\"submitAddForm()\\\" #formDir=\\\"ngForm\\\" novalidate>\\n                <div class=\\\"card-header\\\">Warehouse Add</div>\\n                <div class=\\\"card-body p-4\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Full Name :</label>\\n                                <input formControlName=\\\"full_name\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\" placeholder=\\\"Full Name\\\">\\n                                <div class=\\\"error\\\"\\n                                  *ngIf=\\\"(submitted && addForm.controls.full_name.invalid) || addForm.controls.full_name.touched\\\">\\n                                  <div *ngIf=\\\"addForm.hasError('required','full_name')\\\" class=\\\"err-msg\\\">Full name is required.\\n                                  </div>\\n                                </div>  \\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Email :</label>\\n                                <input formControlName=\\\"email\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\" placeholder=\\\"Email\\\">\\n                                <div class=\\\"error\\\"\\n                                  *ngIf=\\\"(submitted && addForm.controls.email.invalid) || addForm.controls.email.touched\\\">\\n                                  <div *ngIf=\\\"addForm.hasError('required','email')\\\" class=\\\"err-msg\\\">Email is required.\\n                                  </div>\\n                                  <div *ngIf=\\\"!addForm.hasError('required','email') && addForm.hasError('pattern','email')\\\"\\n                                class=\\\"err-msg\\\">Please enter valid email address.</div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Phone Number :</label>\\n                                <input mask='(000) 000-0000' formControlName=\\\"phone_number\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\" placeholder=\\\"Phone Number\\\">\\n                                <div class=\\\"error\\\"\\n                                  *ngIf=\\\"(submitted && addForm.controls.phone_number.invalid) || addForm.controls.phone_number.touched\\\">\\n                                  <div *ngIf=\\\"addForm.hasError('required','phone_number')\\\" class=\\\"err-msg\\\">Phone number is required.\\n                                  </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Address :</label>\\n                                <input formControlName=\\\"address\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\" placeholder=\\\"Address\\\">\\n                                <div class=\\\"error\\\"\\n                                  *ngIf=\\\"(submitted && addForm.controls.address.invalid) || addForm.controls.address.touched\\\">\\n                                  <div *ngIf=\\\"addForm.hasError('required','address')\\\" class=\\\"err-msg\\\">Address is required.\\n                                  </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">City :</label>\\n                                <input formControlName=\\\"city\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\" placeholder=\\\"City\\\">\\n                                <div class=\\\"error\\\"\\n                                  *ngIf=\\\"(submitted && addForm.controls.city.invalid) || addForm.controls.city.touched\\\">\\n                                  <div *ngIf=\\\"addForm.hasError('required','city')\\\" class=\\\"err-msg\\\">City is required.\\n                                  </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">State :</label>\\n                                <input formControlName=\\\"state\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\" placeholder=\\\"State\\\">\\n                                <div class=\\\"error\\\"\\n                                  *ngIf=\\\"(submitted && addForm.controls.state.invalid) || addForm.controls.state.touched\\\">\\n                                  <div *ngIf=\\\"addForm.hasError('required','state')\\\" class=\\\"err-msg\\\">State is required.\\n                                  </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <!-- <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Country :</label>\\n                                <input formControlName=\\\"country\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\" placeholder=\\\"Enter Country\\\">\\n                                <div class=\\\"error\\\"\\n                                  *ngIf=\\\"(submitted && addForm.controls.country.invalid) || addForm.controls.country.touched\\\">\\n                                  <div *ngIf=\\\"addForm.hasError('required','country')\\\" class=\\\"err-msg\\\">Country is required.\\n                                  </div>\\n                                </div>\\n                            </div>\\n                        </div> -->\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Zip code :</label>\\n                                <input formControlName=\\\"zipcode\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"number\\\" placeholder=\\\"Zip code\\\">\\n                                <div class=\\\"error\\\"\\n                                  *ngIf=\\\"(submitted && addForm.controls.zipcode.invalid) || addForm.controls.zipcode.touched\\\">\\n                                  <div *ngIf=\\\"addForm.hasError('required','zipcode')\\\" class=\\\"err-msg\\\">Zipcode is required.\\n                                  </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <!-- <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Username :</label>\\n                                <input formControlName=\\\"name\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\" placeholder=\\\"Enter Username\\\">\\n                            </div>\\n                        </div> -->\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Password :</label>\\n                                <input formControlName=\\\"password\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"password\\\" placeholder=\\\"Password\\\">\\n                                <div class=\\\"error\\\"\\n                                  *ngIf=\\\"(submitted && addForm.controls.password.invalid) || addForm.controls.password.touched\\\">\\n                                  <div *ngIf=\\\"addForm.hasError('required','password')\\\" class=\\\"err-msg\\\">Password is required.\\n                                  </div>\\n                                  <div *ngIf=\\\"!addForm.hasError('required','password') && addForm.hasError('minlength','password')\\\" class=\\\"err-msg\\\">Password should be atleast 6 characters.\\n                                  </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Confirm Password :</label>\\n                                <input formControlName=\\\"cpassword\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"password\\\" placeholder=\\\"Confirm Password\\\" (keyup)=\\\"checkPassword()\\\">\\n                                <div class=\\\"error\\\"\\n                                  *ngIf=\\\"(submitted && addForm.controls.cpassword.invalid) || addForm.controls.cpassword.touched\\\">\\n                                  <div *ngIf=\\\"addForm.hasError('required','cpassword')\\\" class=\\\"err-msg\\\">Confirm password is required.\\n                                  </div>\\n                                  <div *ngIf=\\\"!addForm.hasError('required','cpassword') && addForm.hasError('minlength','cpassword')\\\" class=\\\"err-msg\\\">Confirm password should be atleast 6 characters.\\n                                  </div>\\n                                  <div *ngIf=\\\"passmessage != ''\\\" class=\\\"err-msg\\\">{{passmessage}}</div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row col-sm-12\\\">\\n                            <div class=\\\"col-sm-12 mt-2\\\">\\n                                <button class=\\\"btn btn-md btn-dark mr-3\\\" type=\\\"submit\\\">Add</button>\\n                                <button class=\\\"btn btn-md btn-secondary\\\" type=\\\"button\\\" [routerLink]=\\\"['/warehouse-user']\\\">Cancel</button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"animated fadeIn\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n        <div class=\\\"col-sm-6\\\">\\n            <form class=\\\"card\\\" [formGroup]=\\\"editForm\\\" (ngSubmit)=\\\"submitEditForm()\\\" #formDir=\\\"ngForm\\\" novalidate>\\n                <div class=\\\"card-header\\\">Warehouse Edit</div>\\n                <div class=\\\"card-body p-4\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Full Name :</label>\\n                                <input formControlName=\\\"full_name\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\"\\n                                    placeholder=\\\"Full Name\\\">\\n                                <div class=\\\"error\\\"\\n                                    *ngIf=\\\"(submitted && editForm.controls.full_name.invalid) || editForm.controls.full_name.touched\\\">\\n                                    <div *ngIf=\\\"editForm.hasError('required','full_name')\\\" class=\\\"err-msg\\\">Full name is\\n                                        required.\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Email :</label>\\n                                <input formControlName=\\\"email\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\"\\n                                    placeholder=\\\"Email\\\" readonly>\\n                                <div class=\\\"error\\\"\\n                                    *ngIf=\\\"(submitted && editForm.controls.email.invalid) || editForm.controls.email.touched\\\">\\n                                    <div *ngIf=\\\"editForm.hasError('required','email')\\\" class=\\\"err-msg\\\">Email is\\n                                        required.\\n                                    </div>\\n                                    <div *ngIf=\\\"!editForm.hasError('required','email') && editForm.hasError('pattern','email')\\\"\\n                                        class=\\\"err-msg\\\">Please enter valid email address.</div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Phone Number :</label>\\n                                <input mask='(000) 000-0000' formControlName=\\\"phone_number\\\" class=\\\"form-control\\\"\\n                                    id=\\\"name\\\" type=\\\"text\\\" placeholder=\\\"Phone Number\\\">\\n                                <div class=\\\"error\\\"\\n                                    *ngIf=\\\"(submitted && editForm.controls.phone_number.invalid) || editForm.controls.phone_number.touched\\\">\\n                                    <div *ngIf=\\\"editForm.hasError('required','phone_number')\\\" class=\\\"err-msg\\\">Phone\\n                                        number is required.\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Address :</label>\\n                                <input formControlName=\\\"address\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\"\\n                                    placeholder=\\\"Address\\\">\\n                                <div class=\\\"error\\\"\\n                                    *ngIf=\\\"(submitted && editForm.controls.address.invalid) || editForm.controls.address.touched\\\">\\n                                    <div *ngIf=\\\"editForm.hasError('required','address')\\\" class=\\\"err-msg\\\">Address is\\n                                        required.\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">City :</label>\\n                                <input formControlName=\\\"city\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\"\\n                                    placeholder=\\\"City\\\">\\n                                <div class=\\\"error\\\"\\n                                    *ngIf=\\\"(submitted && editForm.controls.city.invalid) || editForm.controls.city.touched\\\">\\n                                    <div *ngIf=\\\"editForm.hasError('required','city')\\\" class=\\\"err-msg\\\">City is required.\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">State :</label>\\n                                <input formControlName=\\\"state\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\"\\n                                    placeholder=\\\"State\\\">\\n                                <div class=\\\"error\\\"\\n                                    *ngIf=\\\"(submitted && editForm.controls.state.invalid) || editForm.controls.state.touched\\\">\\n                                    <div *ngIf=\\\"editForm.hasError('required','state')\\\" class=\\\"err-msg\\\">State is\\n                                        required.\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <!-- <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Country :</label>\\n                                <input formControlName=\\\"country\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\" placeholder=\\\"Enter Country\\\">\\n                                <div class=\\\"error\\\"\\n                                  *ngIf=\\\"(submitted && editForm.controls.country.invalid) || editForm.controls.country.touched\\\">\\n                                  <div *ngIf=\\\"editForm.hasError('required','country')\\\" class=\\\"err-msg\\\">Country is required.\\n                                  </div>\\n                                </div>\\n                            </div>\\n                        </div> -->\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Zip code :</label>\\n                                <input formControlName=\\\"zipcode\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"number\\\"\\n                                    placeholder=\\\"Zip code\\\">\\n                                <div class=\\\"error\\\"\\n                                    *ngIf=\\\"(submitted && editForm.controls.zipcode.invalid) || editForm.controls.zipcode.touched\\\">\\n                                    <div *ngIf=\\\"editForm.hasError('required','zipcode')\\\" class=\\\"err-msg\\\">Zipcode is\\n                                        required.\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <!-- <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Username :</label>\\n                                <input formControlName=\\\"name\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\" placeholder=\\\"Enter Username\\\">\\n                            </div>\\n                        </div> -->\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Password :</label>\\n                                <input formControlName=\\\"password\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\"\\n                                    placeholder=\\\"Password\\\">\\n                                <div class=\\\"error\\\"\\n                                    *ngIf=\\\"(submitted && editForm.controls.password.invalid) || editForm.controls.password.touched\\\">\\n                                    <div *ngIf=\\\"editForm.hasError('required','password')\\\" class=\\\"err-msg\\\">Password is\\n                                        required.\\n                                    </div>\\n                                    <div *ngIf=\\\"!editForm.hasError('required','password') && editForm.hasError('minlength','password')\\\"\\n                                        class=\\\"err-msg\\\">Password should be atleast 6 characters.\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Confirm Password :</label>\\n                                <input formControlName=\\\"cpassword\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\"\\n                                    placeholder=\\\"Confirm Password\\\" (keyup)=\\\"checkPassword()\\\">\\n                                <div class=\\\"error\\\"\\n                                    *ngIf=\\\"(submitted && editForm.controls.cpassword.invalid) || editForm.controls.cpassword.touched\\\">\\n                                    <div *ngIf=\\\"editForm.hasError('required','cpassword')\\\" class=\\\"err-msg\\\">Confirm\\n                                        password is required.\\n                                    </div>\\n                                    <div *ngIf=\\\"!editForm.hasError('required','cpassword') && editForm.hasError('minlength','cpassword')\\\"\\n                                        class=\\\"err-msg\\\">Confirm password should be atleast 6 characters.\\n                                    </div>\\n                                    <div *ngIf=\\\"passmessage != ''\\\" class=\\\"err-msg\\\">{{passmessage}}</div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row col-sm-12\\\">\\n                            <div class=\\\"col-sm-12 mt-2\\\">\\n                                <button class=\\\"btn btn-md btn-dark mr-3\\\" type=\\\"submit\\\">Save</button>\\n                                <button class=\\\"btn btn-md btn-secondary\\\" type=\\\"button\\\"\\n                                    [routerLink]=\\\"['/warehouse-user']\\\">Cancel</button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"animated fadeIn\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n            <div class=\\\"card\\\">\\n                <!-- <div class=\\\"card-header\\\">Warehouse View</div> -->\\n                <div class=\\\"card-header d-flex justify-content-between align-items-center\\\">Warehouse View\\n                    <div class=\\\"pull-right\\\">\\n                        <a [routerLink]=\\\"['/warehouse-user']\\\" class=\\\"btn btn-md btn-secondary\\\" type=\\\"button\\\">Back</a>\\n                    </div>\\n                </div>\\n                <div class=\\\"card-body pt-2 pb-2 pl-4 pr-4\\\">\\n                    <div class=\\\"responsive-table user-view scan-view-table\\\">\\n                        <table class=\\\"table\\\">\\n                            <tbody>\\n                                <tr>\\n                                    <td><strong>Full Name:</strong></td>\\n                                    <td>{{userData?.full_name}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><strong>Email :</strong></td>\\n                                    <td>{{userData?.email}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><strong>Phone Number:</strong></td>\\n                                    <td>{{userData?.phone_number | mask: '(000) 000-0000'}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><strong>Address:</strong></td>\\n                                    <td>{{userData?.address}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><strong>City :</strong></td>\\n                                    <td>{{userData?.city}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><strong>State:</strong></td>\\n                                    <td>{{userData?.state}}</td>\\n                                </tr>\\n                                <!-- <tr>\\n                                    <td><strong>Country:</strong></td>\\n                                    <td>{{userData?.country}}</td>\\n                                </tr> -->\\n                                <tr>\\n                                    <td><strong>Zip code :</strong></td>\\n                                    <td>{{userData?.zipcode}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><strong>Password :</strong></td>\\n                                    <td>{{userData?.user_passowrd}}</td>\\n                                </tr>\\n                                <!-- <tr>\\n                                    <td><strong>Username :</strong></td>\\n                                    <td>username</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><strong>Password :</strong></td>\\n                                    <td>{{userData?.full_name}}</td>\\n                                </tr> -->\\n                            </tbody>\\n                        </table>\\n                        <table>\\n                        </table>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"animated fadeIn\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-header\\\">Warehouse Users</div>\\n                <div class=\\\"card-body p-4\\\">\\n                    <div class=\\\"d-flex flex-wrap justify-content-end align-items-center\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <button class=\\\"btn btn-md btn-primary\\\" type=\\\"button\\\" [routerLink]=\\\"['/warehouse-user/add']\\\"><i class=\\\"fa fa-plus mr-2\\n                        \\\"></i>Add Warehouse User</button>\\n                        </div>\\n\\n                        <div class=\\\"form-group dropdown\\\" style=\\\"float: right; margin-left: 10px;\\\">\\n                            <button (click)=\\\"commonService.toggleDropDown()\\\" class=\\\"btn btn-md btn-primary dropbtn\\\" type=\\\"button\\\"><i class=\\\"fa fa-file-export mr-2\\n                            \\\"></i>Export</button>\\n                            <div id=\\\"myDropdown\\\" class=\\\"dropdown-content\\\">\\n                                <a href=\\\"javascript:void(0)\\\" (click)=\\\"exportType('xlsx')\\\">Export to XLSX</a>\\n                                <!-- <a href=\\\"javascript:void(0)\\\" (click)=\\\"commonService.exportPDF(true, 3, 'warehouseUserList');rerender();\\\">Export to PDF</a> -->\\n                                <!-- <a href=\\\"javascript:void(0)\\\" (click)=\\\"exportType('pdf')\\\">Export to PDF</a> -->\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <perfect-scrollbar>\\n                    <div class=\\\"responsive-table rounded mb-4\\\">\\n                        <table datatable [dtOptions]=\\\"dtOptions\\\" [dtTrigger]=\\\"dtTrigger\\\" class=\\\"data row-border hover table order-table border\\\" id=\\\"excel-table\\\">\\n                            <thead>\\n                                <tr>\\n                                    <th>Full Name</th>\\n                                    <th>Email</th>\\n                                    <th>Phone Number</th>\\n                                    <th class=\\\"text-center\\\">Actions</th>\\n                                </tr>\\n                            </thead>\\n                            <tbody>\\n                                <tr *ngFor=\\\"let user of userList;let i = index;\\\">\\n                                    <td>{{user.full_name || \\\"-\\\"}}</td>\\n                                    <td>{{user.email || \\\"-\\\"}}</td>\\n                                    <td>{{user.phone_number ? (user.phone_number | mask: '(000) 000-0000') : \\\"-\\\"}}</td>\\n                                    <td>\\n                                        <div class=\\\"d-flex align-items-center justify-content-center\\\">\\n                                            <a class=\\\"text-primary mx-2\\\"\\n                                            [routerLink]=\\\"['/warehouse-user/view']\\\" [queryParams]='{id: user?.id}'><i\\n                                                class=\\\"fa fa-eye\\\"></i></a>\\n                                        <a class=\\\"text-dark mx-2\\\" [routerLink]=\\\"['/warehouse-user/edit']\\\" [queryParams]='{id: user?.id}'><i\\n                                                class=\\\"fa fa-pencil\\\"></i></a>\\n                                        <a class=\\\"text-danger mx-2\\\" href=\\\"javascript:void(0)\\\"\\n                                            (click)=\\\"deleteModal.show();saveId(user?.id);\\\"><i class=\\\"far fa-trash-alt\\\"></i></a>\\n                                        </div>\\n                                    </td>\\n                                </tr>\\n                                <tr *ngIf=\\\"userList?.length == 0\\\">\\n                                    <td colspan=\\\"4\\\" class=\\\"no-data-available\\\">No Data Found !</td>\\n                                </tr>\\n\\n                            </tbody>\\n                        </table>\\n                    </div>\\n                    </perfect-scrollbar>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n<!-- delete modal -->\\n<div bsModal #deleteModal=\\\"bs-modal\\\" class=\\\"modal fade text-center\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"Delete\\\"\\n    aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-sm modal-dialog-centered\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-body py-4 text-center d-flex flex-column justify-content-center\\\">\\n                <h2 class=\\\"font-weight-bold mb-4 text-primary\\\">Delete</h2>\\n                <p class=\\\"mb-0\\\">Are You Sure You Want To Delete ?</p>\\n            </div>\\n            <div class=\\\"modal-footer justify-content-center\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"deleteModal.hide()\\\">Cancel</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deleteUser()\\\">Delete</button>\\n            </div>\\n        </div><!-- /.modal-content -->\\n    </div>\\n</div><!-- /.modal -->\";","import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserService } from '../../../shared/services/user.service';\nimport { Validations } from '../../../shared/validators/Validations';\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n})\nexport class AddComponent implements OnInit {\n  \n  addForm: FormGroup;\n  submitted: boolean = false;\n  passmessage: string = \"\"\n  \n  constructor(\n    private titleService: Title,\n    private userService:UserService,\n    private toastr: ToastrService,\n    private router:Router, \n    private route:ActivatedRoute,\n  ) {}\n  \n  ngOnInit(): void {\n    this.titleService.setTitle(\"Warehouse Add\");\n\n    this.addForm = new FormGroup({\n      full_name: new FormControl('', [\n        Validators.required\n      ]),\n      email: new FormControl('', [\n        Validators.required,\n        Validators.pattern(Validations.email_pattern)\n      ]),\n      phone_number: new FormControl('', [\n        Validators.required\n      ]),\n      address: new FormControl('', [\n        Validators.required\n      ]),\n      city: new FormControl('', [\n        Validators.required\n      ]),\n      state: new FormControl('', [\n        Validators.required\n      ]),\n      // country: new FormControl('', [\n      //   Validators.required\n      // ]),\n      zipcode: new FormControl('', [\n        Validators.required\n      ]),\n      password: new FormControl('', [\n        Validators.required,\n        Validators.minLength(6)\n      ]),\n      cpassword: new FormControl('', [\n        Validators.required,\n        Validators.minLength(6)\n      ])\n      //username: new FormControl('', [\n        //Validators.required\n      //])\n    });\n  }\n\n  checkPassword() {\n    let password = this.addForm.controls.password.value;\n    let cpassword = this.addForm.controls.cpassword.value;\n    if (password != cpassword && this.addForm.valid == true) {\n      this.passmessage = \"Password and confirm password must be same.\"\n      return true;\n    }\n    else {\n      this.passmessage = \"\"\n      return false;\n    }\n  }\n\n  submitAddForm(){\n    this.submitted = true;\n\n      var formData = new FormData();\n      formData.append(\"full_name\", this.addForm.controls.full_name.value);\n      formData.append(\"email\", this.addForm.controls.email.value);\n      formData.append(\"phone_number\", this.addForm.controls.phone_number.value);\n      formData.append(\"address\", this.addForm.controls.address.value);\n      formData.append(\"city\", this.addForm.controls.city.value);\n      formData.append(\"state\", this.addForm.controls.state.value);\n      //formData.append(\"country\", this.addForm.controls.country.value);\n      formData.append(\"zipcode\", this.addForm.controls.zipcode.value);\n      formData.append(\"password\", this.addForm.controls.password.value);\n      formData.append(\"confirm_password\", this.addForm.controls.cpassword.value);\n      formData.append(\"user_type\", \"WAREHOUSE\");\n\n      if (this.addForm.valid) {\n      this.userService.register(formData).subscribe(response => {\n        let resData = JSON.parse(JSON.stringify(response));\n\n        if(resData.status_code == 200){\n          this.router.navigate(['warehouse-user']).then(() => {\n            this.toastr.success('', \"Warehouse user added successfully!\");\n          });\n        }else{\n          this.toastr.error('', resData.message);\n        }\n      },\n        err => {\n          this.toastr.error('', err.error.message);\n        });\n\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserService } from '../../../shared/services/user.service';\nimport { Validations } from '../../../shared/validators/Validations';\n\n@Component({\n  templateUrl: 'edit.component.html',\n})\nexport class EditComponent implements OnInit {\n\n  editForm: FormGroup;\n  submitted: boolean = false;\n  userId: any;\n  passmessage: string = \"\"\n\n  constructor(\n    private titleService: Title,\n    private userService: UserService,\n    private toastr: ToastrService,\n    private router: Router,\n    private route: ActivatedRoute,\n  ) { }\n\n  ngOnInit(): void {\n    this.titleService.setTitle(\"Warehouse Edit\");\n\n    this.editForm = new FormGroup({\n      full_name: new FormControl('', [\n        Validators.required\n      ]),\n      email: new FormControl('', [\n        Validators.required,\n        Validators.pattern(Validations.email_pattern)\n      ]),\n      phone_number: new FormControl('', [\n        Validators.required\n      ]),\n      address: new FormControl('', [\n        Validators.required\n      ]),\n      city: new FormControl('', [\n        Validators.required\n      ]),\n      state: new FormControl('', [\n        Validators.required\n      ]),\n      // country: new FormControl('', [\n      //   Validators.required\n      // ]),\n      zipcode: new FormControl('', [\n        Validators.required\n      ]),\n      password: new FormControl('', [\n        Validators.required,\n        Validators.minLength(6)\n      ]),\n      cpassword: new FormControl('', [\n        Validators.required,\n        Validators.minLength(6)\n      ])\n      //username: new FormControl('', [\n      //Validators.required\n      //])\n    });\n\n    this.route.queryParams.subscribe(param => {\n      this.userId = param.id;\n    });\n\n    this.getUserInfo();\n  }\n\n  getUserInfo() {\n    this.userService.getUser(this.userId).subscribe(response => {\n      let resData = JSON.parse(JSON.stringify(response));\n\n      if (resData.status_code == 200) {\n        var data = resData.data;\n        this.editForm.patchValue({\n          full_name: data.full_name,\n          email: data.email,\n          phone_number: data.phone_number,\n          address: data.address,\n          city: data.city,\n          state: data.state,\n          //country : data.country,\n          zipcode: data.zipcode,\n          password: data.user_passowrd,\n          cpassword: data.user_passowrd\n        });\n      } else {\n        this.toastr.error('', resData.message);\n      }\n    },\n      err => {\n        this.toastr.error('', err.error.message);\n      });\n  }\n\n  checkPassword() {\n    let password = this.editForm.controls.password.value;\n    let cpassword = this.editForm.controls.cpassword.value;\n    if (password != cpassword && this.editForm.valid == true) {\n      this.passmessage = \"Password and confirm password must be same.\"\n      return true;\n    }\n    else {\n      this.passmessage = \"\"\n      return false;\n    }\n  }\n\n  submitEditForm() {\n    this.submitted = true;\n    this.editForm.markAllAsTouched();\n\n    if (this.editForm.controls.password.value == this.editForm.controls.cpassword.value) {\n      var formData = new FormData();\n      formData.append(\"full_name\", this.editForm.controls.full_name.value);\n      formData.append(\"email\", this.editForm.controls.email.value);\n      formData.append(\"phone_number\", this.editForm.controls.phone_number.value);\n      formData.append(\"address\", this.editForm.controls.address.value);\n      formData.append(\"city\", this.editForm.controls.city.value);\n      formData.append(\"state\", this.editForm.controls.state.value);\n      //formData.append(\"country\", this.editForm.controls.country.value);\n      formData.append(\"zipcode\", this.editForm.controls.zipcode.value);\n      formData.append(\"password\", this.editForm.controls.password.value);\n      formData.append(\"confirm_password\", this.editForm.controls.cpassword.value);\n      formData.append(\"user_type\", \"WAREHOUSE\");\n\n      if (this.editForm.valid) {\n        this.userService.editprofile(formData, this.userId).subscribe(response => {\n          let resData = JSON.parse(JSON.stringify(response));\n\n          if (resData.status_code == 200) {\n            this.router.navigate(['warehouse-user']).then(() => {\n              this.toastr.success('', \"Warehouse user updated successfully!\");\n            });\n          } else {\n            this.toastr.error('', resData.message);\n          }\n        },\n          err => {\n            this.toastr.error('', err.error.message);\n          });\n\n      }\n    }\n    else {\n      this.passmessage = \"Password and confirm password must be same.\"\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { ToastrService } from 'ngx-toastr';\nimport { UserService } from '../../../shared/services/user.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  templateUrl: 'view.component.html',\n})\nexport class ViewComponent implements OnInit {\n\n  userData:any;\n  userId:any;\n\t\n  constructor(\n    private titleService: Title,\n    private toastr: ToastrService,\n    private userService:UserService,\n    private router:Router, \n    private route:ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.titleService.setTitle(\"Warehouse View\");\n    this.getUserInfo();\n  }\n\n  getUserInfo(){\n\tthis.route.queryParams.subscribe(param => {\n      this.userId = param.id;\n    });\n    \n    this.userService.getUser(this.userId).subscribe(response => {\n        let resData = JSON.parse(JSON.stringify(response));\n\n        if(resData.status_code == 200){\n          this.userData = resData.data;\n        }else{\n          this.toastr.error('', resData.message);\n        }\n      },\n        err => {\n          this.toastr.error('', err.error.message);\n        });\n\t}\n\n\n}\n","import { NgModule } from '@angular/core';\nimport {WarehouseUserComponent} from './warehouse-user.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ViewComponent } from './view/view.component';\nimport { EditComponent } from './edit/edit.component';\nimport { AddComponent } from './add/add.component';\n\nconst routes: Routes = [ \n  {\n    path: '',\n    data: {\n      title: 'Warehouse Users'\n    },\n    children: [\n      {\n        path: '',\n        component: WarehouseUserComponent,\n        data: {\n          title: 'List'\n        }\n      },\n      {\n        path: 'add',\n        component: AddComponent,\n        data: {\n          title: 'Add'\n        },\n      },\n      {\n        path: 'edit',\n        component: EditComponent,\n        data: {\n          title: 'Edit'\n        },\n      },\n      {\n        path: 'view',\n        component: ViewComponent,\n        data: {\n          title: 'User View'\n        },\n      },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class WarehouseUserRoutingModule { }\n","import { Component, OnInit, TemplateRef, ViewChild, AfterViewInit, OnDestroy } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport { DataTableDirective } from 'angular-datatables';\nimport { ToastrService } from 'ngx-toastr';\nimport { UserService } from '../../shared/services/user.service';\nimport { Subject } from 'rxjs';\nimport { CommonService } from '../../shared/services/common.service';\n\n@Component({\n  selector: 'app-warehouse-user',\n  templateUrl: './warehouse-user.component.html',\n})\nexport class WarehouseUserComponent implements AfterViewInit, OnDestroy, OnInit {\n\n  @ViewChild('deleteModal') public deleteModal: ModalDirective;\n  @ViewChild(DataTableDirective)\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  userList: Array<any>;\n  userId: any;\n  datatbaleData: any\n\n  constructor(\n    private titleService: Title,\n    private toastr: ToastrService,\n    private userService: UserService,\n    public commonService: CommonService\n  ) { }\n\n  ngOnInit(): void {\n    this.titleService.setTitle(\"Warehouse User\");\n    this.getUserList();\n  }\n\n  getUserList() {\n    this.dtOptions = {\n      pagingType: 'full_numbers',\n      pageLength: 100,\n      //order: [1, 'desc'],\n      serverSide: true,\n      processing: true,\n      ajax: (dataTablesParameters: any, callback) => {\n        dataTablesParameters.page = parseInt(dataTablesParameters.start) / parseInt(dataTablesParameters.length) + 1;\n        dataTablesParameters.limit = dataTablesParameters.length;\n        dataTablesParameters.search_params = dataTablesParameters.search.value;\n\n        // sorting\n        dataTablesParameters.order[0].column == 0 ? dataTablesParameters.full_name = (dataTablesParameters.order[0].column == 0 && dataTablesParameters.order[0].dir == \"asc\") ? (\"full_name\") : (\"-full_name\") : \"\";\n        dataTablesParameters.order[0].column == 1 ? dataTablesParameters.email = (dataTablesParameters.order[0].column == 1 && dataTablesParameters.order[0].dir == \"asc\") ? (\"email\") : (\"-email\") : \"\";\n        dataTablesParameters.order[0].column == 2 ? dataTablesParameters.email = (dataTablesParameters.order[0].column == 2 && dataTablesParameters.order[0].dir == \"asc\") ? (\"phone_number\") : (\"-phone_number\") : \"\";\n        this.datatbaleData = dataTablesParameters\n\n        this.userService\n          .warehouseUserList(dataTablesParameters)\n          .subscribe(\n            respones => {\n              let resData = JSON.parse(JSON.stringify(respones));\n              if (resData.status_code == 200) {\n                this.userList = resData.data;\n\n                callback({\n                  recordsTotal: resData.total_record,\n                  recordsFiltered: dataTablesParameters.search_params == \"\" ? resData.total_record : resData.filter_record,\n                  data: []\n                });\n              } else {\n                this.toastr.error('', resData.message);\n              }\n\n            },\n            err => {\n              this.toastr.error('', err.error.message);\n            }\n          );\n      },\n      columns: [\n        { data: 'full_name', searchable: true, orderable: true },\n        { data: 'email', searchable: true, orderable: true },\n        { data: 'phone_number', searchable: true, orderable: true },\n        { data: 'action', searchable: false, orderable: false }]\n    };\n  }\n\n  ngAfterViewInit(): void {\n    this.dtTrigger.next();\n  }\n\n  ngOnDestroy(): void {\n    this.dtTrigger.unsubscribe();\n  }\n\n  saveId(userId) {\n    this.userId = userId;\n  }\n\n  deleteUser() {\n    this.userService\n      .deleteuser(this.userId)\n      .subscribe(\n        response => {\n          let resData = JSON.parse(JSON.stringify(response));\n          if (resData.status_code == 200) {\n            this.deleteModal.hide();\n            this.toastr.success('', resData.message)\n            this.rerender();\n          } else {\n            this.toastr.error('', resData.message);\n          }\n        },\n        err => {\n          this.toastr.error('', err.error.mesaage);\n        }\n      );\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      dtInstance.destroy();\n      this.dtTrigger.next();\n    });\n  }\n\n  exportType(type) {\n    this.datatbaleData.page = \"1\";\n    this.datatbaleData.limit = \"100000\";\n    this.userService\n      .warehouseUserList(this.datatbaleData).subscribe(response => {\n        let resData = JSON.parse(JSON.stringify(response));\n\n        if (resData.status_code == 200) {\n          const onlyNameAndSymbolArr = resData.data.map(x => ({\n            'Full Name': x.full_name || \"-\",\n            'Email': x.email || \"-\",\n            'Phone Number': x.phone_number || \"-\"\n          }));\n\n          if (type == 'pdf') {\n            if (onlyNameAndSymbolArr.length > 0) {\n              var keys = [Object.keys(onlyNameAndSymbolArr[0])]\n              var values = onlyNameAndSymbolArr.map(element => Object.values(element));\n              this.commonService.exportArrayPDF(keys, values, 'warehouseUserList')\n            } else {\n              this.toastr.error('', \"No Data Found !\");\n              $(\"#myDropdown\").toggle();\n            }\n          } else {\n            this.commonService.exportCsv(resData.data, onlyNameAndSymbolArr, 'warehouseUserList');\n          }\n\n        } else {\n          this.toastr.error('', resData.message);\n        }\n      },\n        err => {\n          this.toastr.error('', err.error.message);\n        });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WarehouseUserComponent} from './warehouse-user.component';\nimport { WarehouseUserRoutingModule } from './warehouse-user-routing.module';\nimport { DataTablesModule } from 'angular-datatables';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { ViewComponent } from './view/view.component';\nimport { EditComponent } from './edit/edit.component';\nimport { AddComponent } from './add/add.component';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { UserService } from '../../shared/services/user.service';\nimport { NgxMaskModule, IConfig } from 'ngx-mask'\nconst maskConfig: Partial<IConfig> = {\n  validation: false,\n};\n\n@NgModule({\n  declarations: [WarehouseUserComponent,AddComponent,EditComponent,ViewComponent],\n  imports: [\n    CommonModule,\n    WarehouseUserRoutingModule,\n    ModalModule,\n    DataTablesModule,\n    PerfectScrollbarModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxMaskModule.forRoot(maskConfig)\n  ],\n  providers:[\n  \tUserService\n  ]\n})\nexport class WarehouseUserModule { }\n"],"sourceRoot":"webpack:///"}