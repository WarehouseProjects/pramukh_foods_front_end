{"version":3,"sources":["./node_modules/ngx-print/fesm5/ngx-print.js","./src/app/views/sales-management/order-invoice/order-invoice.component.html","./src/app/views/sales-management/sales-management.component.html","./src/app/views/sales-management/status-order/status-order.component.html","./src/app/views/sales-management/update-payment-received/update-payment-received.component.html","./src/app/shared/services/sales-management.service.ts","./src/app/views/sales-management/order-invoice/order-invoice.component.ts","./src/app/views/sales-management/sales-management-routing.module.ts","./src/app/views/sales-management/sales-management.component.ts","./src/app/views/sales-management/sales-management.module.ts","./src/app/views/sales-management/status-order/status-order.component.ts","./src/app/views/sales-management/update-payment-received/update-payment-received.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiC;AACwC;;AAEzE;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,0CAA0C,sDAAQ,6CAA6C,oBAAoB;AACnH;AACA;AACA;AACA;AACA,+BAA+B,QAAQ,gBAAgB;AACvD;AACA;AACA;AACA;AACA,6BAA6B,0BAA0B;AACvD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,2BAA2B,yBAAyB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+bAA+b,wEAAwE,uCAAuC,8CAA8C,iBAAiB,2BAA2B,eAAe,qCAAqC,iCAAiC,eAAe,mEAAmE;AAC/yB;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB;AACjB;AACA;AACA,0BAA0B,OAAO,mDAAK,EAAE;AACxC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,iBAAiB,OAAO,0DAAY,oBAAoB;AACxD;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA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","file":"views-sales-management-sales-management-module.js","sourcesContent":["import { __values } from 'tslib';\nimport { Directive, HostListener, Input, NgModule } from '@angular/core';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar NgxPrintDirective = /** @class */ (function () {\r\n    function NgxPrintDirective() {\r\n        this._printStyle = [];\r\n        /**\r\n         *\r\n         *\r\n         * \\@memberof NgxPrintDirective\r\n         */\r\n        this.useExistingCss = false;\r\n        /**\r\n         * A delay in milliseconds to force the print dialog to wait before opened. Default: 0\r\n         *\r\n         * \\@memberof NgxPrintDirective\r\n         */\r\n        this.printDelay = 0;\r\n        /**\r\n         *\r\n         *\r\n         * @return html for the given tag\r\n         *\r\n         * \\@memberof NgxPrintDirective\r\n         */\r\n        this._styleSheetFile = '';\r\n    }\r\n    Object.defineProperty(NgxPrintDirective.prototype, \"printStyle\", {\r\n        /**\r\n         *\r\n         *\r\n         * @memberof NgxPrintDirective\r\n         */\r\n        set: /**\r\n         *\r\n         *\r\n         * \\@memberof NgxPrintDirective\r\n         * @param {?} values\r\n         * @return {?}\r\n         */\r\n        function (values) {\r\n            for (var key in values) {\r\n                if (values.hasOwnProperty(key)) {\r\n                    this._printStyle.push((key + JSON.stringify(values[key])).replace(/['\"]+/g, ''));\r\n                }\r\n            }\r\n            this.returnStyleValues();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     *\r\n     * @returns the string that create the stylesheet which will be injected\r\n     * later within <style></style> tag.\r\n     *\r\n     * -join/replace to transform an array objects to css-styled string\r\n     *\r\n     * @memberof NgxPrintDirective\r\n     */\r\n    /**\r\n     *\r\n     *\r\n     * \\@memberof NgxPrintDirective\r\n     * @return {?} the string that create the stylesheet which will be injected\r\n     * later within <style></style> tag.\r\n     *\r\n     * -join/replace to transform an array objects to css-styled string\r\n     *\r\n     */\r\n    NgxPrintDirective.prototype.returnStyleValues = /**\r\n     *\r\n     *\r\n     * \\@memberof NgxPrintDirective\r\n     * @return {?} the string that create the stylesheet which will be injected\r\n     * later within <style></style> tag.\r\n     *\r\n     * -join/replace to transform an array objects to css-styled string\r\n     *\r\n     */\r\n    function () {\r\n        return \"<style> \" + this._printStyle.join(' ').replace(/,/g, ';') + \" </style>\";\r\n    };\r\n    Object.defineProperty(NgxPrintDirective.prototype, \"styleSheetFile\", {\r\n        /**\r\n         * @memberof NgxPrintDirective\r\n         * @param cssList\r\n         */\r\n        set: /**\r\n         * \\@memberof NgxPrintDirective\r\n         * @param {?} cssList\r\n         * @return {?}\r\n         */\r\n        function (cssList) {\r\n            var e_1, _a;\r\n            /** @type {?} */\r\n            var linkTagFn = (/**\r\n             * @param {?} cssFileName\r\n             * @return {?}\r\n             */\r\n            function (cssFileName) {\r\n                return \"<link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"\" + cssFileName + \"\\\">\";\r\n            });\r\n            if (cssList.indexOf(',') !== -1) {\r\n                /** @type {?} */\r\n                var valueArr = cssList.split(',');\r\n                try {\r\n                    for (var valueArr_1 = __values(valueArr), valueArr_1_1 = valueArr_1.next(); !valueArr_1_1.done; valueArr_1_1 = valueArr_1.next()) {\r\n                        var val = valueArr_1_1.value;\r\n                        this._styleSheetFile = this._styleSheetFile + linkTagFn(val);\r\n                    }\r\n                }\r\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (valueArr_1_1 && !valueArr_1_1.done && (_a = valueArr_1.return)) _a.call(valueArr_1);\r\n                    }\r\n                    finally { if (e_1) throw e_1.error; }\r\n                }\r\n            }\r\n            else {\r\n                this._styleSheetFile = linkTagFn(cssList);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @returns string which contains the link tags containing the css which will\r\n     * be injected later within <head></head> tag.\r\n     *\r\n     */\r\n    /**\r\n     * @private\r\n     * @return {?} string which contains the link tags containing the css which will\r\n     * be injected later within <head></head> tag.\r\n     *\r\n     */\r\n    NgxPrintDirective.prototype.returnStyleSheetLinkTags = /**\r\n     * @private\r\n     * @return {?} string which contains the link tags containing the css which will\r\n     * be injected later within <head></head> tag.\r\n     *\r\n     */\r\n    function () {\r\n        return this._styleSheetFile;\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} tag\r\n     * @return {?}\r\n     */\r\n    NgxPrintDirective.prototype.getElementTag = /**\r\n     * @private\r\n     * @param {?} tag\r\n     * @return {?}\r\n     */\r\n    function (tag) {\r\n        /** @type {?} */\r\n        var html = [];\r\n        /** @type {?} */\r\n        var elements = document.getElementsByTagName(tag);\r\n        for (var index = 0; index < elements.length; index++) {\r\n            html.push(elements[index].outerHTML);\r\n        }\r\n        return html.join('\\r\\n');\r\n    };\r\n    /**\r\n     *\r\n     * @param data the html element collection to save defaults to\r\n     *\r\n     */\r\n    /**\r\n     *\r\n     * @private\r\n     * @param {?} data the html element collection to save defaults to\r\n     *\r\n     * @return {?}\r\n     */\r\n    NgxPrintDirective.prototype.getFormData = /**\r\n     *\r\n     * @private\r\n     * @param {?} data the html element collection to save defaults to\r\n     *\r\n     * @return {?}\r\n     */\r\n    function (data) {\r\n        for (var i = 0; i < data.length; i++) {\r\n            data[i].defaultValue = data[i].value;\r\n            if (data[i].checked) {\r\n                data[i].defaultChecked = true;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @returns html section to be printed along with some associated inputs\r\n     *\r\n     */\r\n    /**\r\n     * @private\r\n     * @return {?} html section to be printed along with some associated inputs\r\n     *\r\n     */\r\n    NgxPrintDirective.prototype.getHtmlContents = /**\r\n     * @private\r\n     * @return {?} html section to be printed along with some associated inputs\r\n     *\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var printContents = document.getElementById(this.printSectionId);\r\n        /** @type {?} */\r\n        var innards = printContents.getElementsByTagName('input');\r\n        this.getFormData(innards);\r\n        /** @type {?} */\r\n        var txt = printContents.getElementsByTagName('textarea');\r\n        this.getFormData(txt);\r\n        return printContents.innerHTML;\r\n    };\r\n    /**\r\n     *\r\n     *\r\n     * @memberof NgxPrintDirective\r\n     */\r\n    /**\r\n     *\r\n     *\r\n     * \\@memberof NgxPrintDirective\r\n     * @return {?}\r\n     */\r\n    NgxPrintDirective.prototype.print = /**\r\n     *\r\n     *\r\n     * \\@memberof NgxPrintDirective\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var printContents;\r\n        /** @type {?} */\r\n        var popupWin;\r\n        /** @type {?} */\r\n        var styles = '';\r\n        /** @type {?} */\r\n        var links = '';\r\n        /** @type {?} */\r\n        var baseTag = this.getElementTag('base');\r\n        if (this.useExistingCss) {\r\n            styles = this.getElementTag('style');\r\n            links = this.getElementTag('link');\r\n        }\r\n        printContents = this.getHtmlContents();\r\n        popupWin = window.open(\"\", \"_blank\", \"top=0,left=0,height=auto,width=auto\");\r\n        popupWin.document.open();\r\n        popupWin.document.write(\"\\n      <html>\\n        <head>\\n          <title>\" + (this.printTitle ? this.printTitle : \"\") + \"</title>\\n          \" + baseTag + \"\\n          \" + this.returnStyleValues() + \"\\n          \" + this.returnStyleSheetLinkTags() + \"\\n          \" + styles + \"\\n          \" + links + \"\\n        </head>\\n        <body>\\n          \" + printContents + \"\\n          <script defer>\\n            function triggerPrint(event) {\\n              window.removeEventListener('load', triggerPrint, false);\\n              setTimeout(function() {\\n                closeWindow(window.print());\\n              }, \" + this.printDelay + \");\\n            }\\n            function closeWindow(){\\n                window.close();\\n            }\\n            window.addEventListener('load', triggerPrint, false);\\n          </script>\\n        </body>\\n      </html>\");\r\n        popupWin.document.close();\r\n    };\r\n    NgxPrintDirective.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: \"button[ngxPrint]\"\r\n                },] }\r\n    ];\r\n    NgxPrintDirective.propDecorators = {\r\n        printSectionId: [{ type: Input }],\r\n        printTitle: [{ type: Input }],\r\n        useExistingCss: [{ type: Input }],\r\n        printDelay: [{ type: Input }],\r\n        printStyle: [{ type: Input }],\r\n        styleSheetFile: [{ type: Input }],\r\n        print: [{ type: HostListener, args: ['click',] }]\r\n    };\r\n    return NgxPrintDirective;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar NgxPrintModule = /** @class */ (function () {\r\n    function NgxPrintModule() {\r\n    }\r\n    NgxPrintModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    declarations: [NgxPrintDirective],\r\n                    imports: [],\r\n                    exports: [NgxPrintDirective]\r\n                },] }\r\n    ];\r\n    return NgxPrintModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { NgxPrintDirective, NgxPrintModule };\n\n//# sourceMappingURL=ngx-print.js.map","export default \"<div class=\\\"animated fadeIn\\\" style=\\\"display: none;\\\" id=\\\"print-section\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"card\\\">\\n        <!-- <div class=\\\"card-header\\\">{{orderData?.status}} Status Order</div> -->\\n        <!-- <div class=\\\"card-header\\\">Order Details</div> -->\\n        <div class=\\\"card-header d-flex justify-content-between align-items-center\\\">Order Details <div\\n            class=\\\"pull-right\\\">\\n            <a [routerLink]=\\\"['/sales-management']\\\"\\n              [queryParams]='{vs: selectedVerificationStatus, os: selectedOrderStatus, sn: selectedStoreName, ps: selectedPaymentStatus, fdd: selectedFromDueDate, tdd: selectedToDueDate, fd: selectedFromDate, td: selectedToDate, limit: this.tableLimit, firstTime: true, search: salesSearchValue}'\\n              class=\\\"btn btn-md btn-secondary\\\" type=\\\"button\\\">Back</a>\\n          </div>\\n        </div>\\n        <div class=\\\"card-body p-4\\\">\\n          <!-- <div class=\\\"d-flex flex-wrap justify-content-between align-items-start mb-0\\\">\\n                        <div class=\\\"form-group w-100 text-right\\\">\\n                            <button class=\\\"btn btn-md btn-primary\\\">Print Invoice</button>\\n                        </div>\\n                    </div> -->\\n          <div class=\\\"customer-content sales-content\\\">\\n            <ul class=\\\"d-flex flex-wrap\\\">\\n              <li>\\n                <strong>Invoice No</strong>\\n                <span>{{orderData?.invoice_no}}</span>\\n              </li>\\n              <li>\\n                <strong>Customer Name</strong>\\n                <span>{{orderData?.customer_name}}</span>\\n              </li>\\n              <li>\\n                <strong>Billing Address</strong>\\n                <span>{{orderData?.billing_address}}</span>\\n              </li>\\n              <li>\\n                <strong>Shipping Address</strong>\\n                <span>{{orderData?.shipping_address}}</span>\\n              </li>\\n              <li>\\n                <strong>Order Date</strong>\\n                <span>{{orderData?.order_date ? (orderData?.order_date | date: 'yyyy/MM/dd') :\\n                  \\\"\\\"}}</span>\\n              </li>\\n              <li>\\n                <strong>Order Status</strong>\\n                <span>{{orderData?.order_status}}</span>\\n              </li>\\n              <li>\\n                <strong>Payment Due Date</strong>\\n                <span>{{orderData?.due_date ? (orderData?.due_date | date: 'yyyy/MM/dd') : \\\"\\\"}}</span>\\n              </li>\\n            </ul>\\n          </div>\\n          <div class=\\\"responsive-table rounded mb-4\\\">\\n            <perfect-scrollbar>\\n              <table class=\\\"data row-border hover table order-table border\\\">\\n                <thead>\\n                  <tr>\\n                    <th>Product Name</th>\\n                    <th>Quantity</th>\\n                    <th>Sales Rate</th>\\n                    <th>Order Amount</th>\\n                    <th>Discount</th>\\n                    <th>Final Order Amount </th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr *ngFor=\\\"let product of productList;let i = index;\\\">\\n                    <td>{{product.product_name || \\\"-\\\"}}</td>\\n                    <td>{{product.quantity || \\\"-\\\"}}</td>\\n                    <td>{{product.sales_rate ? (\\\"$\\\"+(product.sales_rate | number : '1.2-2')) : \\\"-\\\"}}</td>\\n                    <td>{{product.order_price ? (\\\"$\\\"+(product.order_price | number : '1.2-2')) : \\\"-\\\"}}</td>\\n                    <td>{{product.discount || \\\"-\\\"}}</td>\\n                    <td>{{product.final_order_amount ? (\\\"$\\\"+(product.final_order_amount | number : '1.2-2')) : \\\"-\\\"}}\\n                    </td>\\n                  </tr>\\n                  <tr *ngIf=\\\"productList?.length == 0\\\">\\n                    <td colspan=\\\"6\\\" class=\\\"no-data-available\\\">No Data Found !</td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n            </perfect-scrollbar>\\n            <div class=\\\"calcuted-data\\\">\\n              <ul class=\\\"justify-content-end\\\">\\n                <li>\\n                  <strong>Sub Total</strong>\\n                  <span>{{orderData?.sub_total ? (\\\"$ \\\"+orderData?.sub_total) : \\\"$ 0\\\"}}</span>\\n                </li>\\n                <li>\\n                  <strong>Total</strong>\\n                  <span>{{orderData?.total ? (\\\"$ \\\"+orderData?.total) : \\\"$ 0\\\"}}</span>\\n                </li>\\n                <li>\\n                  <strong>Amount Received</strong>\\n                  <span>{{orderData?.amount_received ? (\\\"$ \\\"+orderData?.amount_received) : \\\"$\\n                    0\\\"}}</span>\\n                </li>\\n                <li>\\n                  <strong>Amount Due</strong>\\n                  <span>{{orderData?.amount_due ? (\\\"$ \\\"+orderData?.amount_due) : \\\"$ 0\\\"}}</span>\\n                </li>\\n              </ul>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <form class=\\\"card\\\" [formGroup]=\\\"addForm\\\" (ngSubmit)=\\\"submitAddForm()\\\" #formDir=\\\"ngForm\\\" novalidate>\\n        <!-- <div class=\\\"card-header\\\"> -->\\n        <!-- {{orderData?.order_status ? ((orderData?.order_status | titlecase) + \\\" Status Order\\\") : \\\"Completed\\n                    Status Order\\\"}} -->\\n        <!-- Order Details -->\\n        <!-- </div> -->\\n        <div class=\\\"card-header d-flex justify-content-between align-items-center\\\">Order Details:\\n          {{addForm.controls.po_number.value}} - {{storeName}}\\n          <div class=\\\"pull-right\\\">\\n            <!-- <button *ngIf=\\\"verified_product == 0\\\" (click)=\\\"printDeliveryReceipt()\\\" type=\\\"button\\\" class=\\\"btn btn-md btn-primary\\\">\\n              Print Delvery Receipt\\n            </button> -->\\n            <button *ngIf=\\\"verified_product == 0\\\" (click)=\\\"printPage()\\\" type=\\\"button\\\" class=\\\"btn btn-md btn-primary\\\">\\n              Print Invoice\\n            </button>\\n            <button (click)=\\\"printPoPage()\\\" type=\\\"button\\\" class=\\\"btn btn-md btn-primary\\\">\\n              Print PO\\n            </button>\\n            <!-- [routerLink]=\\\"['/sales-management/update-payment-received']\\\" -->\\n            <button type=\\\"button\\\" [routerLink]=\\\"['/update-payment-received']\\\"\\n              [queryParams]='{id: customerId,payment_date: orderData?.due_date}' class=\\\"btn btn-md btn-success\\\">\\n              Receive Payment\\n            </button>\\n            <a *ngIf=\\\"!fromProductOrder\\\" [routerLink]=\\\"['/sales-management']\\\"\\n              [queryParams]='{vs: selectedVerificationStatus, os: selectedOrderStatus, sn: selectedStoreName, ps: selectedPaymentStatus, fdd: selectedFromDueDate, tdd: selectedToDueDate, fd: selectedFromDate, td: selectedToDate, limit: this.tableLimit, firstTime: true, search: salesSearchValue}'\\n              class=\\\"btn btn-md btn-secondary\\\" type=\\\"button\\\">Back</a>\\n            <a *ngIf=\\\"fromProductOrder\\\" (click)=\\\"goPreviousUrl();\\\" class=\\\"btn btn-md btn-secondary\\\"\\n              type=\\\"button\\\">Back</a>\\n          </div>\\n        </div>\\n        <div class=\\\"card-body px-4 py-0\\\">\\n          <div class=\\\"customer-content sales-content\\\">\\n            <div class=\\\"d-flex flex-wrap justify-content-between align-items-start mb-0\\\">\\n              <div class=\\\"form-group w-100 text-right\\\">\\n                <!-- <button [printStyle]=\\\"{h1 : {'color': 'red'}, h2 : {'border': 'solid 1px'}}\\\" printSectionId=\\\"print-section\\\" ngxPrint type=\\\"button\\\" class=\\\"btn btn-md btn-primary\\\">Print Invoice</button> -->\\n                <!-- <button [routerLink]=\\\"['/sales-management/status-order']\\\"\\n                                    [queryParams]='{id: orderId,print: 1}' type=\\\"button\\\"\\n                                    class=\\\"btn btn-md btn-primary\\\">Print Invoice</button> -->\\n                <!-- <button *ngIf=\\\"verified_product == 0\\\" (click)=\\\"printPage()\\\" type=\\\"button\\\"\\n                                    class=\\\"btn btn-md btn-primary\\\">\\n                                    Print Invoice\\n                                </button>\\n                                <button (click)=\\\"printPoPage()\\\" type=\\\"button\\\" class=\\\"btn btn-md btn-primary\\\">\\n                                    Print PO\\n                                </button> -->\\n                <!-- [routerLink]=\\\"['/sales-management/update-payment-received']\\\" -->\\n                <!-- <button type=\\\"button\\\" [routerLink]=\\\"['/update-payment-received']\\\"\\n                                    [queryParams]='{id: customerId,payment_date: orderData?.due_date}'\\n                                    class=\\\"btn btn-md btn-success\\\">\\n                                    Receive Payment\\n                                </button> -->\\n\\n              </div>\\n              <!-- <div class=\\\"form-group w-100 text-right\\\">\\n                                <button type=\\\"button\\\" [routerLink]=\\\"['/sales-management/update-payment-received']\\\"\\n                                    [queryParams]='{id: customerId,payment_date: orderData?.due_date}'\\n                                    class=\\\"btn btn-md btn-success\\\">Receive Payment</button>\\n                            </div> -->\\n            </div>\\n            <ul class=\\\"d-flex flex-wrap\\\">\\n              <li>\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"name\\\" class=\\\"w-100\\\">Invoice No. :</label>\\n                  <input formControlName=\\\"invoice_no\\\" class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Enter Invoice No\\\"\\n                    readonly>\\n                  <div style=\\\"font-size: 15px;\\\" class=\\\"error\\\"\\n                    *ngIf=\\\"(submitted && addForm.controls.invoice_no.invalid) || addForm.controls.invoice_no.touched\\\">\\n                    <div *ngIf=\\\"addForm.hasError('required','invoice_no')\\\" class=\\\"err-msg\\\">Invoice\\n                      number is required.\\n                    </div>\\n                  </div>\\n                </div>\\n              </li>\\n              <li>\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"name\\\" class=\\\"w-100\\\">Payment Status :</label>\\n                  <input formControlName=\\\"payment_status\\\" class=\\\"form-control\\\" type=\\\"text\\\"\\n                    placeholder=\\\"Enter Payment Status\\\" readonly>\\n                  <div style=\\\"font-size: 15px;\\\" class=\\\"error\\\"\\n                    *ngIf=\\\"(submitted && addForm.controls.payment_status.invalid) || addForm.controls.payment_status.touched\\\">\\n                    <div *ngIf=\\\"addForm.hasError('required','payment_status')\\\" class=\\\"err-msg\\\">\\n                      Payment Status is required.\\n                    </div>\\n                  </div>\\n                </div>\\n              </li>\\n              <li>\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"name\\\" class=\\\"w-100\\\">Customer Name :</label>\\n                  <input formControlName=\\\"customer_name\\\" class=\\\"form-control\\\" type=\\\"text\\\"\\n                    placeholder=\\\"Enter Customer Name\\\" readonly>\\n                  <div style=\\\"font-size: 15px;\\\" class=\\\"error\\\"\\n                    *ngIf=\\\"(submitted && addForm.controls.customer_name.invalid) || addForm.controls.customer_name.touched\\\">\\n                    <div *ngIf=\\\"addForm.hasError('required','customer_name')\\\" class=\\\"err-msg\\\">\\n                      Customer name is required.\\n                    </div>\\n                  </div>\\n                </div>\\n              </li>\\n              <li>\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"name\\\" class=\\\"w-100\\\">Billing Address :</label>\\n                  <input formControlName=\\\"billing_address\\\" class=\\\"form-control\\\" type=\\\"text\\\"\\n                    placeholder=\\\"Enter Billing Address\\\" readonly>\\n                  <div style=\\\"font-size: 15px;\\\" class=\\\"error\\\"\\n                    *ngIf=\\\"(submitted && addForm.controls.billing_address.invalid) || addForm.controls.billing_address.touched\\\">\\n                    <div *ngIf=\\\"addForm.hasError('required','billing_address')\\\" class=\\\"err-msg\\\">\\n                      Billing address is required.\\n                    </div>\\n                  </div>\\n                </div>\\n              </li>\\n              <li>\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"name\\\" class=\\\"w-100\\\">Shipping Address :</label>\\n                  <input formControlName=\\\"shiping_address\\\" class=\\\"form-control\\\" type=\\\"text\\\"\\n                    placeholder=\\\"Enter Shipping Address\\\" readonly>\\n                  <div style=\\\"font-size: 15px;\\\" class=\\\"error\\\"\\n                    *ngIf=\\\"(submitted && addForm.controls.shiping_address.invalid) || addForm.controls.shiping_address.touched\\\">\\n                    <div *ngIf=\\\"addForm.hasError('required','shiping_address')\\\" class=\\\"err-msg\\\">\\n                      Shipping address is required.\\n                    </div>\\n                  </div>\\n                </div>\\n              </li>\\n              <li>\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"name\\\" class=\\\"w-100\\\">Order Date :</label>\\n                  <input formControlName=\\\"order_date\\\" class=\\\"form-control\\\" readonly value=\\\"09/09/20\\\" type=\\\"text\\\"\\n                    placeholder=\\\"Enter Order Date\\\" [bsConfig]=\\\"{dateInputFormat: 'MM-DD-YYYY'}\\\" bsDatepicker>\\n                  <div style=\\\"font-size: 15px;\\\" class=\\\"error\\\"\\n                    *ngIf=\\\"(submitted && addForm.controls.order_date.invalid) || addForm.controls.order_date.touched\\\">\\n                    <div *ngIf=\\\"addForm.hasError('required','order_date')\\\" class=\\\"err-msg\\\">Order\\n                      date is required.\\n                    </div>\\n                  </div>\\n                </div>\\n              </li>\\n              <li>\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"name\\\" class=\\\"w-100\\\">Order Status :</label>\\n                  <input formControlName=\\\"order_status\\\" class=\\\"form-control\\\" readonly value=\\\"open\\\" type=\\\"text\\\"\\n                    placeholder=\\\"Enter Order Status\\\">\\n                  <div style=\\\"font-size: 15px;\\\" class=\\\"error\\\"\\n                    *ngIf=\\\"(submitted && addForm.controls.order_status.invalid) || addForm.controls.order_status.touched\\\">\\n                    <div *ngIf=\\\"addForm.hasError('required','order_status')\\\" class=\\\"err-msg\\\">Order\\n                      status is required.\\n                    </div>\\n                  </div>\\n                </div>\\n              </li>\\n              <li>\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"name\\\" class=\\\"w-100\\\">Payment Due Date :</label>\\n                  <input formControlName=\\\"payment_due_date\\\" type=\\\"text\\\" placeholder=\\\"Payment Due Date\\\"\\n                    class=\\\"form-control\\\" [bsConfig]=\\\"{dateInputFormat: 'MM-DD-YYYY'}\\\" bsDatepicker readonly>\\n                  <div style=\\\"font-size: 15px;\\\" class=\\\"error\\\"\\n                    *ngIf=\\\"(submitted && addForm.controls.payment_due_date.invalid) || addForm.controls.payment_due_date.touched\\\">\\n                    <div *ngIf=\\\"addForm.hasError('required','payment_due_date')\\\" class=\\\"err-msg\\\">\\n                      Payment due date is required.\\n                    </div>\\n                  </div>\\n                </div>\\n              </li>\\n              <li>\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"name\\\" class=\\\"w-100\\\">Delivery Date :</label>\\n                  <input formControlName=\\\"payment_delivery_date\\\" type=\\\"text\\\" placeholder=\\\"Delivery Date\\\"\\n                    class=\\\"form-control\\\" [bsConfig]=\\\"{dateInputFormat: 'MM-DD-YYYY'}\\\" bsDatepicker>\\n                  <div style=\\\"font-size: 15px;\\\" class=\\\"error\\\"\\n                    *ngIf=\\\"(submitted && addForm.controls.payment_delivery_date.invalid) || addForm.controls.payment_delivery_date.touched\\\">\\n                    <div *ngIf=\\\"addForm.hasError('required','payment_delivery_date')\\\" class=\\\"err-msg\\\">\\n                      Delivery date is required.\\n                    </div>\\n                  </div>\\n                </div>\\n              </li>\\n              <!-- <li>\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"name\\\" class=\\\"w-100\\\">PO No. :</label>\\n                                    <input formControlName=\\\"po_number\\\" class=\\\"form-control\\\" type=\\\"text\\\"\\n                                        placeholder=\\\"Enter PO No.\\\" readonly>\\n                                    <div style=\\\"font-size: 15px;\\\" class=\\\"error\\\"\\n                                        *ngIf=\\\"(submitted && addForm.controls.po_number.invalid) || addForm.controls.po_number.touched\\\">\\n                                        <div *ngIf=\\\"addForm.hasError('required','po_number')\\\" class=\\\"err-msg\\\">PO\\n                                            number is required.\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </li> -->\\n            </ul>\\n          </div>\\n          <!-- <div *ngIf=\\\"orderData?.order_status == 'OPEN'\\\" -->\\n          <div class=\\\"d-flex flex-wrap justify-content-end align-items-start mb-0\\\">\\n            <div class=\\\"form-group mr-2\\\" *ngIf=\\\"addForm.controls.invoice_no.value && orderData?.amount_due\\\">\\n              <button class=\\\"btn btn-md btn-primary\\\" type=\\\"button\\\"\\n                (click)=\\\"applyCreditModal.show(); dtTrigger1.next();\\\">\\n                <i class=\\\"fa fa-plus mr-2\\\"></i>\\n                Apply Credit\\n              </button>\\n            </div>\\n            <div class=\\\"form-group\\\" *ngIf=\\\"addForm.controls.payment_status.value != 'FULL'\\\">\\n              <button class=\\\"btn btn-md btn-primary\\\" type=\\\"button\\\"\\n                (click)=\\\"resetaddProductForm();getVendorData(); addmodal.show();\\\">\\n                <i class=\\\"fa fa-plus mr-2\\\"></i>\\n                Add New Product\\n              </button>\\n            </div>\\n            <div class=\\\"form-group dropdown\\\" style=\\\"float: right; margin-left: 10px;\\\">\\n              <button (click)=\\\"commonService.toggleDropDown()\\\" class=\\\"btn btn-md btn-primary dropbtn\\\" type=\\\"button\\\"><i\\n                  class=\\\"fa fa-file-export mr-2\\n                            \\\"></i>Export</button>\\n              <div id=\\\"myDropdown\\\" class=\\\"dropdown-content\\\">\\n                <a href=\\\"javascript:void(0)\\\" (click)=\\\"exportTable('xlsx')\\\">Export to XLSX</a>\\n                <!-- <a href=\\\"javascript:void(0)\\\" (click)=\\\"commonService.exportPDF(true, 11, 'orderList');rerender();\\\">Export to PDF</a> -->\\n                <!-- <a href=\\\"javascript:void(0)\\\" (click)=\\\"exportTable('pdf')\\\">Export to PDF</a> -->\\n              </div>\\n            </div>\\n          </div>\\n          <perfect-scrollbar>\\n            <div class=\\\"responsive-table rounded mb-4\\\">\\n              <table datatable [dtOptions]=\\\"dtOptions[0]\\\" [dtTrigger]=\\\"dtTrigger0\\\"\\n                class=\\\"data row-border hover table order-table border\\\">\\n                <thead>\\n                  <tr>\\n                    <!-- <th>Id</th> -->\\n                    <th>Product Name</th>\\n                    <th>Item <br> Number</th>\\n                    <th>Category Name</th>\\n                    <th>Quantity</th>\\n                    <th>Price</th>\\n                    <th>Discount</th>\\n                    <th>Net Price</th>\\n                    <!-- <th>Sales Rate</th> -->\\n                    <th>Order <br> Amount</th>\\n                    <!-- <th>Final Order <br> Amount </th> -->\\n                    <th>Action</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr *ngFor=\\\"let product of productList;let i = index;\\\">\\n                    <td style=\\\"white-space: nowrap;\\\">\\n                      {{product.order_product_name ? product.order_product_name : product.product_name || \\\"-\\\"}}\\n                    </td>\\n                    <td>{{product.item_no || \\\"-\\\"}}</td>\\n                    <td>{{product.category_name || \\\"-\\\"}}</td>\\n                    <td>{{product.quantity ? (product.quantity | number : '1.2-2') : \\\"0.00\\\"}}</td>\\n                    <td>{{product.order_price ? (\\\"$\\\"+(product.order_price | number : '1.2-2')) :\\n                      \\\"-\\\"}}\\n                    </td>\\n                    <td>{{product.discount ? (\\\"$\\\"+(product.discount | number : '1.2-2')) : \\\"$0.00\\\"}}\\n                    <td>{{product.order_net_price ? (\\\"$\\\"+(product.order_net_price | number :\\n                      '1.2-2')) : \\\"$0.00\\\"}}\\n                    </td>\\n                    <!-- <td>{{product.sales_rate ? (\\\"$\\\"+product.sales_rate) : \\\"-\\\"}}</td> -->\\n                    <td>{{product.final_order_amount ? (\\\"$\\\"+(product.final_order_amount | number :\\n                      '1.2-2')) :\\n                      \\\"$0.00\\\"}}</td>\\n                    <!-- <td>{{product.final_order_amount ? (\\\"$\\\"+(product.final_order_amount | number :\\n                                            '1.2-2')) : \\\"$0.00\\\"}}</td> -->\\n                    <td>\\n                      <div class=\\\"d-flex align-items-center justify-content-center\\\"\\n                        *ngIf=\\\"addForm.controls.payment_status.value != 'FULL'\\\">\\n                        <a class=\\\"text-dark mx-2\\\" href=\\\"javascript:void(0)\\\"\\n                          (click)=\\\"openEditModel(product,product.order_quantity_id);\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\n                        <!-- <a *ngIf=\\\"!isDelivered\\\" class=\\\"text-dark mx-2\\\" href=\\\"javascript:void(0)\\\"\\n                                                    (click)=\\\"openEditModel(product,product.order_quantity_id);\\\"><i\\n                                                        class=\\\"fa fa-pencil\\\"></i></a> -->\\n                        <a class=\\\"text-danger mx-2\\\" href=\\\"javascript:void(0)\\\"\\n                          (click)=\\\"deleteModal.show();changeId(product?.order_quantity_id);\\\"><i\\n                            class=\\\"far fa-trash-alt\\\"></i></a>\\n                      </div>\\n                    </td>\\n                  </tr>\\n                  <tr *ngIf=\\\"productList?.length == 0\\\">\\n                    <td colspan=\\\"8\\\" class=\\\"no-data-available\\\">No Data Found !</td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n            </div>\\n          </perfect-scrollbar>\\n          <div class=\\\"calcuted-data\\\">\\n            <ul class=\\\"justify-content-end\\\">\\n              <li>\\n                <strong>Sub Total</strong>\\n                <span>\\n                  {{orderData?.sub_total ? (\\\"$ \\\"+(orderData?.sub_total | number : '1.2-2')) : \\\"$\\n                  0.00\\\"}}\\n                </span>\\n              </li>\\n              <li *ngIf=\\\"orderData?.applied_credit != 0 && orderData?.applied_credit != null\\\">\\n                <strong>Credit Applied</strong>\\n                <span>\\n                  {{orderData?.applied_credit ? (\\\"$ \\\"+(orderData?.applied_credit | number :\\n                  '1.2-2')) : \\\"$ 0.00\\\"}}\\n                </span>\\n              </li>\\n              <li *ngIf=\\\"orderData?.applied_credit != 0 && orderData?.applied_credit != null\\\">\\n                <strong>Credit Memo No.</strong>\\n                <span>\\n                  <span *ngFor=\\\"let no of orderData?.creditmemo_list; let isLast=last\\\">\\n                    {{no}}{{isLast ? '' : ', '}}\\n                  </span>\\n                </span>\\n              </li>\\n              <li>\\n                <strong>Total</strong>\\n                <span>\\n                  {{orderData?.total ? (\\\"$ \\\"+(orderData?.total | number : '1.2-2')) : \\\"$\\n                  0.00\\\"}}\\n                </span>\\n              </li>\\n              <li>\\n                <strong>Amount Received</strong>\\n                <span>{{orderData?.amount_received ? (\\\"$ \\\"+(orderData?.amount_received | number :\\n                  '1.2-2')) : \\\"$ 0.00\\\"}}</span>\\n              </li>\\n              <li>\\n                <strong>Amount Due</strong>\\n                <span>{{orderData?.amount_due ? (\\\"$ \\\"+(orderData?.amount_due | number : '1.2-2')) : \\\"$\\n                  0.00\\\"}}</span>\\n              </li>\\n            </ul>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-12 py-3 text-center\\\">\\n            <!-- <button class=\\\"btn btn-md btn-dark mr-3\\\" type=\\\"submit\\\"\\n                            *ngIf=\\\"orderData?.order_status == 'OPEN'\\\">Save</button> -->\\n            <!-- <button class=\\\"btn btn-md btn-dark mr-3\\\" type=\\\"submit\\\">Save</button>\\n                        <button class=\\\"btn btn-md btn-secondary\\\" type=\\\"button\\\" [routerLink]=\\\"['/sales-management']\\\"\\n                            [queryParams]='{vs: selectedVerificationStatus, os: selectedOrderStatus, sn: selectedStoreName, ps: selectedPaymentStatus, fdd: selectedFromDueDate, tdd: selectedToDueDate, fd: selectedFromDate, td: selectedToDate, limit: this.tableLimit, firstTime: true, search: salesSearchValue}'>Cancel</button> -->\\n            <a *ngIf=\\\"!fromProductOrder\\\" [routerLink]=\\\"['/sales-management']\\\"\\n              [queryParams]='{vs: selectedVerificationStatus, os: selectedOrderStatus, sn: selectedStoreName, ps: selectedPaymentStatus, fdd: selectedFromDueDate, tdd: selectedToDueDate, fd: selectedFromDate, td: selectedToDate, limit: this.tableLimit, firstTime: true, search: salesSearchValue}'\\n              class=\\\"btn btn-md btn-secondary\\\" type=\\\"button\\\">Back</a>\\n            <a *ngIf=\\\"fromProductOrder\\\" (click)=\\\"goPreviousUrl();\\\" class=\\\"btn btn-md btn-secondary\\\"\\n              type=\\\"button\\\">Back</a>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\\n<div bsModal #addmodal=\\\"bs-modal\\\" class=\\\"modal fade text-center\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"Delete\\\"\\n  aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-md modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-body py-4 text-center d-flex flex-column justify-content-center\\\">\\n        <h2 class=\\\"font-weight-bold mb-4 text-primary\\\">Add Product</h2>\\n        <form class=\\\"d-inline-block w-100 text-left\\\" [formGroup]=\\\"addProductForm\\\" (ngSubmit)=\\\"submitAddProductForm()\\\"\\n          #formDir=\\\"ngForm\\\" novalidate>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"name\\\" class=\\\"w-100\\\">Select Product Category:</label>\\n                <select (change)=\\\"changeVendor()\\\" [(ngModel)]=\\\"selectedCategory\\\" formControlName=\\\"product_category\\\"\\n                  class=\\\"form-control\\\">\\n                  <option value=\\\"\\\" disabled selected>Select Product Category</option>\\n                  <option *ngFor=\\\"let category of categoryData\\\" [value]=\\\"category.id\\\">\\n                    {{category.name}}</option>\\n                </select>\\n                <div class=\\\"error\\\"\\n                  *ngIf=\\\"(addProductSubmitted && addProductForm.controls.product_category.invalid) || addProductForm.controls.product_category.touched\\\">\\n                  <div *ngIf=\\\"addProductForm.hasError('required','product_category')\\\" class=\\\"err-msg\\\">\\n                    Product category is required.\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"name\\\" class=\\\"w-100\\\">Select Vendor:</label>\\n                <select (change)=\\\"changeVendor()\\\" [(ngModel)]=\\\"selectedVendor\\\" formControlName=\\\"vendor\\\"\\n                  class=\\\"form-control\\\">\\n                  <!-- <option value=\\\"\\\" disabled selected>Select Vendor</option> -->\\n                  <option *ngFor=\\\"let vendor of vendorData; let i=index\\\" [selected]=\\\"i==0\\\" [value]=\\\"vendor.id\\\">\\n                    {{vendor.name}}</option>\\n                </select>\\n                <div class=\\\"error\\\"\\n                  *ngIf=\\\"(addProductSubmitted && addProductForm.controls.vendor.invalid) || addProductForm.controls.vendor.touched\\\">\\n                  <div *ngIf=\\\"addProductForm.hasError('required','vendor')\\\" class=\\\"err-msg\\\">\\n                    Vendor is required.\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"name\\\" class=\\\"w-100\\\">Product Name:</label>\\n                <select (change)=\\\"changeProduct()\\\" [(ngModel)]=\\\"selectedProduct\\\" formControlName=\\\"product_name\\\"\\n                  class=\\\"form-control\\\">\\n                  <option value=\\\"\\\" disabled selected>Select Product</option>\\n                  <option *ngFor=\\\"let product of productDropdownData\\\" [value]=\\\"product.product_id\\\">\\n                    {{product.product_name}}</option>\\n                </select>\\n                <div class=\\\"error\\\"\\n                  *ngIf=\\\"(addProductSubmitted && addProductForm.controls.product_name.invalid) || addProductForm.controls.product_name.touched\\\">\\n                  <div *ngIf=\\\"addProductForm.hasError('required','product_name')\\\" class=\\\"err-msg\\\">\\n                    Product name is required.\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <!-- <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Packsize:</label>\\n                                <select (change)=\\\"selectPackSize(1);changeOrderAmount(2);\\\"\\n                                    [(ngModel)]=\\\"selectedPacksize\\\" formControlName=\\\"packsize_id\\\" class=\\\"form-control\\\">\\n                                    <option value=\\\"\\\" disabled selected>Select Packsize</option>\\n                                    <option *ngFor=\\\"let packSize of packSizeData\\\" [value]=\\\"packSize.id\\\">\\n                                        {{packSize.pack_size}}</option>\\n                                </select>\\n                                <div class=\\\"error\\\"\\n                                    *ngIf=\\\"(addProductSubmitted && addProductForm.controls.packsize_id.invalid) || addProductForm.controls.packsize_id.touched\\\">\\n                                    <div *ngIf=\\\"addProductForm.hasError('required','packsize_id')\\\" class=\\\"err-msg\\\">\\n                                        Packsize is required.\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div> -->\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"name\\\" class=\\\"w-100\\\">Quantity:</label>\\n                <!-- <select [(ngModel)]=\\\"selectedQuantity\\\" formControlName=\\\"quantity\\\" class=\\\"form-control\\\">\\n                                    <option value=\\\"\\\" disabled selected>Select Quantity</option>\\n                                    <option value=\\\"out_of_stock\\\">Out of Stock</option>\\n                                    <option value=\\\"low_stock\\\">Low Stock</option>\\n                                </select> -->\\n                <input (keyup)=\\\"selectPackSize(1);changeOrderAmount(1);\\\"\\n                  (change)=\\\"selectPackSize(1);changeOrderAmount(1);\\\" formControlName=\\\"quantity\\\" class=\\\"form-control\\\"\\n                  type=\\\"number\\\" placeholder=\\\"Enter Quantity\\\">\\n                <div class=\\\"error\\\"\\n                  *ngIf=\\\"(addProductSubmitted && addProductForm.controls.quantity.invalid) || addProductForm.controls.quantity.touched\\\">\\n                  <div *ngIf=\\\"addProductForm.hasError('required','quantity')\\\" class=\\\"err-msg\\\">Quantity\\n                    is required.\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <!-- <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Sales Rate:</label>\\n                                <input formControlName=\\\"sales_rate\\\" class=\\\"form-control\\\"   type=\\\"text\\\" placeholder=\\\"Enter Sales Rate\\\">\\n                                <div class=\\\"error\\\"\\n                                      *ngIf=\\\"(addProductSubmitted && addProductForm.controls.sales_rate.invalid) || addProductForm.controls.sales_rate.touched\\\">\\n                                      <div *ngIf=\\\"addProductForm.hasError('required','sales_rate')\\\" class=\\\"err-msg\\\">Sales rate is required.\\n                                      </div>\\n                                    </div>\\n                            </div>\\n                        </div> -->\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"name\\\" class=\\\"w-100\\\">Price:</label>\\n                <!-- (keyup)=\\\"changeOrderAmount(1);chnageValue(1);\\\" -->\\n                <input disabled [(ngModel)]=\\\"prise\\\" formControlName=\\\"price\\\" class=\\\"form-control\\\" type=\\\"number\\\"\\n                  placeholder=\\\"Enter Price\\\">\\n                <div class=\\\"error\\\"\\n                  *ngIf=\\\"(addProductSubmitted && addProductForm.controls.price.invalid) || addProductForm.controls.price.touched\\\">\\n                  <div *ngIf=\\\"addProductForm.hasError('required','price')\\\" class=\\\"err-msg\\\">\\n                    Price is required.\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"name\\\" class=\\\"w-100\\\">Discount:</label>\\n                <!-- (change)=\\\"changeDiscount()\\\"  -->\\n                <input (keyup)=\\\"changeOrderAmount(1);\\\" formControlName=\\\"discount\\\" class=\\\"form-control\\\" type=\\\"number\\\"\\n                  placeholder=\\\"Discount\\\">\\n                <div class=\\\"error\\\"\\n                  *ngIf=\\\"(addProductSubmitted && addProductForm.controls.discount.invalid) || addProductForm.controls.discount.touched\\\">\\n                  <div *ngIf=\\\"addProductForm.hasError('required','discount')\\\" class=\\\"err-msg\\\">Discount\\n                    is required.\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"name\\\" class=\\\"w-100\\\">Final Amount :</label>\\n                <input (keyup)=\\\"changeOrderAmount(1);\\\" [(ngModel)]=\\\"finalAmount\\\" formControlName=\\\"final_amount\\\"\\n                  class=\\\"form-control\\\" type=\\\"number\\\" placeholder=\\\"Enter Final Amount\\\">\\n                <div class=\\\"error\\\"\\n                  *ngIf=\\\"(addProductSubmitted && addProductForm.controls.final_amount.invalid) || addProductForm.controls.final_amount.touched\\\">\\n                  <div *ngIf=\\\"addProductForm.hasError('required','final_amount')\\\" class=\\\"err-msg\\\">\\n                    Final amount is required.\\n                  </div>\\n                </div>\\n                <div\\n                  *ngIf=\\\"!addProductForm.hasError('required','final_amount') && minThreeSoldLimitError == '0' && threeSoldLimit != '0'\\\"\\n                  class=\\\"err-msg\\\">\\n                  {{threeSoldLimit}}\\n                </div>\\n                <div\\n                  *ngIf=\\\"!addProductForm.hasError('required','final_amount') && threeSoldLimit == '0' && minThreeSoldLimitError != '0'\\\"\\n                  class=\\\"err-msg\\\">\\n                  {{minThreeSoldLimitError}}\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"modal-footer justify-content-start flex-wrap w-100 pb-0\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-dark mr-3\\\">ADD</button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\"\\n                (click)=\\\"addmodal.hide();resetaddProductForm();\\\">Cancel</button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div bsModal #editmodal=\\\"bs-modal\\\" class=\\\"modal fade text-center\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"Delete\\\"\\n  aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-md modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-body py-4 text-center d-flex flex-column justify-content-center\\\">\\n        <h2 class=\\\"font-weight-bold mb-4 text-primary\\\">Edit Product</h2>\\n        <form class=\\\"d-inline-block w-100 text-left\\\" [formGroup]=\\\"editProductForm\\\" (ngSubmit)=\\\"submitEditProductForm()\\\"\\n          #formDir=\\\"ngForm\\\" novalidate>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"name\\\" class=\\\"w-100\\\">Select Product Category:</label>\\n                <select [(ngModel)]=\\\"selectedCategory\\\" formControlName=\\\"product_category\\\" class=\\\"form-control\\\">\\n                  <option value=\\\"\\\" disabled selected>Select Product Category</option>\\n                  <option *ngFor=\\\"let category of categoryData\\\" [value]=\\\"category.id\\\">\\n                    {{category.name}}</option>\\n                </select>\\n                <div class=\\\"error\\\"\\n                  *ngIf=\\\"(editProductSubmitted && editProductForm.controls.product_category.invalid) || editProductForm.controls.product_category.touched\\\">\\n                  <div *ngIf=\\\"editProductForm.hasError('required','product_category')\\\" class=\\\"err-msg\\\">Product category\\n                    is required.\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"name\\\" class=\\\"w-100\\\">Select Vendor:</label>\\n                <select (change)=\\\"changeVendor()\\\" [(ngModel)]=\\\"selectedVendor\\\" formControlName=\\\"vendor\\\"\\n                  class=\\\"form-control\\\">\\n                  <option value=\\\"\\\" disabled selected>Select Vendor</option>\\n                  <option *ngFor=\\\"let vendor of vendorData\\\" [value]=\\\"vendor.id\\\">\\n                    {{vendor.name}}</option>\\n                </select>\\n                <div class=\\\"error\\\"\\n                  *ngIf=\\\"(editProductSubmitted && editProductForm.controls.vendor.invalid) || editProductForm.controls.vendor.touched\\\">\\n                  <div *ngIf=\\\"editProductForm.hasError('required','vendor')\\\" class=\\\"err-msg\\\">\\n                    Vendor is required.\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"name\\\" class=\\\"w-100\\\">Product Name:</label>\\n                <!-- <select (change)=\\\"changeProduct()\\\" [(ngModel)]=\\\"selectedProduct\\\"\\n                                    formControlName=\\\"product_name\\\" class=\\\"form-control\\\">\\n                                    <option value=\\\"\\\" disabled selected>Select Product</option>\\n                                    <option *ngFor=\\\"let product of productDropdownData\\\" [value]=\\\"product.product_id\\\">\\n                                        {{product.product_name}}</option>\\n                                </select> -->\\n                <input formControlName=\\\"product_name\\\" class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Enter Product Name\\\">\\n                <div class=\\\"error\\\"\\n                  *ngIf=\\\"(editProductSubmitted && editProductForm.controls.product_name.invalid) || editProductForm.controls.product_name.touched\\\">\\n                  <div *ngIf=\\\"editProductForm.hasError('required','product_name')\\\" class=\\\"err-msg\\\">\\n                    Product name is required.\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <!-- <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Packsize:</label>\\n                                <select (change)=\\\"selectPackSize(2);changeOrderAmount(2);\\\" [(ngModel)]=\\\"selectedPacksize\\\"\\n                                    formControlName=\\\"packsize_id\\\" class=\\\"form-control\\\">\\n                                    <option value=\\\"\\\" disabled selected>Select Packsize</option>\\n                                    <option *ngFor=\\\"let packSize of packSizeData\\\" [value]=\\\"packSize.id\\\">\\n                                        {{packSize.pack_size}}</option>\\n                                </select>\\n                                <div class=\\\"error\\\"\\n                                    *ngIf=\\\"(editProductSubmitted && editProductForm.controls.packsize_id.invalid) || editProductForm.controls.packsize_id.touched\\\">\\n                                    <div *ngIf=\\\"editProductForm.hasError('required','packsize_id')\\\" class=\\\"err-msg\\\">\\n                                        Packsize is required.\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div> -->\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"name\\\" class=\\\"w-100\\\">Quantity:</label>\\n                <!-- <select [(ngModel)]=\\\"selectedQuantity\\\" formControlName=\\\"quantity\\\" class=\\\"form-control\\\">\\n                                    <option value=\\\"\\\" disabled selected>Select Quantity</option>\\n                                    <option value=\\\"out_of_stock\\\">Out of Stock</option>\\n                                    <option value=\\\"low_stock\\\">Low Stock</option>\\n                                </select> -->\\n                <input (keyup)=\\\"changeOrderAmount(2);\\\" (change)=\\\"changeOrderAmount(2);\\\" formControlName=\\\"quantity\\\"\\n                  class=\\\"form-control\\\" type=\\\"number\\\" placeholder=\\\"Enter Quantity\\\">\\n                <div class=\\\"error\\\"\\n                  *ngIf=\\\"(editProductSubmitted && editProductForm.controls.quantity.invalid) || editProductForm.controls.quantity.touched\\\">\\n                  <div *ngIf=\\\"editProductForm.hasError('required','quantity')\\\" class=\\\"err-msg\\\">\\n                    Quantity is required.\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"name\\\" class=\\\"w-100\\\">Price:</label>\\n                <!-- (keyup)=\\\"changeOrderAmount(2);chnageValue(2)\\\" -->\\n                <input [(ngModel)]=\\\"orderAmount\\\" (keyup)=\\\"changeOrderAmount(2)\\\" formControlName=\\\"order_amount\\\"\\n                  class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Enter Price\\\">\\n                <div class=\\\"error\\\"\\n                  *ngIf=\\\"(editProductSubmitted && editProductForm.controls.order_amount.invalid) || editProductForm.controls.order_amount.touched\\\">\\n                  <div *ngIf=\\\"editProductForm.hasError('required','order_amount')\\\" class=\\\"err-msg\\\">\\n                    Price is required.\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"name\\\" class=\\\"w-100\\\">Discount:</label>\\n                <input (keyup)=\\\"changeOrderAmount(2)\\\" formControlName=\\\"discount\\\" class=\\\"form-control\\\" type=\\\"number\\\"\\n                  placeholder=\\\"Discount\\\"\\n                  oninput=\\\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\\\..*)\\\\./g, '$1');\\\">\\n                <div class=\\\"error\\\"\\n                  *ngIf=\\\"(editProductSubmitted && editProductForm.controls.discount.invalid) || editProductForm.controls.discount.touched\\\">\\n                  <div *ngIf=\\\"editProductForm.hasError('required','discount')\\\" class=\\\"err-msg\\\">\\n                    Discount is required.\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"name\\\" class=\\\"w-100\\\">Final Amount :</label>\\n                <input disabled [(ngModel)]=\\\"finalAmount\\\" formControlName=\\\"final_amount\\\" class=\\\"form-control\\\"\\n                  type=\\\"text\\\" placeholder=\\\"Final Amount\\\">\\n                <div class=\\\"error\\\"\\n                  *ngIf=\\\"(editProductSubmitted && editProductForm.controls.final_amount.invalid) || editProductForm.controls.final_amount.touched\\\">\\n                  <div *ngIf=\\\"editProductForm.hasError('required','final_amount')\\\" class=\\\"err-msg\\\">\\n                    Final amount is required.\\n                  </div>\\n                </div>\\n                <div\\n                  *ngIf=\\\"!editProductForm.hasError('required','final_amount') && minThreeSoldLimitError == '0' && threeSoldLimit != '0'\\\"\\n                  class=\\\"err-msg\\\">\\n                  {{threeSoldLimit}}\\n                </div>\\n                <div\\n                  *ngIf=\\\"!editProductForm.hasError('required','final_amount') && threeSoldLimit == '0' && minThreeSoldLimitError != '0'\\\"\\n                  class=\\\"err-msg\\\">\\n                  {{minThreeSoldLimitError}}\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"modal-footer justify-content-start flex-wrap w-100 pb-0\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-dark mr-3\\\">Edit</button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\"\\n                (click)=\\\"editmodal.hide();editProductForm.reset();\\\">Cancel</button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n<div bsModal #deleteModal=\\\"bs-modal\\\" class=\\\"modal fade text-center\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"Delete\\\"\\n  aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-sm modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-body py-4 text-center d-flex flex-column justify-content-center\\\">\\n        <h2 class=\\\"font-weight-bold mb-4 text-primary\\\">Delete</h2>\\n        <p class=\\\"mb-0\\\">Are You Sure You Want To Delete ?</p>\\n      </div>\\n      <div class=\\\"modal-footer justify-content-center\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"deleteModal.hide()\\\">Cancel</button>\\n        <button (click)=\\\"deleteProduct()\\\" type=\\\"button\\\" class=\\\"btn btn-danger\\\">Delete</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n<div bsModal #applyCreditModal=\\\"bs-modal\\\" class=\\\"modal fade text-center\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\n  aria-labelledby=\\\"Delete\\\" aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',  keyboard: false}\\\">\\n  <div class=\\\"modal-dialog modal-xl modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-body py-4 text-center d-flex flex-column justify-content-center\\\">\\n        <h2 class=\\\"font-weight-bold mb-4 text-primary\\\">Credit</h2>\\n        <perfect-scrollbar>\\n          <div class=\\\"responsive-table rounded mb-4\\\">\\n            <table style=\\\"width: 100%;\\\" datatable [dtOptions]=\\\"dtOptions[1]\\\" [dtTrigger]=\\\"dtTrigger1\\\"\\n              class=\\\"data row-border hover table order-table border\\\" id=\\\"excel-table\\\">\\n              <thead>\\n                <tr>\\n                  <th>Select</th>\\n                  <th>Credit Memo No#</th>\\n                  <th>Credit Memo Date</th>\\n                  <th>Invoice No#</th>\\n                  <th>Available Credit</th>\\n                  <!-- <th>Credit Applied Invoice No#</th> -->\\n                  <th>Store Name</th>\\n                  <th>Amount to Apply</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let creditMemoDetails of creditMemoList;let i = index;\\\">\\n                  <td>\\n                    <div class=\\\"custom-control custom-checkbox\\\">\\n                      <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\"\\n                        (click)=\\\"creditMemoDetails.checked = !creditMemoDetails.checked; creditMemoDetails.checked ? (creditMemoDetails.amountToApply = creditMemoDetails. updated_credit_amount) : (creditMemoDetails.amountToApply = null);\\\"\\n                        [id]=\\\"'checkbox' + creditMemoDetails.id\\\" [checked]=\\\"creditMemoDetails.checked\\\">\\n                      <label class=\\\"custom-control-label\\\" [for]=\\\"'checkbox' + creditMemoDetails.id\\\"></label>\\n                    </div>\\n                  </td>\\n                  <td>{{creditMemoDetails.cm_no || \\\"-\\\"}}</td>\\n                  <td style=\\\"width: 10px;\\\">\\n                    {{creditMemoDetails.created_at ? (creditMemoDetails.created_at | date:\\n                    'MM-dd-yyyy') : \\\"-\\\"}}\\n                  </td>\\n                  <td style=\\\"text-align: center;\\\">\\n                    {{creditMemoDetails.invoice_no || \\\"-\\\"}}\\n                  </td>\\n                  <td>\\n                    {{creditMemoDetails.updated_credit_amount ? \\\"$\\\" + (creditMemoDetails.\\n                    updated_credit_amount |\\n                    number:\\\"1.2-2\\\") :\\n                    \\\"$0.00\\\"}}\\n                  </td>\\n                  <!-- <td>{{creditMemoDetails.credit_applied_invoice_no || \\\"-\\\"}}</td> -->\\n                  <td style=\\\"white-space: nowrap;\\\">\\n                    {{creditMemoDetails.store_name || \\\"-\\\"}}\\n                  </td>\\n                  <td>\\n                    <input style=\\\"width: 90px;\\\" class=\\\"form-control quantity\\\" type=\\\"number\\\" #amountToApply\\n                      [value]=\\\"creditMemoDetails.amountToApply\\\"\\n                      (change)=\\\"changePaymentValue(amountToApply.value, creditMemoDetails.id)\\\"\\n                      (keyup)=\\\"amountToApply.value > creditMemoDetails. updated_credit_amount ? amountToApply.value = creditMemoDetails. updated_credit_amount : amountToApply.value; amountToApply.value != '' ? creditMemoDetails.checked = true : creditMemoDetails.checked = false\\\">\\n                  </td>\\n                </tr>\\n                <tr *ngIf=\\\"creditMemoList?.length == 0\\\">\\n                  <td colspan=\\\"8\\\" class=\\\"no-data-available\\\">No Data Found !</td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n        </perfect-scrollbar>\\n        <div class=\\\"modal-footer justify-content-center\\\">\\n          <button (click)=\\\"submitAmountToApply()\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">Apply</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\"\\n            (click)=\\\"applyCreditModal.hide(); rerenderCreditMemo();\\\">Cancel</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"card\\\">\\n        <!-- <div class=\\\"card-header\\\">Sales Management</div> -->\\n        <div class=\\\"card-header d-flex justify-content-between align-items-center\\\">Sales Management\\n          <div class=\\\"d-flex flex-wrap justify-content-end align-items-center\\\">\\n            <div class=\\\"dropdown pull-right\\\">\\n              <button (click)=\\\"commonService.toggleDropDown()\\\" class=\\\"btn btn-md btn-primary dropbtn\\\" type=\\\"button\\\">\\n                <i class=\\\"fa fa-file-export mr-2\\\"></i>\\n                Export\\n              </button>\\n              <div id=\\\"myDropdown\\\" class=\\\"dropdown-content\\\">\\n                <a href=\\\"javascript:void(0)\\\" (click)=\\\"exportTable('xlsx')\\\"\\n                  style=\\\"font-size: small; text-decoration: none;\\\">\\n                  Export to XLSX\\n                </a>\\n                <!-- <a href=\\\"javascript:void(0)\\\"\\n                                (click)=\\\"commonService.exportPDF(false, 0, 'avarageProductList')\\\">Export to PDF</a> -->\\n                <!-- <a href=\\\"javascript:void(0)\\\" (click)=\\\"exportTable('pdf')\\\">Export to PDF</a> -->\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"card-body p-4\\\">\\n          <ul class=\\\"row custom-box\\\">\\n            <li>\\n              <div class=\\\"card text-white bg-orange\\\" style=\\\"min-height: 161px;\\\">\\n                <div class=\\\"card-body pb-0\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn btn-transparent p-0 float-right\\\">\\n                  </button>\\n                  <div class=\\\"text-value\\\">Amount to be received</div>\\n                  <div *ngIf=\\\"!selectedFromDate && !selectedToDate && !selectedFromDueDate && !selectedToDueDate\\\">\\n                    till {{dashboardCommonData?.date}}</div>\\n                  <h3 style=\\\"margin-top: 20px;\\\">{{dashboardData?.remaining_amount ? (\\\"$\\n                    \\\"+(dashboardData?.remaining_amount | number : '1.2-2')) : \\\"$0.00\\\"}}</h3>\\n                </div>\\n              </div>\\n            </li>\\n            <li>\\n              <div class=\\\"card text-white bg-orange\\\" style=\\\"min-height: 161px;\\\">\\n                <div class=\\\"card-body pb-0\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn btn-transparent p-0 float-right\\\">\\n                  </button>\\n                  <div class=\\\"text-value\\\">Amount Received</div>\\n                  <div *ngIf=\\\"!selectedFromDate && !selectedToDate && !selectedFromDueDate && !selectedToDueDate\\\">\\n                    till {{dashboardCommonData?.date}}</div>\\n                  <h3 style=\\\"margin-top: 20px;\\\">{{dashboardData?.amount_recieved ? (\\\"$\\n                    \\\"+(dashboardData?.amount_recieved | number : '1.2-2')) : \\\"$0.00\\\"}}</h3>\\n                </div>\\n              </div>\\n            </li>\\n            <li>\\n              <div class=\\\"card text-white bg-orange\\\" style=\\\"min-height: 161px;\\\">\\n                <div class=\\\"card-body pb-0\\\">\\n                  <div class=\\\"btn-group float-right\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-transparent p-0\\\">\\n                    </button>\\n                  </div>\\n                  <div class=\\\"text-value\\\">Total Amount of Orders </div>\\n                  <div *ngIf=\\\"!selectedFromDate && !selectedToDate && !selectedFromDueDate && !selectedToDueDate\\\">\\n                    till {{dashboardCommonData?.date}}</div>\\n                  <h3 style=\\\"margin-top: 20px;\\\">{{dashboardData?.total_amount ? (\\\"$\\n                    \\\"+(dashboardData?.total_amount | number : '1.2-2')) : \\\"$0.00\\\"}}</h3>\\n                </div>\\n              </div>\\n            </li>\\n            <li>\\n              <div class=\\\"card text-white bg-orange\\\" style=\\\"min-height: 161px;\\\">\\n                <div class=\\\"card-body pb-0\\\">\\n                  <div class=\\\"btn-group float-right\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-transparent p-0\\\">\\n                    </button>\\n                  </div>\\n                  <div class=\\\"text-value\\\" style=\\\"margin-bottom: 22px;\\\">Open Orders </div>\\n                  <h3 style=\\\"margin-top: 62px;\\\">{{dashboardData?.open_order}}</h3>\\n                </div>\\n              </div>\\n            </li>\\n            <li>\\n              <div class=\\\"card text-white bg-orange\\\" style=\\\"min-height: 161px;\\\">\\n                <div class=\\\"card-body pb-0\\\">\\n                  <div class=\\\"btn-group float-right\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-transparent p-0\\\">\\n                    </button>\\n                  </div>\\n                  <div class=\\\"text-value\\\" style=\\\"margin-bottom: 22px;\\\">Completed Orders</div>\\n                  <h3 style=\\\"margin-top: 37px;\\\">{{dashboardData?.completed_orders}}</h3>\\n                </div>\\n              </div>\\n            </li>\\n          </ul>\\n          <div class=\\\"responsive-table rounded mb-4\\\">\\n            <form class=\\\"row justify-content-start align-items-center mb-3\\\">\\n              <div class=\\\"col-sm-12 mb-2\\\">\\n                <h4 class=\\\"d-block\\\">Filter BY :</h4>\\n                <div class=\\\"btn-group float-right\\\">\\n                  <button (click)=\\\"rerender()\\\" class=\\\"btn btn-md btn-dark\\\" style=\\\"margin-top: -40px;\\\"\\n                    type=\\\"button\\\">Filter</button>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-3 col-sm-12\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>From Date</label>\\n                  <input [(ngModel)]=\\\"selectedFromDate\\\" [ngModelOptions]=\\\"{standalone: true}\\\" type=\\\"text\\\"\\n                    placeholder=\\\"From Date\\\" class=\\\"form-control\\\" [bsConfig]=\\\"{dateInputFormat: 'MM-DD-YYYY'}\\\" bsDatepicker>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-3 col-sm-12\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>To Date</label>\\n                  <input [(ngModel)]=\\\"selectedToDate\\\" [ngModelOptions]=\\\"{standalone: true}\\\" type=\\\"text\\\"\\n                    placeholder=\\\"To Date\\\" class=\\\"form-control\\\" [bsConfig]=\\\"{dateInputFormat: 'MM-DD-YYYY'}\\\" bsDatepicker>\\n                </div>\\n              </div>\\n              <!-- <div class=\\\"col-md-3 col-sm-12\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label>Payment Method</label>\\n                                    <select [(ngModel)]=\\\"selectedMode\\\" [ngModelOptions]=\\\"{standalone: true}\\\" class=\\\"form-control\\\">\\n                                        <option value=\\\"CASH\\\">Cash</option>\\n                                        <option value=\\\"CHEQUE\\\">Check</option>\\n                                        <option value=\\\"ONLINE\\\">Online</option>\\n                                    </select>\\n                                </div>\\n                            </div> -->\\n              <!-- <div class=\\\"col-md-3 col-sm-12\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label>Search by </label>\\n                                    <input class=\\\"form-control\\\" placeholder=\\\"Enter Check/Transaction or reference no#\\\"\\n                                        type=\\\"text\\\">\\n                                </div>\\n                            </div> -->\\n              <div class=\\\"col-md-3 col-sm-12\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>From Due Date </label>\\n                  <input [(ngModel)]=\\\"selectedFromDueDate\\\" [ngModelOptions]=\\\"{standalone: true}\\\" type=\\\"text\\\"\\n                    placeholder=\\\"From Due Date\\\" class=\\\"form-control\\\" [bsConfig]=\\\"{dateInputFormat: 'MM-DD-YYYY'}\\\" bsDatepicker>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-3 col-sm-12\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>To Due Date </label>\\n                  <input [(ngModel)]=\\\"selectedToDueDate\\\" [ngModelOptions]=\\\"{standalone: true}\\\" type=\\\"text\\\"\\n                    placeholder=\\\"To Due Date\\\" class=\\\"form-control\\\" [bsConfig]=\\\"{dateInputFormat: 'MM-DD-YYYY'}\\\" bsDatepicker>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-3 col-sm-12\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Payment Status</label>\\n                  <select [(ngModel)]=\\\"selectedPaymentStatus\\\" [ngModelOptions]=\\\"{standalone: true}\\\" class=\\\"form-control\\\"\\n                    name=\\\"Category-Name\\\">\\n                    <option value=\\\"\\\">All</option>\\n                    <option value=\\\"FULL\\\">Paid (Cleared)</option>\\n                    <option value=\\\"NOT_PAID\\\">Not Paid</option>\\n                    <option value=\\\"PARTIAL\\\">Partially Paid</option>\\n                  </select>\\n                </div>\\n              </div>\\n              <!-- <div class=\\\"col-md-3 col-sm-12\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label>Customer Name </label>\\n                                    <input [(ngModel)]=\\\"selectedCustomerName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Customer Name \\\" type=\\\"text\\\">\\n                                </div>\\n                            </div> -->\\n              <div class=\\\"col-md-3 col-sm-12\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Store Name </label>\\n                  <input [(ngModel)]=\\\"selectedStoreName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" class=\\\"form-control\\\"\\n                    placeholder=\\\"Enter Store Name \\\" type=\\\"text\\\">\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-3 col-sm-12\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Order Status </label>\\n                  <select [(ngModel)]=\\\"selectedOrderStatus\\\" [ngModelOptions]=\\\"{standalone: true}\\\" class=\\\"form-control\\\"\\n                    name=\\\"Category-Name\\\">\\n                    <option value=\\\"\\\">All</option>\\n                    <option value=\\\"OPEN\\\">Open</option>\\n                    <option value=\\\"IN_PROCESS\\\">In Process</option>\\n                    <option value=\\\"COMPLETED\\\">Completed</option>\\n                  </select>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-3 col-sm-12\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Verification Status</label>\\n                  <select [(ngModel)]=\\\"selectedVerificationStatus\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                    class=\\\"form-control\\\" name=\\\"Category-Name\\\">\\n                    <option value=\\\"\\\">All</option>\\n                    <option value=1>Verified</option>\\n                    <option value=0>Not Verified</option>\\n                  </select>\\n                </div>\\n              </div>\\n              <!-- <div class=\\\"col-sm-3\\\">\\n                                <button (click)=\\\"rerender()\\\" class=\\\"btn btn-md btn-dark mr-3\\\" style=\\\"margin-top: 12px;\\\"\\n                                    type=\\\"button\\\">Filter</button>\\n                            </div> -->\\n            </form>\\n            <!-- <div class=\\\"form-group dropdown\\\" style=\\\"float: right; margin-left: 10px;margin-top: -50px;\\\">\\n                            <button (click)=\\\"commonService.toggleDropDown()\\\" class=\\\"btn btn-md btn-primary dropbtn\\\"\\n                                type=\\\"button\\\"><i class=\\\"fa fa-file-export mr-2\\n                            \\\"></i>Export</button>\\n                            <div id=\\\"myDropdown\\\" class=\\\"dropdown-content\\\">\\n                                <a href=\\\"javascript:void(0)\\\" (click)=\\\"exportTable('xlsx')\\\">Export to XLSX</a> -->\\n            <!-- <a href=\\\"javascript:void(0)\\\" (click)=\\\"commonService.exportPDF(true, 11, 'orderList');rerender();\\\">Export to PDF</a> -->\\n            <!-- <a href=\\\"javascript:void(0)\\\" (click)=\\\"exportTable('pdf')\\\">Export to PDF</a> -->\\n            <!-- </div>\\n                        </div> -->\\n            <perfect-scrollbar>\\n              <table style=\\\"width: 100%;\\\" datatable [dtOptions]=\\\"dtOptions\\\" [dtTrigger]=\\\"dtTrigger\\\"\\n                class=\\\"data row-border hover table order-table border\\\" id=\\\"excel-table\\\">\\n                <thead>\\n                  <tr>\\n                    <th>Order<br>Date</th>\\n                    <th>Invoice<br>No</th>\\n                    <th>PO No</th>\\n                    <!-- <th>Customer Name</th> -->\\n                    <th>Store Name</th>\\n                    <th>Payment<br>Due Date</th>\\n                    <th>Order<br>Amount</th>\\n                    <th>Order<br>Status</th>\\n                    <!-- <th>Order <br> Verification</th> -->\\n                    <th>Order <br>Amount <br> Received</th>\\n                    <th>Open <br> Balance</th>\\n                    <th>Profit</th>\\n                    <th>Profit<br> Percentage</th>\\n                    <th>Payment <br> Status</th>\\n                    <th>Salesman</th>\\n                    <th id=\\\"last-header\\\">Action</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr *ngFor=\\\"let sales of salesList;let i = index;\\\">\\n                    <td style=\\\"width: 10px;\\\">\\n                      <a [routerLink]=\\\"['/sales-management/order-invoice']\\\"\\n                        [queryParams]='{id: sales?.id, customer_id: sales?.customer, verified: sales?.verfication_status, paymentStatus:sales?.payment_status, isDelivered: sales?.delivered_status, vs: selectedVerificationStatus, os: selectedOrderStatus, sn: selectedStoreName, ps: selectedPaymentStatus, fdd: selectedFromDueDate, tdd: selectedToDueDate, fd: selectedFromDate, td: selectedToDate, limit: tableLimit, search: searchValue}'\\n                        class=\\\"anchor-tag\\\">\\n                        {{sales.created_at ? (sales.created_at | date: 'MM-dd-yyyy') : \\\"-\\\"}}\\n                      </a>\\n                    </td>\\n                    <td style=\\\"text-align: center;\\\">\\n                      <a [routerLink]=\\\"['/sales-management/order-invoice']\\\"\\n                        [queryParams]='{id: sales?.id, customer_id: sales?.customer, verified: sales?.verfication_status, paymentStatus:sales?.payment_status, isDelivered: sales?.delivered_status, vs: selectedVerificationStatus, os: selectedOrderStatus, sn: selectedStoreName, ps: selectedPaymentStatus, fdd: selectedFromDueDate, tdd: selectedToDueDate, fd: selectedFromDate, td: selectedToDate, limit: tableLimit, search: searchValue}'\\n                        class=\\\"text-primary mx-2\\\">\\n                        {{sales.invoice_no || \\\"-\\\"}}\\n                      </a>\\n                    </td>\\n                    <td>\\n                      <a [routerLink]=\\\"['/sales-management/order-invoice']\\\"\\n                        [queryParams]='{id: sales?.id, customer_id: sales?.customer, verified: sales?.verfication_status, paymentStatus:sales?.payment_status, isDelivered: sales?.delivered_status, vs: selectedVerificationStatus, os: selectedOrderStatus, sn: selectedStoreName, ps: selectedPaymentStatus, fdd: selectedFromDueDate, tdd: selectedToDueDate, fd: selectedFromDate, td: selectedToDate, limit: tableLimit, search: searchValue}'\\n                        class=\\\"text-primary mx-2\\\">\\n                        {{sales.po_num || \\\"-\\\"}}\\n                      </a>\\n                    </td>\\n                    <td style=\\\"white-space: nowrap;\\\">\\n                      <a [routerLink]=\\\"['/sales-management/order-invoice']\\\"\\n                        [queryParams]='{id: sales?.id, customer_id: sales?.customer, verified: sales?.verfication_status, paymentStatus:sales?.payment_status, isDelivered: sales?.delivered_status, vs: selectedVerificationStatus, os: selectedOrderStatus, sn: selectedStoreName, ps: selectedPaymentStatus, fdd: selectedFromDueDate, tdd: selectedToDueDate, fd: selectedFromDate, td: selectedToDate, limit: tableLimit, search: searchValue}'\\n                        class=\\\"anchor-tag\\\">\\n                        {{sales.store_name || \\\"-\\\"}}\\n                      </a>\\n                    </td>\\n                    <td>{{sales.due_date ? (sales.due_date | date: 'MM-dd-yyyy') : \\\"-\\\"}}</td>\\n                    <td>{{sales.amount ? (\\\"$\\\"+(sales.amount | number : '1.2-2')) : \\\"$0.00\\\"}}</td>\\n                    <td>\\n                      <span *ngIf=\\\"sales.status == 'OPEN' || sales.status == 'IN_PROCESS'\\\">\\n                        {{sales.status}}\\n                      </span>\\n                      <span *ngIf=\\\"sales.status == 'COMPLETED' && !sales.delivered_status\\\">\\n                        {{sales.status}}<br>\\n                        <span class=\\\"text-success\\\" [ngClass]=\\\"{'text-danger': !sales.verfication_status}\\\">\\n                          {{sales.verfication_status ? \\\"Verified\\\" : \\\"Not Verified\\\"}}\\n                        </span>\\n                      </span>\\n                      <span *ngIf=\\\"sales.status == 'COMPLETED' && sales.delivered_status\\\">\\n                        {{sales.status}}<br>\\n                        <span class=\\\"text-success\\\" [ngClass]=\\\"{'text-danger': !sales.verfication_status}\\\">\\n                          {{sales.verfication_status ? \\\"Verified\\\" : \\\"Not Verified\\\"}}\\n                        </span><br>\\n                        <span class=\\\"text-primary\\\">\\n                          {{sales.delivered_status ? \\\"Delivered\\\" : \\\"Not Delivered\\\"}}\\n                        </span>\\n                      </span>\\n                    </td>\\n                    <td>{{sales.amount_recieved ? (\\\"$\\\"+(sales.amount_recieved | number : '1.2-2')) :\\n                      \\\"$0.00\\\"}}</td>\\n                    <td>{{sales.remaining_amount ? (\\\"$\\\"+(sales.remaining_amount | number : '1.2-2'))\\n                      : \\\"$0.00\\\"}}</td>\\n                    <td>{{sales.order_profit ? (\\\"$\\\"+(sales.order_profit | number : '1.2-2')) :\\n                      \\\"$0.00\\\"}}\\n                    </td>\\n                    <td>{{sales.order_profit_percentage + \\\"%\\\"}}\\n                    </td>\\n                    <td>\\n                      <span *ngIf=\\\"sales?.payment_status == 'NOT_PAID'\\\" class=\\\"text-danger\\\">Not\\n                        Paid</span>\\n                      <span *ngIf=\\\"sales?.payment_status == 'FULL'\\\" class=\\\"text-success\\\">Paid</span>\\n                      <span *ngIf=\\\"sales?.payment_status == 'PARTIAL'\\\">Partially Paid</span>\\n                      <span *ngIf=\\\"sales?.payment_status == null\\\">-</span>\\n                    </td>\\n                    <td>{{sales.salesman || \\\"-\\\"}}</td>\\n                    <td>\\n                      <div class=\\\"d-flex align-items-center justify-content-center\\\">\\n                        <a [routerLink]=\\\"['/sales-management/order-invoice']\\\"\\n                          [queryParams]='{id: sales?.id, customer_id: sales?.customer, verified: sales?.verfication_status, isDelivered: sales?.delivered_status, vs: selectedVerificationStatus, os: selectedOrderStatus, sn: selectedStoreName, ps: selectedPaymentStatus, fdd: selectedFromDueDate, tdd: selectedToDueDate, fd: selectedFromDate, td: selectedToDate, limit: tableLimit, search: searchValue}'\\n                          class=\\\"text-primary mx-2\\\"><i class=\\\"fa fa-file-invoice\\\"></i></a>\\n                        <!-- <a [routerLink]=\\\"['/sales-management/status-order']\\\" [queryParams]='{id: sales?.id,print: 1}' class=\\\"text-info mx-2\\\" href=\\\"javascript:void(0)\\\"><i\\n                                                        class=\\\"fa fa-print\\\"></i></a> -->\\n                        <a *ngIf=\\\"sales.invoice_no\\\" (click)=\\\"printPage(sales.invoice_no)\\\" class=\\\"text-info mx-2\\\"\\n                          href=\\\"javascript:void(0)\\\"><i class=\\\"fa fa-print\\\"></i></a>\\n                      </div>\\n                    </td>\\n                  </tr>\\n                  <tr *ngIf=\\\"salesList?.length == 0\\\">\\n                    <td colspan=\\\"13\\\" class=\\\"no-data-available\\\">No Data Found !</td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n            </perfect-scrollbar>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","export default \"<div class=\\\"animated fadeIn\\\" id=\\\"print-section\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">{{orderData?.status}} Status Order</div>\\n        <div class=\\\"card-body p-4\\\">\\n          <div *ngIf=\\\"print != 1\\\" class=\\\"d-flex flex-wrap justify-content-between align-items-start mb-0\\\">\\n            <div class=\\\"form-group w-100 text-right\\\">\\n              <!-- <button [printStyle]=\\\"{h1 : {'color': 'red'}, h2 : {'border': 'solid 1px'}}\\\" printSectionId=\\\"print-section\\\" ngxPrint class=\\\"btn btn-md btn-primary\\\">Print Invoice</button> -->\\n              <button (click)=\\\"printPage();\\\" class=\\\"btn btn-md btn-primary\\\">Print Invoice</button>\\n            </div>\\n          </div>\\n          <div class=\\\"customer-content sales-content\\\">\\n            <ul class=\\\"d-flex flex-wrap\\\">\\n              <li>\\n                <strong>Invoice No</strong>\\n                <span>{{orderData?.invoice_no}}</span>\\n              </li>\\n              <li>\\n                <strong>Customer Name</strong>\\n                <span>{{orderData?.customer_name}}</span>\\n              </li>\\n              <li>\\n                <strong>Billing Address</strong>\\n                <span>{{orderData?.billing_address}}</span>\\n              </li>\\n              <li>\\n                <strong>Shipping Address</strong>\\n                <span>{{orderData?.shipping_address}}</span>\\n              </li>\\n              <li>\\n                <strong>Order Date</strong>\\n                <span>{{orderData?.order_date ? (orderData?.order_date | date: 'yyyy/MM/dd') : \\\"\\\"}}</span>\\n              </li>\\n              <li>\\n                <strong>Order Status</strong>\\n                <span>{{orderData?.order_status}}</span>\\n              </li>\\n              <li>\\n                <strong>Payment Due Date</strong>\\n                <span>{{orderData?.due_date ? (orderData?.due_date | date: 'yyyy/MM/dd') : \\\"\\\"}}</span>\\n              </li>\\n            </ul>\\n          </div>\\n          <div class=\\\"responsive-table rounded mb-4\\\">\\n            <perfect-scrollbar>\\n              <table datatable [dtOptions]=\\\"dtOptions\\\" [dtTrigger]=\\\"dtTrigger\\\"\\n                class=\\\"data row-border hover table order-table border\\\">\\n                <thead>\\n                  <tr>\\n                    <th>Product Name</th>\\n                    <th>Quantity</th>\\n                    <th>Sales Rate</th>\\n                    <th>Order Amount</th>\\n                    <th>Discount</th>\\n                    <th>Final Order Amount </th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr *ngFor=\\\"let product of productList;let i = index;\\\">\\n                    <td>{{product.product_name || \\\"-\\\"}}</td>\\n                    <td>{{product.quantity || \\\"-\\\"}}</td>\\n                    <td>{{product.sales_rate ? (\\\"$\\\"+(product.sales_rate | number : '1.2-2')) : \\\"$0.00\\\"}}</td>\\n                    <td>{{product.order_price ? (\\\"$\\\"+(product.order_price | number : '1.2-2')) : \\\"$0.00\\\"}}</td>\\n                    <td>{{product.discount ? (\\\"$\\\"+(product.discount | number : '1.2-2')) : \\\"$0.00\\\"}}</td>\\n                    <td>{{product.final_order_amount ? (\\\"$\\\"+(product.final_order_amount | number : '1.2-2')) : \\\"$0.00\\\"}}</td>\\n                  </tr>\\n                  <tr *ngIf=\\\"productList?.length == 0\\\">\\n                    <td colspan=\\\"6\\\" class=\\\"no-data-available\\\">No Data Found !</td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n            </perfect-scrollbar>\\n            <div class=\\\"calcuted-data\\\">\\n              <ul class=\\\"justify-content-end\\\">\\n                <li>\\n                  <strong>Sub Total</strong>\\n                  <span>{{orderData?.sub_total ? (\\\"$ \\\"+orderData?.sub_total) : \\\"$ 0\\\"}}</span>\\n                </li>\\n                <li>\\n                  <strong>Total</strong>\\n                  <span>{{orderData?.total ? (\\\"$ \\\"+orderData?.total) : \\\"$ 0\\\"}}</span>\\n                </li>\\n                <li>\\n                  <strong>Amount Received</strong>\\n                  <span>{{orderData?.amount_received ? (\\\"$ \\\"+orderData?.amount_received) : \\\"$ 0\\\"}}</span>\\n                </li>\\n                <li>\\n                  <strong>Amount Due</strong>\\n                  <span>{{orderData?.amount_due ? (\\\"$ \\\"+orderData?.amount_due) : \\\"$ 0\\\"}}</span>\\n                </li>\\n              </ul>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","export default \"<div class=\\\"animated fadeIn\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-header d-flex justify-content-between align-items-center\\\">Payment Method\\n                    <div class=\\\"pull-right\\\">\\n                        <a (click)=\\\"goPreviousUrl()\\\" class=\\\"btn btn-md btn-secondary\\\" type=\\\"button\\\">Back</a>\\n                    </div>\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <form [formGroup]=\\\"addPaymentMethodForm\\\" (ngSubmit)=\\\"uncheckAll();\\\" #formDir=\\\"ngForm\\\" novalidate\\n                        class=\\\"customer-content sales-content\\\">\\n                        <ul class=\\\"d-flex flex-wrap\\\">\\n                            <li>\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"name\\\" class=\\\"w-100\\\">Payment Method</label>\\n                                    <select (change)=\\\"changeMode()\\\" [(ngModel)]=\\\"selectedMode\\\" formControlName=\\\"mode\\\"\\n                                        class=\\\"form-control\\\">\\n                                        <option value=\\\"CASH\\\">Cash</option>\\n                                        <option value=\\\"CHEQUE\\\">Check</option>\\n                                    </select>\\n                                    <div class=\\\"error\\\"\\n                                        *ngIf=\\\"(submittedMethodReceived && addPaymentMethodForm.controls.mode.invalid) || addPaymentMethodForm.controls.mode.touched\\\">\\n                                        <div *ngIf=\\\"addPaymentMethodForm.hasError('required','mode')\\\" class=\\\"err-msg\\\">\\n                                            Payment mode is required.\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </li>\\n                            <li *ngIf=\\\"(selectedMode == 'CHEQUE') || (selectedMode == 'ONLINE')\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"name\\\" class=\\\"w-100\\\">{{selectedMode == 'CHEQUE' ? \\\"Check No\\\" :\\n                                        \\\"Transaction No\\\"}}</label>\\n                                    <input formControlName=\\\"cheque_no\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\"\\n                                        placeholder=\\\"Enter {{selectedMode == 'CHEQUE' ? 'Check No' : 'Transaction No'}}\\\">\\n                                    <div class=\\\"error\\\"\\n                                        *ngIf=\\\"(submittedMethodReceived && addPaymentMethodForm.controls.cheque_no.invalid) || addPaymentMethodForm.controls.cheque_no.touched\\\">\\n                                        <div *ngIf=\\\"addPaymentMethodForm.hasError('required','cheque_no')\\\"\\n                                            class=\\\"err-msg\\\">{{selectedMode == 'CHEQUE' ? \\\"Check no\\\" : \\\"Transaction\\n                                            no\\\"}} is required.\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </li>\\n                            <!-- <li>\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"name\\\" class=\\\"w-100\\\">Bank Name :</label>\\n                                    <input formControlName=\\\"bank_name\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\"\\n                                        placeholder=\\\"Enter Bank Name\\\">\\n                                    <div class=\\\"error\\\"\\n                                        *ngIf=\\\"(submittedMethodReceived && addPaymentMethodForm.controls.bank_name.invalid) || addPaymentMethodForm.controls.bank_name.touched\\\">\\n                                        <div *ngIf=\\\"addPaymentMethodForm.hasError('required','bank_name')\\\"\\n                                            class=\\\"err-msg\\\">Bank name is required.\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </li> -->\\n                            <li>\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"name\\\" class=\\\"w-100\\\">Amount Received</label>\\n                                    <input [(ngModel)]=\\\"ammountReceivedValue\\\" (change)=\\\"onAmountChange();\\\"\\n                                        formControlName=\\\"ammount_received\\\" class=\\\"form-control quantity\\\" id=\\\"name\\\"\\n                                        type=\\\"number\\\" placeholder=\\\"Enter Amount Received\\\">\\n                                    <div class=\\\"error\\\"\\n                                        *ngIf=\\\"(submittedMethodReceived && addPaymentMethodForm.controls.ammount_received.invalid) || addPaymentMethodForm.controls.ammount_received.touched\\\">\\n                                        <div *ngIf=\\\"addPaymentMethodForm.hasError('required','ammount_received')\\\"\\n                                            class=\\\"err-msg\\\">Amount received is required.\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </li>\\n                            <li>\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"name\\\" class=\\\"w-100\\\">Image</label>\\n                                    <input (change)=\\\"onImageFileChange($event)\\\" formControlName=\\\"image\\\"\\n                                        class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"file\\\" placeholder=\\\"Enter Bank Name\\\">\\n                                    <div class=\\\"error\\\"\\n                                        *ngIf=\\\"(submittedMethodReceived && addPaymentMethodForm.controls.image.invalid) || addPaymentMethodForm.controls.image.touched\\\">\\n                                        <div *ngIf=\\\"addPaymentMethodForm.hasError('required','image')\\\" class=\\\"err-msg\\\">\\n                                            Image is required.\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </li>\\n                            <li class=\\\"w-100 d-block\\\">\\n                                <button class=\\\"btn btn-md btn-dark mr-3\\\" type=\\\"submit\\\">Submit</button>\\n                            </li>\\n                        </ul>\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n            <form class=\\\"card\\\">\\n                <div class=\\\"card-header d-flex justify-content-between align-items-center\\\">Outstanding Order\\n                    <div class=\\\"dropdown pull-right\\\">\\n                        <button (click)=\\\"commonService.toggleDropDown()\\\" class=\\\"btn btn-md btn-primary dropbtn\\\"\\n                            type=\\\"button\\\">\\n                            <i class=\\\"fa fa-file-export mr-2\\\"></i>\\n                            Export\\n                        </button>\\n                        <div id=\\\"myDropdown\\\" class=\\\"dropdown-content\\\">\\n                            <a href=\\\"javascript:void(0)\\\" (click)=\\\"exportCsv()\\\"\\n                                style=\\\"font-size: small; text-decoration: none;\\\">\\n                                Export to XLSX\\n                            </a>\\n                        </div>\\n                        <button *ngIf=\\\"showClearPaymentButton\\\" class=\\\"btn btn-md btn-dark\\\" type=\\\"button\\\"\\n                            (click)=\\\"submitAddPaymentMethodForm()\\\">Clear\\n                            Payment</button>\\n                    </div>\\n                </div>\\n                <div class=\\\"card-body p-4\\\">\\n                    <div class=\\\"d-flex flex-wrap justify-content-end align-items-start mb-0\\\">\\n                        <!-- <div class=\\\"form-group\\\">\\n                            <button class=\\\"btn btn-md btn-primary\\\" type=\\\"button\\\" (click)=\\\"addmodal.show()\\\"><i class=\\\"fa fa-plus mr-2\\n                        \\\"></i>Add Payment</button>\\n                        </div> -->\\n                        <!-- <div *ngIf=\\\"showPaymentMessage\\\" class=\\\"row\\\">\\n                            <div class=\\\"col-sm-12 py-3 text-center\\\">\\n                                <button class=\\\"btn btn-md btn-dark mr-3\\\" type=\\\"button\\\" (click)=\\\"submitPayment()\\\">Clear\\n                                    Payment</button>\\n                            </div>\\n                        </div> -->\\n                    </div>\\n                    <perfect-scrollbar>\\n                        <div class=\\\"responsive-table rounded mb-4\\\">\\n                            <table datatable [dtOptions]=\\\"dtOptions\\\" [dtTrigger]=\\\"dtTrigger\\\" datatable\\n                                class=\\\"data row-border hover table order-table border\\\">\\n                                <thead>\\n                                    <tr>\\n                                        <th>Select</th>\\n                                        <th>Order Date</th>\\n                                        <th>Invoice No#</th>\\n                                        <th>Payment Due<br>Date</th>\\n                                        <th>Order Amount</th>\\n                                        <th>Payment<br>Amount<br>Received</th>\\n                                        <th>Open<br>Balance</th>\\n                                        <th>Payment</th>\\n                                    </tr>\\n                                </thead>\\n                                <tbody>\\n                                    <tr *ngFor=\\\"let order of orderList;let i = index;\\\">\\n                                        <td>\\n                                            <div class=\\\"custom-control custom-checkbox\\\">\\n                                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\"\\n                                                    (click)=\\\"order.checked=!order.checked; calculateAmountReceived(order.checked, order.open_balance*1, i)\\\"\\n                                                    [id]=\\\"'checkbox' + order.id\\\" [checked]=\\\"order.checked\\\"\\n                                                    [disabled]=\\\"order.disabled\\\">\\n                                                <label class=\\\"custom-control-label\\\"\\n                                                    [for]=\\\"'checkbox' + order.id\\\"></label>\\n                                            </div>\\n                                        </td>\\n                                        <td>{{order.created_at ? (order.created_at | date: 'MM-dd-yyyy') : \\\"-\\\"}}</td>\\n                                        <td>{{order.invoice_no || \\\"-\\\"}}</td>\\n                                        <td>{{order.due_date ? (order.due_date | date: 'MM-dd-yyyy') : \\\"-\\\"}}</td>\\n                                        <td>\\n                                            {{order.amount ? (\\\"$\\\"+(order.amount | number : '1.2-2')) : \\\"$0.00\\\"}}\\n                                        </td>\\n                                        <td>\\n                                            {{order.amount_recieved ? (\\\"$\\\"+(order.amount_recieved | number : '1.2-2')) :\\n                                            \\\"$0.00\\\"}}\\n                                        </td>\\n                                        <td>\\n                                            {{order.open_balance ? (\\\"$\\\"+(order.open_balance | number : '1.2-2')) :\\n                                            \\\"$0.00\\\"}}\\n                                        </td>\\n                                        <td>\\n                                            <!-- <input style=\\\"width: 90px;\\\" class=\\\"form-control quantity\\\" #paymentValue\\n                                                type=\\\"number\\\" [value]=\\\"order?.payment\\\"\\n                                                (change)=\\\"changePaymentValue(paymentValue.value,order, i)\\\"\\n                                                (keyup)=\\\"paymentValue.value > order.remaining_amount ? paymentValue.value = order.remaining_amount : paymentValue.value\\\"> -->\\n                                            <!-- <input style=\\\"width: 90px;\\\" class=\\\"form-control quantity\\\" type=\\\"number\\\"\\n                                                [value]=\\\"order?.payment\\\"> -->\\n                                            {{order.payment ? (\\\"$\\\"+(order.payment | number : '1.2-2')) : \\\"$0.00\\\"}}\\n                                        </td>\\n\\n                                    </tr>\\n                                    <tr *ngIf=\\\"orderList?.length == 0\\\">\\n                                        <td colspan=\\\"7\\\" class=\\\"no-data-available\\\">No Data Found !</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </perfect-scrollbar>\\n                    <div class=\\\"calcuted-data\\\">\\n                        <ul class=\\\"justify-content-end\\\">\\n                            <!-- <li>\\n                                <strong>Amount to Apply </strong>\\n                                <span>{{\\\"$ \\\"+(amountToApply | number : '1.2-2')}}</span>\\n                            </li> -->\\n                            <li style=\\\"float: left;\\\" *ngIf=\\\"showPaymentMessage\\\">\\n                                <strong>{{amountRecievedMessage}}</strong>\\n                                <span>{{calculatedReceivedAmount}}</span>\\n                            </li>\\n                            <li>\\n                                <strong>Outstanding Amount</strong>\\n                                <span>{{\\\"$ \\\"+(orderData?.total_remaining_amount | number :\\n                                    '1.2-2')}}</span>\\n                            </li>\\n                        </ul>\\n                    </div>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\\n\\n<div bsModal #addmodal=\\\"bs-modal\\\" class=\\\"modal fade text-center\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"Delete\\\"\\n    aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-md modal-dialog-centered\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-body py-4 text-center d-flex flex-column justify-content-center\\\">\\n                <h2 class=\\\"font-weight-bold mb-4 text-primary\\\">Outstanding Order</h2>\\n                <form class=\\\"d-inline-block w-100 text-left\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Payment:</label>\\n                                <input class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\" placeholder=\\\"Payment\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"modal-footer justify-content-start flex-wrap w-100 pb-0\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-dark mr-3\\\">ADD</button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"editmodal.hide()\\\">Cancel</button>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div bsModal #editmodal=\\\"bs-modal\\\" class=\\\"modal fade text-center\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"Delete\\\"\\n    aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-md modal-dialog-centered\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-body py-4 text-center d-flex flex-column justify-content-center\\\">\\n                <h2 class=\\\"font-weight-bold mb-4 text-primary\\\">Outstanding Order</h2>\\n                <form class=\\\"d-inline-block w-100 text-left\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"w-100\\\">Payment:</label>\\n                                <input class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\" placeholder=\\\"Payment\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"modal-footer justify-content-start flex-wrap w-100 pb-0\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-dark mr-3\\\">Edit</button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"editmodal.hide()\\\">Cancel</button>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n<!-- delete modal -->\\n<div bsModal #deleteModal=\\\"bs-modal\\\" class=\\\"modal fade text-center\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"Delete\\\"\\n    aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-sm modal-dialog-centered\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-body py-4 text-center d-flex flex-column justify-content-center\\\">\\n                <h2 class=\\\"font-weight-bold mb-4 text-primary\\\">Delete</h2>\\n                <p class=\\\"mb-0\\\">Are You Sure You Want To Delete ?</p>\\n            </div>\\n            <div class=\\\"modal-footer justify-content-center\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"deleteModal.hide()\\\">Cancel</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger\\\">Delete</button>\\n            </div>\\n        </div><!-- /.modal-content -->\\n    </div>\\n</div><!-- /.modal -->\";","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\n@Injectable()\nexport class SalesManagementService {\n\n  constructor(private http: HttpClient) { }\n\n  getDashoardInfo(): Observable<any> {\n    return this.http.get<any>(`${environment.base_url}/sales/dashboard/`);\n  }\n\n  orderList(data): Observable<any> {\n    return this.http.post<any>(`${environment.base_url}/orderlist/`, data);\n  }\n\n  createOrder(data): Observable<any> {\n    return this.http.post<any>(`${environment.base_url}/order/`, data);\n  }\n\n  getOrder(id, data): Observable<any> {\n    return this.http.post<any>(`${environment.base_url}/orderview/${id}/`, data);\n  }\n\n  creditMemoList(data): Observable<any> {\n    return this.http.post<any>(`${environment.base_url}/credit_memo/customer_or_store_credit/`, data);\n  }\n\n  applyCredit(data): Observable<any> {\n    return this.http.post<any>(`${environment.base_url}/credit_memo/apply_credit_to_order/`, data);\n  }\n\n  deleteProduct(id): Observable<any> {\n    return this.http.delete<any>(`${environment.base_url}/create_product/${id}/`);\n  }\n\n  createProduct(data): Observable<any> {\n    return this.http.post<any>(`${environment.base_url}/create_product/`, data);\n  }\n\n  getProduct(id): Observable<any> {\n    return this.http.post<any>(`${environment.base_url}/AddProductToOrder/${id}/get_product_data/`, \"\");\n  }\n\n  getCategories(): Observable<any> {\n    return this.http.get<any>(`${environment.base_url}/categorieslistNoPagnination/`);\n  }\n\n  productlist(data): Observable<any> {\n    return this.http.post<any>(`${environment.base_url}/productlist/`, data);\n  }\n\n  add_product(data, id): Observable<any> {\n    return this.http.post<any>(`${environment.base_url}/AddProductToOrder/${id}/add_product/`, data);\n  }\n\n  getPackSize(data): Observable<any> {\n    return this.http.post<any>(`${environment.base_url}/pack/listview/`, data);\n  }\n\n  edit_product(data, id): Observable<any> {\n    return this.http.post<any>(`${environment.base_url}/AddProductToOrder/${id}/edit_product/`, data);\n  }\n\n  delete_product(data): Observable<any> {\n    return this.http.post<any>(`${environment.base_url}/AddProductToOrder/delete_product/`, data);\n  }\n\n  edit_other_details(data, id): Observable<any> {\n    return this.http.post<any>(`${environment.base_url}/AddProductToOrder/${id}/edit_other_details/`, data);\n  }\n\n  product_from_category(data): Observable<any> {\n    return this.http.post<any>(`${environment.base_url}/product_from_category/listview/`, data);\n  }\n\n  getCustomer(id): Observable<any> {\n    return this.http.get<any>(`${environment.base_url}/customer/${id}/`);\n  }\n\n  getInvoicePdf(data): Observable<any> {\n    return this.http.post<any>(`${environment.base_url}/invoice_pdf_url/`, data);\n  }\n\n  getDeliveryReceipt(data): Observable<any> {\n    return this.http.post<any>(`${environment.base_url}/delivery_sheet_pdf_url/`, data);\n  }\n\n  getVendors(data): Observable<any> {\n    return this.http.post<any>(`${environment.base_url}/vendor/listview/`, data);\n  }\n\n  getOrderPDF(id): Observable<any> {\n    return this.http.get<any>(`${environment.base_url}/sales_pdf_url/${id}/`);\n  }\n}\n","import {\n  Component,\n  OnInit,\n  TemplateRef,\n  ViewChild,\n  AfterViewInit,\n  OnDestroy,\n  QueryList,\n  ViewChildren,\n} from \"@angular/core\";\nimport { Title } from \"@angular/platform-browser\";\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\nimport { DataTableDirective } from \"angular-datatables\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { SalesManagementService } from \"../../../shared/services/sales-management.service\";\nimport { Subject } from \"rxjs\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { Validations } from \"../../../shared/validators/Validations\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { DatePipe, Location } from \"@angular/common\";\nimport { DomSanitizer, SafeResourceUrl } from \"@angular/platform-browser\";\nimport printJS from \"print-js\";\nimport { CommonService } from \"../../../shared/services/common.service\";\n\n@Component({\n  selector: \"app-order-invoice\",\n  templateUrl: \"./order-invoice.component.html\",\n})\nexport class OrderInvoiceComponent implements AfterViewInit, OnDestroy, OnInit {\n  @ViewChild(\"addmodal\") public addmodal: ModalDirective;\n  @ViewChild(\"applyCreditModal\") public applyCreditModal: ModalDirective;\n  @ViewChild(\"editmodal\") public editmodal: ModalDirective;\n  @ViewChild(\"deleteModal\") public deleteModal: ModalDirective;\n  @ViewChildren(DataTableDirective)\n  dtElements: QueryList<any>;\n  // dtElement: DataTableDirective;\n  // dtOptions: DataTables.Settings = {};\n  dtOptions: DataTables.Settings[] = [];\n  // dtTrigger: Subject<any> = new Subject();\n  dtTrigger0: Subject<any> = new Subject();\n  dtTrigger1: Subject<any> = new Subject();\n  productList: Array<any>;\n  creditMemoList: Array<any>;\n  orderId: any;\n  addForm: FormGroup;\n  submitted: boolean = false;\n  fromProductOrder: boolean = false;\n  addProductForm: FormGroup;\n  addProductSubmitted: boolean = false;\n  editProductForm: FormGroup;\n  editProductSubmitted: boolean = false;\n  productId: string = \"\";\n  orderData: any;\n  totalAmount: number;\n  customerId: any;\n  urlSafe: SafeResourceUrl;\n  categoryData: any;\n  productDropdownData: any;\n  productNameEditValue: string = \"\";\n  quantityEditValue: number;\n  orderAmountEditValue: number;\n  discountEditValue: number;\n  selectedCategory: string = \"\";\n  selectedProduct: string = \"\";\n  selectedQuantity: string = \"\";\n  showAction: boolean = false;\n  packSizeData: any;\n  selectedPacksize: string = \"\";\n  finalAmount: number = 0;\n  maxThreeSoldLimit: any;\n  minThreeSoldLimit: any;\n  threeSoldLimit: string = \"0\";\n  minThreeSoldLimitError: string = \"0\";\n  orderAmount: number = 0;\n  selectedQunatity: any;\n  verified_product: number = 1;\n  isDelivered: boolean = false;\n  vendorData: any;\n  selectedVendor: string = \"\";\n\n  selectedVerificationStatus: any;\n  selectedOrderStatus: any;\n  selectedStoreName: any;\n  selectedPaymentStatus: any;\n  selectedFromDueDate: any;\n  selectedToDueDate: any;\n  selectedFromDate: any;\n  selectedToDate: any;\n  tableLimit: number = 10;\n  firstTime: boolean = false;\n  firstTimeRender: boolean = true;\n  searchValue: string = \"\";\n  salesSearchValue: string = \"\";\n  afterEdit: boolean = false;\n  editProductId: string;\n  datatbaleData: any;\n  prise: any;\n  storeName: string = \"\";\n\n  constructor(\n    private titleService: Title,\n    private location: Location,\n    private toastr: ToastrService,\n    private salesManagementService: SalesManagementService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private datePipe: DatePipe,\n    public sanitizer: DomSanitizer,\n    public commonService: CommonService\n  ) {}\n\n  ngOnInit(): void {\n    this.titleService.setTitle(\"Order Invoice\");\n    this.addFormControl();\n\n    this.route.queryParams.subscribe((param) => {\n      this.orderId = param.id;\n      this.customerId = param.customer_id;\n\n      this.isDelivered = param.isDelivered == \"true\" ? true : false;\n      this.selectedVerificationStatus = param.vs || \"\";\n      this.selectedOrderStatus = param.os || \"\";\n      this.selectedStoreName = param.sn || \"\";\n      this.selectedPaymentStatus = param.ps || \"\";\n      this.selectedFromDueDate = param.fdd || \"\";\n      this.selectedToDueDate = param.tdd || \"\";\n      this.selectedFromDate = param.fd || \"\";\n      this.selectedToDate = param.td || \"\";\n      this.salesSearchValue = param.search || \"\";\n      this.tableLimit = param.limit;\n      this.firstTime = param.firstTime;\n\n      this.fromProductOrder = param.fromProductOrder;\n\n      // this.addForm.patchValue({\n      //   payment_status:\n      //     param.paymentStatus == \"NOT_PAID\"\n      //       ? \"Not Paid\"\n      //       : param.paymentStatus == \"FULL\"\n      //       ? \"Paid\"\n      //       : param.paymentStatus == \"PARTIAL\"\n      //       ? \"Partially Paid\"\n      //       : \"-\",\n      // });\n    });\n\n    this.urlSafe = this.sanitizer.bypassSecurityTrustResourceUrl(\n      \"http://180.211.99.165:8080/jaisal/Akshar_App/#/inventory-management\"\n    );\n\n    this.addProductFormControl();\n    this.editProductFormControl();\n    this.getCategoryData();\n    this.getProductData();\n    this.dtOptions[0] = this.getProductList();\n    this.dtOptions[1] = this.getCreditList();\n    this.getVendorData();\n  }\n\n  addFormControl() {\n    this.addForm = new FormGroup({\n      invoice_no: new FormControl(\"\", [\n        //Validators.required\n      ]),\n      payment_status: new FormControl(\"\", [\n        //Validators.required\n      ]),\n      customer_name: new FormControl(\"\", [\n        //Validators.required\n      ]),\n      billing_address: new FormControl(\"\", [\n        //Validators.required\n      ]),\n      shiping_address: new FormControl(\"\", [\n        //Validators.required\n      ]),\n      order_date: new FormControl(\"\", [\n        //Validators.required\n      ]),\n      order_status: new FormControl(\"\", [\n        //Validators.required\n      ]),\n      payment_due_date: new FormControl(\"\", [\n        //Validators.required\n      ]),\n      payment_delivery_date: new FormControl(\"\", [Validators.required]),\n      po_number: new FormControl(\"\", [\n        //Validators.required\n      ]),\n    });\n  }\n\n  addProductFormControl() {\n    this.addProductForm = new FormGroup({\n      product_category: new FormControl(\"\", [Validators.required]),\n      vendor: new FormControl(\"\", [Validators.required]),\n      product_name: new FormControl(\"\", [Validators.required]),\n      packsize_id: new FormControl(\"\", [\n        //Validators.required\n      ]),\n      quantity: new FormControl(\"\", [Validators.required]),\n      sales_rate: new FormControl(\"\", [\n        //Validators.required\n      ]),\n      order_amount: new FormControl(\"\", [\n        //Validators.required\n      ]),\n      price: new FormControl(\"\", [\n        // Validators.required\n      ]),\n      discount: new FormControl(\"\", [\n        //Validators.required\n      ]),\n      final_amount: new FormControl(\"\", [Validators.required]),\n    });\n  }\n\n  editProductFormControl() {\n    this.editProductForm = new FormGroup({\n      product_category: new FormControl({ value: \"\", disabled: true }, [\n        Validators.required,\n      ]),\n      vendor: new FormControl({ value: \"\", disabled: true }, [\n        Validators.required,\n      ]),\n      packsize_id: new FormControl(\"\", [\n        //Validators.required\n      ]),\n      product_name: new FormControl({ value: \"\" }, [Validators.required]),\n      quantity: new FormControl(\"\", [Validators.required]),\n      sales_rate: new FormControl(\"\", [\n        //Validators.required\n      ]),\n      order_amount: new FormControl(\"\", [Validators.required]),\n      discount: new FormControl(\"\", [\n        //Validators.required\n      ]),\n      final_amount: new FormControl({ value: \"\", disabled: true }, [\n        Validators.required,\n      ]),\n      order_quantity_id: new FormControl(\"\", [\n        //Validators.required\n      ]),\n    });\n  }\n\n  getCategoryData() {\n    this.salesManagementService.getCategories().subscribe(\n      (response) => {\n        let resData = JSON.parse(JSON.stringify(response));\n\n        if (resData.status_code == 200) {\n          this.categoryData = resData.data;\n        } else {\n          this.toastr.error(\"\", resData.message);\n        }\n      },\n      (err) => {\n        this.toastr.error(\"\", err.error.message);\n      }\n    );\n  }\n\n  changeCategory() {\n    var formData = new FormData();\n    formData.append(\"category\", this.selectedCategory);\n    this.salesManagementService.product_from_category(formData).subscribe(\n      (response) => {\n        let resData = JSON.parse(JSON.stringify(response));\n\n        if (resData.status_code == 200) {\n          this.productDropdownData = resData.data;\n          this.changeProduct();\n        } else {\n          this.toastr.error(\"\", resData.message);\n        }\n      },\n      (err) => {\n        this.toastr.error(\"\", err.error.message);\n      }\n    );\n  }\n\n  changeVendor() {\n    var formData = new FormData();\n    formData.append(\"category\", this.selectedCategory);\n    formData.append(\"vendor\", this.selectedVendor);\n    this.salesManagementService.product_from_category(formData).subscribe(\n      (response) => {\n        let resData = JSON.parse(JSON.stringify(response));\n\n        if (resData.status_code == 200) {\n          this.productDropdownData = resData.data;\n          this.changeProduct();\n        } else {\n          this.toastr.error(\"\", resData.message);\n        }\n      },\n      (err) => {\n        this.toastr.error(\"\", err.error.message);\n      }\n    );\n  }\n\n  changeProduct() {\n    this.productDropdownData.forEach((element) => {\n      if (element.product_id == this.selectedProduct) {\n        this.packSizeData = element.pack_size_array;\n      }\n    });\n  }\n\n  selectPackSize(type) {\n    var quantity =\n      type == 1\n        ? this.addProductForm.controls.quantity.value\n        : this.editProductForm.controls.quantity.value;\n    this.productDropdownData.forEach((element) => {\n      if (element.product_id == this.selectedProduct) {\n        this.orderAmount =\n          quantity != \"\" ? element.sale_price * quantity : element.sale_price;\n        this.prise = element.sale_price;\n      }\n    });\n  }\n\n  changeDiscount() {\n    if (this.addProductForm.controls.discount.value != 0) {\n      this.prise = this.prise - this.addProductForm.controls.discount.value;\n    }\n  }\n\n  getProductData() {\n    // this.salesManagementService.getPackSize(\"\").subscribe(response => {\n    //   let resData = JSON.parse(JSON.stringify(response));\n\n    //   if (resData.status_code == 200) {\n    //     this.packSizeData = resData.data;\n    //   } else {\n    //     this.toastr.error('', resData.message);\n    //   }\n    // },\n    //   err => {\n    //     this.toastr.error('', err.error.message);\n    //   });\n\n    this.salesManagementService.getCustomer(this.customerId).subscribe(\n      (response) => {\n        let resData = JSON.parse(JSON.stringify(response));\n\n        if (resData.status_code == 200) {\n          this.maxThreeSoldLimit = resData.data.max_threshold;\n          this.minThreeSoldLimit = resData.data.min_threshold;\n          this.addForm.patchValue({\n            billing_address:\n              resData.data.billing_address +\n              \", \" +\n              resData.data.billing_city +\n              \", \" +\n              resData.data.billing_state +\n              \" \" +\n              resData.data.billing_zipcode,\n            shiping_address:\n              resData.data.shipping_address +\n              \", \" +\n              resData.data.shipping_city +\n              \", \" +\n              resData.data.shipping_state +\n              \" \" +\n              resData.data.shipping_zipcode,\n          });\n        } else {\n          this.toastr.error(\"\", resData.message);\n        }\n      },\n      (err) => {\n        this.toastr.error(\"\", err.error.message);\n      }\n    );\n  }\n\n  private getProductList(): DataTables.Settings {\n    return {\n      //pagingType: 'full_numbers',\n      pageLength: 100,\n      order: [0, \"desc\"],\n      serverSide: true,\n      processing: true,\n      searchDelay: 1300,\n      ajax: (dataTablesParameters: any, callback) => {\n        dataTablesParameters.page =\n          parseInt(dataTablesParameters.start) /\n            parseInt(dataTablesParameters.length) +\n          1;\n        dataTablesParameters.limit = dataTablesParameters.length;\n        // dataTablesParameters.search_param = dataTablesParameters.search.value;\n        dataTablesParameters.sort_type = dataTablesParameters.order[0].dir;\n        dataTablesParameters.order[0].column == 0\n          ? (dataTablesParameters.sort_field =\n              dataTablesParameters.order[0].column == 0\n                ? \"order_product_name\"\n                : \"\")\n          : \"\";\n        dataTablesParameters.order[0].column == 1\n          ? (dataTablesParameters.sort_field =\n              dataTablesParameters.order[0].column == 1 ? \"item_no\" : \"\")\n          : \"\";\n        dataTablesParameters.order[0].column == 2\n          ? (dataTablesParameters.sort_field =\n              dataTablesParameters.order[0].column == 2 ? \"category_name\" : \"\")\n          : \"\";\n        // dataTablesParameters.order[0].column == 1 ? dataTablesParameters.sort_field = (dataTablesParameters.order[0].column == 1 && dataTablesParameters.order[0].dir == \"asc\") ? (\"item_no\") : (\"-item_no\") : \"\";;\n        // dataTablesParameters.order[0].column == 2 ? dataTablesParameters.sort_field = (dataTablesParameters.order[0].column == 2 && dataTablesParameters.order[0].dir == \"asc\") ? (\"category_name\") : (\"-category_name\") : \"\";;\n        // this.searchValue = dataTablesParameters.search.value;\n\n        if (!this.afterEdit) {\n          dataTablesParameters.search_param = dataTablesParameters.search.value;\n        } else if (this.afterEdit) {\n          dataTablesParameters.search_param = this.searchValue;\n          $(\".dataTables_filter input\").val(this.searchValue);\n          this.afterEdit = false;\n        }\n\n        this.searchValue = dataTablesParameters.search.value;\n        this.datatbaleData = dataTablesParameters;\n        this.salesManagementService\n          .getOrder(this.orderId, dataTablesParameters)\n          .subscribe(\n            (respones) => {\n              let resData = JSON.parse(JSON.stringify(respones));\n\n              if (resData.status_code == 200) {\n                this.productList = resData.data.products_list;\n                // console.log(this.productList.order_price);\n\n                // this.productList.forEach(element => {\n                //   element.order_price = (element.final_order_amount + (element.discount * element.quantity));\n                // });\n                this.orderData = resData.data;\n                this.totalAmount = this.orderData?.total;\n                //this.showAction = resData.data.order_status == \"OPEN\" ? true : false;\n                this.storeName = resData.data.customer_store;\n                this.verified_product = resData.data.verfication_status ? 0 : 1;\n\n                this.addForm.patchValue({\n                  invoice_no: resData.data.invoice_no,\n                  payment_status:\n                    resData.data.payment_status == \"NOT_PAID\"\n                      ? \"Not Paid\"\n                      : resData.data.payment_status == \"FULL\"\n                      ? \"Paid\"\n                      : resData.data.payment_status == \"PARTIAL\"\n                      ? \"Partially Paid\"\n                      : \"-\",\n                  // payment_status: resData.data.payment_status,\n                  customer_name: resData.data.customer_name,\n                  // billing_address: resData.data.billing_address,\n                  // shiping_address: resData.data.shipping_address,\n                  order_date: this.datePipe.transform(\n                    resData.data.order_date,\n                    \"MM-dd-yyyy\"\n                  ),\n                  order_status: resData.data.order_status,\n                  payment_due_date: this.datePipe.transform(\n                    resData.data.due_date,\n                    \"MM-dd-yyyy\"\n                  ),\n                  payment_delivery_date: this.datePipe.transform(\n                    resData.data.delivery_date,\n                    \"MM-dd-yyyy\"\n                  ),\n                  po_number: resData.data.po_num,\n                });\n\n                callback({\n                  // recordsTotal: this.productList.length,\n                  // recordsFiltered: this.productList.length,\n                  recordsTotal: resData.data.total_record,\n                  recordsFiltered: resData.data.total_record,\n                  data: [],\n                });\n              } else {\n                this.toastr.error(\"\", resData.message);\n              }\n            },\n            (err) => {\n              this.toastr.error(\"\", err.error.message);\n            }\n          );\n      },\n      columns: [\n        { data: \"product_name\", searchable: true, orderable: true },\n        { data: \"item_no\", searchable: true, orderable: true },\n        { data: \"category_name\", searchable: true, orderable: true },\n        { data: \"quantity\", searchable: false, orderable: false },\n        { data: \"order_price\", searchable: false, orderable: false },\n        { data: \"discount\", searchable: false, orderable: false },\n        { data: \"order_net_price\", searchable: false, orderable: false },\n        // { data: 'sales_rate', searchable: true, orderable: true },\n        { data: \"final_order_amount\", searchable: false, orderable: false },\n        // { data: 'final_order_amount', searchable: false, orderable: false },\n        { data: \"action\", searchable: false, orderable: false },\n      ],\n    };\n  }\n\n  private getCreditList(): DataTables.Settings {\n    return {\n      pageLength: 100,\n      order: [1, \"desc\"],\n      serverSide: true,\n      processing: true,\n      searchDelay: 1300,\n      ajax: (dataTablesParameters: any, callback) => {\n        // dataTablesParameters.page = parseInt(dataTablesParameters.start) / parseInt(dataTablesParameters.length) + 1;\n        // dataTablesParameters.limit = dataTablesParameters.length;\n        // dataTablesParameters.search_param = dataTablesParameters.search.value;\n\n        // // sorting\n        // dataTablesParameters.order[0].column == 0 ? dataTablesParameters.sort_field = \"cm_no\" : \"\";\n        // dataTablesParameters.order[0].column == 1 ? dataTablesParameters.sort_field = \"created_at\" : \"\";\n        // dataTablesParameters.order[0].column == 2 ? dataTablesParameters.sort_field = \"invoice_no\" : \"\";\n        // dataTablesParameters.order[0].column == 3 ? dataTablesParameters.sort_field = \"credit_amount\" : \"\";\n        // dataTablesParameters.order[0].column == 4 ? dataTablesParameters.sort_field = \"credit_applied_invoice_no\" : \"\";\n        // dataTablesParameters.order[0].column == 5 ? dataTablesParameters.sort_field = \"store_name\" : \"\";\n\n        // dataTablesParameters.sort_type = dataTablesParameters.order[0].dir;\n\n        // // this.datatableData = dataTablesParameters;\n\n        this.salesManagementService\n          .creditMemoList({ customer_or_store_id: this.customerId })\n          .subscribe(\n            (response) => {\n              let resData = JSON.parse(JSON.stringify(response));\n              if (resData.status_code == 200) {\n                this.creditMemoList = resData.data;\n\n                this.creditMemoList.forEach((element) => {\n                  element.checked = false;\n                  element.amountToApply = false;\n                });\n                callback({\n                  recordsTotal: resData.total_record,\n                  recordsFiltered: resData.filter_record,\n                  data: [],\n                });\n              } else {\n                this.toastr.error(\"\", resData.message);\n              }\n            },\n            (err) => {\n              this.toastr.error(\"\", err.error.message);\n            }\n          );\n      },\n      columns: [\n        { name: \"checkbox\", searchable: false, orderable: false },\n        { data: \"cm_no\", searchable: false, orderable: false },\n        { data: \"created_at\", searchable: false, orderable: false },\n        { data: \"invoice_no\", searchable: false, orderable: false },\n        { data: \"updated_credit_amount\", searchable: false, orderable: false },\n        // { data: 'credit_applied_invoice_no', searchable: false, orderable: false },\n        { data: \"store_name\", searchable: false, orderable: false },\n        { name: \"amountToApply\", searchable: false, orderable: false },\n      ],\n    };\n  }\n\n  changePaymentValue(paymentValue, id) {\n    for (let index = 0; index < this.creditMemoList.length; index++) {\n      if (this.creditMemoList[index].id == id) {\n        this.creditMemoList[index].amountToApply = paymentValue;\n        // this.creditMemoList[index].checked = true\n      }\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.dtTrigger0.next();\n  }\n\n  ngOnDestroy(): void {\n    this.dtTrigger0.unsubscribe();\n    this.dtTrigger1.unsubscribe();\n  }\n\n  rerender(): void {\n    this.dtElements.first.dtInstance.then((dtInstance: DataTables.Api) => {\n      dtInstance.destroy();\n      this.dtTrigger0.next();\n    });\n  }\n\n  rerenderCreditMemo(): void {\n    this.dtElements.last.dtInstance.then((dtInstance: any) => {\n      dtInstance.destroy();\n    });\n  }\n\n  submitAddForm() {\n    this.submitted = true;\n\n    var formData = new FormData();\n    // formData.append(\"name\", this.addForm.controls.invoice_no.value);\n    // formData.append(\"customer_name\", this.addForm.controls.customer_name.value);\n    // formData.append(\"billing_address\", this.addForm.controls.billing_address.value);\n    // formData.append(\"shiping_address\", this.addForm.controls.shiping_address.value);\n    // formData.append(\"order_date\", this.addForm.controls.order_date.value);\n    // formData.append(\"order_status\", this.addForm.controls.order_status.value);\n    // formData.append(\"payment_due_date\", this.datePipe.transform(this.addForm.controls.payment_due_date.value, \"yyyy-MM-dd\"));\n    formData.append(\n      \"payment_delivery_date\",\n      this.datePipe.transform(\n        this.addForm.controls.payment_delivery_date.value,\n        \"yyyy-MM-dd\"\n      )\n    );\n\n    if (this.addForm.valid) {\n      this.salesManagementService\n        .edit_other_details(formData, this.orderId)\n        .subscribe(\n          (response) => {\n            let resData = JSON.parse(JSON.stringify(response));\n\n            if (resData.status_code == 200) {\n              this.toastr.success(\"\", \"Order updated successfully!\");\n              this.rerender();\n            } else {\n              this.toastr.error(\"\", resData.message);\n            }\n          },\n          (err) => {\n            this.toastr.error(\"\", err.error.message);\n          }\n        );\n    }\n  }\n\n  submitAddProductForm() {\n    this.addProductSubmitted = true;\n\n    var formData = new FormData();\n    // formData.append(\"product_category\", this.addProductForm.controls.product_category.value);\n    formData.append(\n      \"product_id\",\n      this.addProductForm.controls.product_name.value\n    );\n    formData.append(\n      \"packsize_id\",\n      this.addProductForm.controls.packsize_id.value\n    );\n    formData.append(\"quantity\", this.addProductForm.controls.quantity.value);\n    formData.append(\n      \"discount\",\n      this.addProductForm.controls.discount.value\n        ? this.addProductForm.controls.discount.value\n        : 0\n    );\n    // formData.append(\"discount\", \"0\");\n    //formData.append(\"price\", this.addProductForm.controls.final_amount.value);\n    formData.append(\"price\", this.addProductForm.controls.price.value);\n\n    if (\n      this.addProductForm.valid &&\n      this.threeSoldLimit == \"0\" &&\n      this.minThreeSoldLimitError == \"0\"\n    ) {\n      this.salesManagementService.add_product(formData, this.orderId).subscribe(\n        (response) => {\n          let resData = JSON.parse(JSON.stringify(response));\n\n          if (resData.status_code == 200) {\n            this.addmodal.hide();\n            this.toastr.success(\"\", \"Product added successfully!\");\n            this.rerender();\n            this.resetaddProductForm();\n            this.addProductSubmitted = false;\n          } else {\n            this.addmodal.hide();\n            this.toastr.error(\"\", resData.message);\n            this.resetaddProductForm();\n            this.addProductSubmitted = false;\n          }\n        },\n        (err) => {\n          this.addmodal.hide();\n          this.toastr.error(\"\", err.error.message);\n          this.resetaddProductForm();\n          this.addProductSubmitted = false;\n        }\n      );\n    }\n  }\n\n  resetaddProductForm() {\n    this.addProductForm.patchValue({\n      quantity: \"\",\n      order_amount: \"\",\n      discount: \"\",\n      final_amount: \"\",\n    });\n    this.selectedCategory = \"\";\n    this.selectedVendor = \"\";\n    this.selectedProduct = \"\";\n    this.selectedPacksize = \"\";\n    this.threeSoldLimit = \"0\";\n    this.minThreeSoldLimitError = \"0\";\n    this.addProductSubmitted = false;\n  }\n\n  submitEditProductForm() {\n    this.editProductSubmitted = true;\n\n    var formData = new FormData();\n    formData.append(\"product_id\", this.editProductId);\n    // formData.append(\"packsize_id\", this.editProductForm.controls.packsize_id.value);\n    formData.append(\"quantity\", this.editProductForm.controls.quantity.value);\n    formData.append(\n      \"discount\",\n      this.editProductForm.controls.discount.value\n        ? this.editProductForm.controls.discount.value\n        : 0\n    );\n    formData.append(\"price\", this.editProductForm.controls.order_amount.value);\n    formData.append(\n      \"order_product_name\",\n      this.editProductForm.controls.product_name.value\n    );\n    formData.append(\n      \"order_quantity_id\",\n      this.editProductForm.controls.order_quantity_id.value\n    );\n\n    if (\n      this.editProductForm.controls.quantity.value != this.quantityEditValue ||\n      this.editProductForm.controls.order_amount.value !=\n        this.orderAmountEditValue ||\n      (this.editProductForm.controls.discount.value\n        ? this.editProductForm.controls.discount.value\n        : 0) != this.discountEditValue\n    ) {\n      formData.append(\"update_calculations\", \"true\");\n    } else if (\n      this.editProductForm.controls.product_name.value !=\n      this.productNameEditValue\n    ) {\n      formData.append(\"update_calculations\", \"false\");\n    } else {\n      formData.append(\"update_calculations\", \"false\");\n    }\n\n    if (\n      this.editProductForm.valid &&\n      this.threeSoldLimit == \"0\" &&\n      this.minThreeSoldLimitError == \"0\"\n    ) {\n      this.salesManagementService\n        .edit_product(formData, this.orderId)\n        .subscribe(\n          (response) => {\n            let resData = JSON.parse(JSON.stringify(response));\n\n            if (resData.status_code == 200) {\n              this.editmodal.hide();\n              this.toastr.success(\"\", \"Product updated successfully!\");\n              this.rerender();\n              this.editProductForm.reset();\n              this.afterEdit = true;\n              this.editProductSubmitted = false;\n            } else {\n              this.editmodal.hide();\n              this.toastr.error(\"\", resData.message);\n              this.editProductForm.reset();\n            }\n          },\n          (err) => {\n            this.editmodal.hide();\n            this.toastr.error(\"\", err.error.message);\n            this.editProductForm.reset();\n          }\n        );\n    }\n  }\n\n  changeId(Id) {\n    this.productId = Id;\n  }\n\n  submitAmountToApply() {\n    var data: Array<any> = [];\n\n    this.creditMemoList.forEach((element) => {\n      if (element.amountToApply && element.checked) {\n        data.push({\n          cm_id: element.id,\n          credit_applied: parseFloat(element.amountToApply),\n        });\n      }\n    });\n\n    var total = data.reduce((a, b) => a + b.credit_applied, 0);\n\n    if (data.length == 0) {\n      this.toastr.error(\"\", \"Please Select Atleast One Credit Memo!\");\n    } else if (this.totalAmount < total) {\n      this.toastr.error(\n        \"\",\n        \"Credit applied amount should not be greater than the invoice amount!\"\n      );\n    } else {\n      var formData = new FormData();\n\n      formData.append(\"credit_applied_order_id\", this.orderId);\n      formData.append(\"credit_memo_list\", JSON.stringify(data));\n\n      this.salesManagementService.applyCredit(formData).subscribe(\n        (response) => {\n          let resData = JSON.parse(JSON.stringify(response));\n\n          if (resData.status_code == 200) {\n            this.applyCreditModal.hide();\n\n            this.toastr.success(\"\", \"Credit Applied successfully!\");\n\n            this.rerenderCreditMemo();\n\n            this.rerender();\n          } else {\n            this.toastr.error(\"\", resData.message);\n          }\n        },\n        (err) => {\n          this.toastr.error(\"\", err.error.mesaage);\n        }\n      );\n    }\n  }\n\n  deleteProduct() {\n    var formData = new FormData();\n    formData.append(\"order_quantity_id\", this.productId);\n\n    this.salesManagementService.delete_product(formData).subscribe(\n      (response) => {\n        let resData = JSON.parse(JSON.stringify(response));\n        if (resData.status_code == 200) {\n          this.deleteModal.hide();\n          this.toastr.success(\"\", \"Product deleted successfully!\");\n          this.rerender();\n        } else {\n          this.toastr.error(\"\", resData.message);\n        }\n      },\n      (err) => {\n        this.toastr.error(\"\", err.error.mesaage);\n      }\n    );\n  }\n\n  openEditModel(productData, productId) {\n    this.editmodal.show();\n    this.salesManagementService.getProduct(productId).subscribe((response) => {\n      let resData = JSON.parse(JSON.stringify(response));\n\n      this.editProductId = resData.data.product;\n\n      this.quantityEditValue = resData.data.quantity;\n      this.orderAmountEditValue = resData.data.price;\n      this.discountEditValue = resData.data.discount;\n\n      this.editProductForm.patchValue({\n        quantity: resData.data.quantity,\n        order_amount: resData.data.price,\n        discount: resData.data.discount,\n        final_amount: resData.data.product_amount,\n        order_quantity_id: resData.data.id,\n      });\n      if (resData.data.order_product_name != null) {\n        this.productNameEditValue = resData.data.order_product_name;\n\n        this.editProductForm.patchValue({\n          product_name: resData.data.order_product_name,\n        });\n      } else {\n        this.productNameEditValue = resData.data.name;\n\n        this.editProductForm.patchValue({\n          product_name: resData.data.name,\n        });\n      }\n    });\n    //   if (resData.status_code == 200) {\n    //     var data = resData.data;\n    this.threeSoldLimit = \"0\";\n    this.minThreeSoldLimitError = \"0\";\n\n    this.selectedCategory = productData.category_id || \"\";\n    this.selectedVendor = productData.vendor_id || \"\";\n    this.selectedProduct = productData.product_id;\n    this.selectedPacksize = productData.pack_size_id || \"\";\n\n    this.changeVendor();\n    //   } else {\n    //     this.toastr.error('', resData.message);\n    //   }\n    // },\n    //   err => {\n    //     this.toastr.error('', err.error.message);\n    //   });\n  }\n\n  printDeliveryReceipt() {\n    var formData = new FormData();\n    formData.append(\"invoice_no\", this.orderData.invoice_no);\n\n    this.salesManagementService.getDeliveryReceipt(formData).subscribe(\n      (result) => {\n        window.open(result.data.pdf_url);\n      },\n      (err) => {\n        this.toastr.error(\"\", err.error.message);\n      }\n    );\n  }\n\n  printPage() {\n    //window.print();\n    // print pdf\n\n    var formData = new FormData();\n    formData.append(\"invoice_no\", this.orderData.invoice_no);\n\n    this.salesManagementService.getInvoicePdf(formData).subscribe(\n      (result) => {\n        // It is necessary to create a new blob object with mime-type explicitly set\n        // otherwise only Chrome works like it should\n        // const newBlob = new Blob([(resultBlob)], { type: 'application/pdf' });\n\n        // // IE doesn't allow using a blob object directly as link href\n        // // instead it is necessary to use msSaveOrOpenBlob\n        // if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n        //   window.navigator.msSaveOrOpenBlob(newBlob);\n        //   return;\n        // }\n\n        // const downloadURL = URL.createObjectURL(newBlob);\n        window.open(result.data.pdf_url);\n      },\n      (err) => {\n        this.toastr.error(\"\", err.error.message);\n      }\n    );\n\n    //printJS({printable:'https://vadimdez.github.io/ng2-pdf-viewer/assets/pdf-test.pdf', type:'pdf', showModal:false})\n  }\n\n  chnageValue(type) {\n    this.finalAmount =\n      type == 1\n        ? this.orderAmount -\n          this.addProductForm.controls.discount.value *\n            this.addProductForm.controls.quantity.value\n        : Math.round(\n            this.editProductForm.controls.order_amount.value *\n              this.editProductForm.controls.quantity.value *\n              100\n          ) /\n            100 -\n          this.editProductForm.controls.discount.value *\n            this.editProductForm.controls.quantity.value;\n  }\n\n  changeOrderAmount(type) {\n    this.chnageValue(type);\n    this.threeSoldLimit =\n      this.finalAmount > this.maxThreeSoldLimit\n        ? \"Order amount is higher than thresold limit.\"\n        : \"0\";\n    this.minThreeSoldLimitError =\n      this.finalAmount < this.minThreeSoldLimit\n        ? \"Order amount is lower than thresold limit.\"\n        : \"0\";\n  }\n\n  getVendorData() {\n    this.salesManagementService.getVendors(\"\").subscribe(\n      (response) => {\n        let resData = JSON.parse(JSON.stringify(response));\n\n        if (resData.status_code == 200) {\n          this.vendorData = resData.data;\n          this.selectedVendor = this.vendorData[0].id;\n          this.addProductForm.value.vendor = this.vendorData[0].id;\n        } else {\n          this.toastr.error(\"\", resData.message);\n        }\n      },\n      (err) => {\n        this.toastr.error(\"\", err.error.message);\n      }\n    );\n  }\n\n  exportTable(type) {\n    this.datatbaleData.page = \"1\";\n    this.datatbaleData.limit = \"100000\";\n    this.salesManagementService\n      .getOrder(this.orderId, this.datatbaleData)\n      .subscribe(\n        (response) => {\n          let resData = JSON.parse(JSON.stringify(response));\n\n          if (resData.status_code == 200) {\n            const onlyNameAndSymbolArr = resData.data.products_list.map(\n              (x) => ({\n                \"Product Name\": x.order_product_name\n                  ? x.order_product_name\n                  : x.product_name,\n                \"Item Number\": x.item_no || \"-\",\n                \"Category Name\": x.category_name || \"-\",\n                Quantity: x.quantity || \"0\",\n                Price: x.order_price ? \"$ \" + x.order_price : \"$0\",\n                Discount: x.discount ? \"$ \" + x.discount : \"$0\",\n                \"Order Amount\": x.final_order_amount\n                  ? \"$ \" + x.final_order_amount\n                  : \"$0\",\n              })\n            );\n\n            if (type == \"pdf\") {\n              if (onlyNameAndSymbolArr.length > 0) {\n                var keys = [Object.keys(onlyNameAndSymbolArr[0])];\n                var values = onlyNameAndSymbolArr.map((element) =>\n                  Object.values(element)\n                );\n                this.commonService.exportArrayPDF(keys, values, \"productList\");\n              } else {\n                this.toastr.error(\"\", \"No Data Found !\");\n                $(\"#myDropdown\").toggle();\n              }\n            } else {\n              this.commonService.exportCsv(\n                resData.data,\n                onlyNameAndSymbolArr,\n                \"productList\"\n              );\n            }\n          } else {\n            this.toastr.error(\"\", resData.message);\n          }\n        },\n        (err) => {\n          this.toastr.error(\"\", err.error.message);\n        }\n      );\n  }\n\n  printPoPage() {\n    //window.print();\n    // print pdf\n\n    // var formData = new FormData();\n    // formData.append(\"invoice_no\", this.orderData.invoice_no);\n\n    this.salesManagementService.getOrderPDF(this.orderId).subscribe(\n      (response) => {\n        // It is necessary to create a new blob object with mime-type explicitly set\n        // otherwise only Chrome works like it should\n\n        // const newBlob = new Blob([(resultBlob)], { type: 'application/pdf' });\n\n        // IE doesn't allow using a blob object directly as link href\n        // instead it is necessary to use msSaveOrOpenBlob\n        // if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n        //   window.navigator.msSaveOrOpenBlob(newBlob);\n        //   return;\n        // }\n\n        // For other browsers:\n        // Create a link pointing to the ObjectURL containing the blob.\n        // const downloadURL = URL.createObjectURL(newBlob);\n        window.open(response.data.pdf_url);\n      },\n      (err) => {\n        this.toastr.error(\"\", err.error.message);\n      }\n    );\n\n    //printJS({printable:'https://vadimdez.github.io/ng2-pdf-viewer/assets/pdf-test.pdf', type:'pdf', showModal:false})\n  }\n\n  goPreviousUrl() {\n    this.location.back();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { OrderInvoiceComponent } from './order-invoice/order-invoice.component';\nimport { SalesManagementComponent } from './sales-management.component';\nimport { StatusOrderComponent } from './status-order/status-order.component';\nimport { UpdatePaymentReceivedComponent } from './update-payment-received/update-payment-received.component';\n\nconst routes: Routes = [ \n  {\n    path: '',\n    data: {\n      title: 'Sales'\n    },\n    children: [\n      {\n        path: '',\n        component: SalesManagementComponent,\n        data: {\n          title: 'List'\n        }\n      },\n      {\n        path: 'status-order',\n        component: StatusOrderComponent,\n        data: {\n          title: 'Status Order'\n        }\n      },\n      {\n        path: 'order-invoice',\n        component: OrderInvoiceComponent,\n        data: {\n          title: 'Order Invoice'\n        }\n      },\n      {\n        path: 'update-payment-received',\n        component: UpdatePaymentReceivedComponent,\n        data: {\n          title: 'Update Payment Received'\n        }\n      },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SalesManagementRoutingModule { }\n","import {\n  Component,\n  OnInit,\n  TemplateRef,\n  ViewChild,\n  AfterViewInit,\n  OnDestroy,\n} from \"@angular/core\";\nimport { Title } from \"@angular/platform-browser\";\nimport { DataTableDirective } from \"angular-datatables\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { SalesManagementService } from \"../../shared/services/sales-management.service\";\nimport { Subject } from \"rxjs\";\nimport { DatePipe } from \"@angular/common\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport printJS from \"print-js\";\nimport { PrintService } from \"ng-thermal-print\";\nimport { FileSaver } from \"file-saver\";\nimport { CommonService } from \"../../shared/services/common.service\";\n\n@Component({\n  selector: \"app-sales-management\",\n  templateUrl: \"./sales-management.component.html\",\n  styles: [\n    `\n      .anchor-tag {\n        color: #23282c;\n        text-decoration: none !important;\n      }\n    `,\n  ],\n})\nexport class SalesManagementComponent\n  implements AfterViewInit, OnDestroy, OnInit\n{\n  dashboardData: any;\n  @ViewChild(DataTableDirective)\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  salesList: Array<any>;\n  salesId: any;\n  selectedFromDate: any;\n  selectedToDate: any;\n  selectedMode: string = \"CASH\";\n  selectedFromDueDate: any;\n  selectedToDueDate: any;\n  selectedCustomerName: string = \"\";\n  selectedOrderStatus: string = \"\";\n  selectedVerificationStatus: string = \"\";\n  selectedPaymentStatus: string = \"\";\n  selectedStoreName: string = \"\";\n  status: boolean = false;\n  dashboardCommonData: any;\n  datatbaleData: any;\n  firstTimeSearch: boolean = false;\n  firstTime: boolean = false;\n  tableLimit: number;\n  searchValue: string = \"\";\n\n  constructor(\n    private titleService: Title,\n    private toastr: ToastrService,\n    private salesManagementService: SalesManagementService,\n    private datePipe: DatePipe,\n    private route: ActivatedRoute,\n    private printService: PrintService,\n    public commonService: CommonService\n  ) {}\n\n  ngOnInit(): void {\n    this.titleService.setTitle(\"Sales Management\");\n    this.route.queryParams.subscribe((param) => {\n      this.selectedOrderStatus = param.order_status || \"\";\n      this.selectedVerificationStatus = param.vs || \"\";\n      this.selectedOrderStatus = param.os || \"\";\n      this.selectedStoreName = param.sn || \"\";\n      this.selectedPaymentStatus = param.ps || \"\";\n      this.selectedFromDueDate = param.fdd || \"\";\n      this.selectedToDueDate = param.tdd || \"\";\n      this.selectedFromDate = param.fd || \"\";\n      this.selectedToDate = param.td || \"\";\n      this.tableLimit = param.limit;\n      this.firstTimeSearch = param.firstTime || false;\n      this.searchValue = param.search || \"\";\n      this.firstTime = param.firstTime || false;\n    });\n    this.getSalesList();\n    this.getSalesDashboardData();\n  }\n\n  getSalesList() {\n    this.dtOptions = {\n      pagingType: \"full_numbers\",\n      pageLength: 25,\n      order: [0, \"desc\"],\n      serverSide: true,\n      scrollY: \"450px\",\n      scrollX: true,\n      scrollCollapse: true,\n      searchDelay: 1300,\n      processing: true,\n      ajax: (dataTablesParameters: any, callback) => {\n        dataTablesParameters.page =\n          parseInt(dataTablesParameters.start) /\n            parseInt(dataTablesParameters.length) +\n          1;\n        dataTablesParameters.limit = dataTablesParameters.length;\n        // dataTablesParameters.search_param = dataTablesParameters.search.value;\n        dataTablesParameters.draw == 1 && this.firstTime\n          ? (dataTablesParameters.limit = Number(this.tableLimit))\n          : \"\";\n        dataTablesParameters.draw == 1 && this.firstTime\n          ? (dataTablesParameters.length = Number(this.tableLimit))\n          : \"\";\n\n        if (!this.firstTime) {\n          dataTablesParameters.search_param = dataTablesParameters.search.value;\n          this.searchValue = dataTablesParameters.search.value;\n        } else if (this.firstTime) {\n          dataTablesParameters.search_param = this.searchValue;\n          $(\".dataTables_filter input\").val(this.searchValue);\n          this.firstTime = false;\n        }\n\n        this.tableLimit = dataTablesParameters.limit;\n        $(\".dataTables_wrapper .dataTables_length label select\").val(\n          this.tableLimit\n        );\n\n        // filter\n        dataTablesParameters.order[0].column == 0\n          ? (dataTablesParameters.created_at =\n              dataTablesParameters.order[0].column == 0 &&\n              dataTablesParameters.order[0].dir == \"asc\"\n                ? \"created_at\"\n                : \"-created_at\")\n          : \"\";\n        dataTablesParameters.order[0].column == 1\n          ? (dataTablesParameters.invoice_no =\n              dataTablesParameters.order[0].column == 1 &&\n              dataTablesParameters.order[0].dir == \"asc\"\n                ? \"invoice_no\"\n                : \"-invoice_no\")\n          : \"\";\n        dataTablesParameters.order[0].column == 2\n          ? (dataTablesParameters.po_num =\n              dataTablesParameters.order[0].column == 2 &&\n              dataTablesParameters.order[0].dir == \"asc\"\n                ? \"po_num\"\n                : \"-po_num\")\n          : \"\";\n        dataTablesParameters.order[0].column == 3\n          ? (dataTablesParameters.customer__store_name =\n              dataTablesParameters.order[0].column == 3 &&\n              dataTablesParameters.order[0].dir == \"asc\"\n                ? \"customer__store_name\"\n                : \"-customer__store_name\")\n          : \"\";\n        dataTablesParameters.order[0].column == 4\n          ? (dataTablesParameters.due_date =\n              dataTablesParameters.order[0].column == 4 &&\n              dataTablesParameters.order[0].dir == \"asc\"\n                ? \"due_date\"\n                : \"-due_date\")\n          : \"\";\n        dataTablesParameters.order[0].column == 5\n          ? (dataTablesParameters.amount =\n              dataTablesParameters.order[0].column == 5 &&\n              dataTablesParameters.order[0].dir == \"asc\"\n                ? \"amount\"\n                : \"-amount\")\n          : \"\";\n        dataTablesParameters.order[0].column == 6\n          ? (dataTablesParameters.status =\n              dataTablesParameters.order[0].column == 6 &&\n              dataTablesParameters.order[0].dir == \"asc\"\n                ? \"status\"\n                : \"-status\")\n          : \"\";\n        // dataTablesParameters.order[0].column == 7 ? dataTablesParameters.verfication_status = (dataTablesParameters.order[0].column == 7 && dataTablesParameters.order[0].dir == \"asc\") ? (\"verfication_status\") : (\"-verfication_status\") : \"\";\n        dataTablesParameters.order[0].column == 7\n          ? (dataTablesParameters.amount_recieved =\n              dataTablesParameters.order[0].column == 7 &&\n              dataTablesParameters.order[0].dir == \"asc\"\n                ? \"amount_recieved\"\n                : \"-amount_recieved\")\n          : \"\";\n        dataTablesParameters.order[0].column == 8\n          ? (dataTablesParameters.remaining_amount =\n              dataTablesParameters.order[0].column == 8 &&\n              dataTablesParameters.order[0].dir == \"asc\"\n                ? \"remaining_amount\"\n                : \"-remaining_amount\")\n          : \"\";\n        dataTablesParameters.order[0].column == 9\n          ? (dataTablesParameters.order_profit =\n              dataTablesParameters.order[0].column == 9 &&\n              dataTablesParameters.order[0].dir == \"asc\"\n                ? \"order_profit\"\n                : \"-order_profit\")\n          : \"\";\n        dataTablesParameters.order[0].column == 10\n          ? (dataTablesParameters.order_profit_percentage =\n              dataTablesParameters.order[0].column == 10 &&\n              dataTablesParameters.order[0].dir == \"asc\"\n                ? \"order_profit_percentage\"\n                : \"-order_profit_percentage\")\n          : \"\";\n        dataTablesParameters.order[0].column == 11\n          ? (dataTablesParameters.payment_status =\n              dataTablesParameters.order[0].column == 11 &&\n              dataTablesParameters.order[0].dir == \"asc\"\n                ? \"payment_status\"\n                : \"-payment_status\")\n          : \"\";\n        dataTablesParameters.order[0].column == 12\n          ? (dataTablesParameters.salesman =\n              dataTablesParameters.order[0].column == 12 &&\n              dataTablesParameters.order[0].dir == \"asc\"\n                ? \"salesman\"\n                : \"-salesman\")\n          : \"\";\n\n        // filters\n        dataTablesParameters.filter_verification_status =\n          this.selectedVerificationStatus;\n        dataTablesParameters.filter_order_status = this.selectedOrderStatus;\n        dataTablesParameters.filter_store_name = this.selectedStoreName;\n        // dataTablesParameters.filter_customer_name = this.selectedCustomerName;\n        dataTablesParameters.filter_payment_status = this.selectedPaymentStatus;\n        dataTablesParameters.filter_due_date_start = this.datePipe.transform(\n          this.selectedFromDueDate,\n          \"yyyy-MM-dd\"\n        );\n        dataTablesParameters.filter_due_date_end = this.datePipe.transform(\n          this.selectedToDueDate,\n          \"yyyy-MM-dd\"\n        );\n        dataTablesParameters.filter_from_date = this.datePipe.transform(\n          this.selectedFromDate,\n          \"yyyy-MM-dd\"\n        );\n        dataTablesParameters.filter_to_date = this.datePipe.transform(\n          this.selectedToDate,\n          \"yyyy-MM-dd\"\n        );\n        this.datatbaleData = dataTablesParameters;\n\n        this.salesManagementService.orderList(dataTablesParameters).subscribe(\n          (respones) => {\n            let resData = JSON.parse(JSON.stringify(respones));\n            if (resData.status_code == 200) {\n              this.salesList = resData.data;\n              this.dashboardData = resData.count_data;\n\n              setTimeout(() => {\n                var table = $(\"#excel-table\").DataTable();\n\n                table.columns.adjust();\n\n                document.getElementById(\"last-header\").style.width = \"auto\";\n              }, 10);\n\n              callback({\n                recordsTotal: resData.total_record,\n                recordsFiltered:\n                  dataTablesParameters.search_param == \"\" &&\n                  dataTablesParameters.filter_verification_status == \"\" &&\n                  dataTablesParameters.filter_order_status == \"\" &&\n                  dataTablesParameters.filter_store_name == \"\" &&\n                  dataTablesParameters.filter_payment_status == \"\"\n                    ? resData.total_record\n                    : resData.filter_record,\n                data: [],\n              });\n            } else {\n              this.toastr.error(\"\", resData.message);\n            }\n          },\n          (err) => {\n            this.toastr.error(\"\", err.error.message);\n          }\n        );\n      },\n      columns: [\n        { data: \"created_at\", searchable: false, orderable: true },\n        { data: \"invoice_no\", searchable: true, orderable: true },\n        { data: \"po_num\", searchable: true, orderable: true },\n        // { data: 'customer_name', searchable: true, orderable: false },\n        { data: \"store_name\", searchable: true, orderable: true },\n        { data: \"due_date\", searchable: false, orderable: true },\n        { data: \"amount\", searchable: false, orderable: true },\n        { data: \"status\", searchable: false, orderable: true },\n        // { data: 'verfication_status', searchable: true, orderable: true },\n        { data: \"amount_recieved\", searchable: false, orderable: true },\n        { data: \"remaining_amount\", searchable: false, orderable: true },\n        { data: \"order_profit\", searchable: false, orderable: true },\n        { data: \"order_profit_percentage\", searchable: false, orderable: true },\n        { data: \"payment_status\", searchable: false, orderable: true },\n        { data: \"salesman\", searchable: true, orderable: true },\n        { data: \"action\", searchable: false, orderable: false },\n      ],\n    };\n  }\n\n  getSalesDashboardData() {\n    this.salesManagementService.getDashoardInfo().subscribe(\n      (response) => {\n        let resData = JSON.parse(JSON.stringify(response));\n\n        if (resData.status_code == 200) {\n          this.dashboardCommonData = resData.data;\n        } else {\n          this.toastr.error(\"\", resData.message);\n        }\n      },\n      (err) => {\n        this.toastr.error(\"\", err.error.message);\n      }\n    );\n  }\n\n  ngAfterViewInit(): void {\n    this.dtTrigger.next();\n  }\n\n  ngOnDestroy(): void {\n    this.dtTrigger.unsubscribe();\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      dtInstance.destroy();\n      this.dtTrigger.next();\n    });\n  }\n\n  printPage(invoiceNo) {\n    // check printer attached with computer or not\n    this.printService.isConnected.subscribe((result) => {\n      this.status = result;\n\n      // if (result) {\n      //   console.log('Connected to printer!!!');\n      // } else {\n      //   console.log('Not connected to printer.');\n      // }\n    });\n\n    var formData = new FormData();\n    formData.append(\"invoice_no\", invoiceNo);\n\n    this.salesManagementService.getInvoicePdf(formData).subscribe(\n      (resultBlob: Blob) => {\n        // It is necessary to create a new blob object with mime-type explicitly set\n        // otherwise only Chrome works like it should\n        const newBlob = new Blob([resultBlob], { type: \"application/pdf\" });\n\n        // IE doesn't allow using a blob object directly as link href\n        // instead it is necessary to use msSaveOrOpenBlob\n        if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n          window.navigator.msSaveOrOpenBlob(newBlob);\n          return;\n        }\n\n        // For other browsers:\n        // Create a link pointing to the ObjectURL containing the blob.\n        const downloadURL = URL.createObjectURL(newBlob);\n        window.open(downloadURL);\n      },\n      (err) => {\n        this.toastr.error(\"\", err.error.message);\n      }\n    );\n\n    // print pdf\n    //printJS({printable:'https://vadimdez.github.io/ng2-pdf-viewer/assets/pdf-test.pdf', type:'pdf', showModal:false})\n  }\n\n  exportTable(type) {\n    this.datatbaleData.page = \"1\";\n    this.datatbaleData.limit = \"100000\";\n    this.salesManagementService.orderList(this.datatbaleData).subscribe(\n      (response) => {\n        let resData = JSON.parse(JSON.stringify(response));\n\n        if (resData.status_code == 200) {\n          const onlyNameAndSymbolArr = resData.data.map((x) => ({\n            \"Order Date\": this.datePipe.transform(x.created_at, \"MM-dd-yyyy\"),\n            \"Invoice No\": x.invoice_no || \"-\",\n            \"PO No\": x.po_num || \"-\",\n            \"Store Name\": x.store_name || \"-\",\n            \"Payment Due Date\": this.datePipe.transform(\n              x.due_date,\n              \"MM-dd-yyyy\"\n            ),\n            \"Order Amount\": x.amount || \"-\",\n            \"Order Status\": x.status || \"-\",\n            \"Order Verification\": x.verfication_status\n              ? \"Verified\"\n              : \"Not Verified\",\n            \"Order Delivered\": x.delivered_status\n              ? \"Delivered\"\n              : \"Not Delivered\",\n            \"Order Amount Received\": x.amount_recieved || \"$0\",\n            \"Open Balance\": x.payment_status || \"$0\",\n            Profit: x.order_profit || \"$0\",\n            \"Profit Percentage\": x.order_profit_percentage || \"$0\",\n            Salesman: x.salesman || \"-\",\n          }));\n\n          if (type == \"pdf\") {\n            if (onlyNameAndSymbolArr.length > 0) {\n              var keys = [Object.keys(onlyNameAndSymbolArr[0])];\n              var values = onlyNameAndSymbolArr.map((element) =>\n                Object.values(element)\n              );\n              this.commonService.exportArrayPDF(keys, values, \"salesList\");\n            } else {\n              this.toastr.error(\"\", \"No Data Found !\");\n              $(\"#myDropdown\").toggle();\n            }\n          } else {\n            this.commonService.exportCsv(\n              resData.data,\n              onlyNameAndSymbolArr,\n              \"salesList\"\n            );\n          }\n        } else {\n          this.toastr.error(\"\", resData.message);\n        }\n      },\n      (err) => {\n        this.toastr.error(\"\", err.error.message);\n      }\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport { SalesManagementComponent } from './sales-management.component';\nimport { SalesManagementRoutingModule } from './sales-management-routing.module';\nimport { DataTablesModule } from 'angular-datatables';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { StatusOrderComponent } from './status-order/status-order.component';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { OrderInvoiceComponent } from './order-invoice/order-invoice.component';\nimport { SalesManagementService } from '../../shared/services/sales-management.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxPrintModule } from 'ngx-print';\nimport { ThermalPrintModule } from 'ng-thermal-print'; //add this line\nimport { UpdatePaymentReceivedComponent } from './update-payment-received/update-payment-received.component';\nimport { PaymentReceivedService } from '../../shared/services/payment-received.service';\n\n@NgModule({\n  declarations: [SalesManagementComponent, StatusOrderComponent, OrderInvoiceComponent, UpdatePaymentReceivedComponent],\n  imports: [\n    CommonModule,\n    SalesManagementRoutingModule,\n    DataTablesModule,\n    BsDatepickerModule.forRoot(),\n    PerfectScrollbarModule,\n    ModalModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxPrintModule,\n    ThermalPrintModule\n  ],\n  providers: [\n    SalesManagementService,\n    DatePipe,\n    PaymentReceivedService\n  ]\n})\nexport class SalesManagementModule { }\n","import { Component, OnInit, TemplateRef, ViewChild, AfterViewInit, OnDestroy } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport { DataTableDirective } from 'angular-datatables';\nimport { ToastrService } from 'ngx-toastr';\nimport { SalesManagementService } from '../../../shared/services/sales-management.service';\nimport { Subject } from 'rxjs';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Validations } from '../../../shared/validators/Validations';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common'\nimport printJS from 'print-js';\nimport { PrintService } from 'ng-thermal-print';\n\n@Component({\n  selector: 'app-status-order',\n  templateUrl: './status-order.component.html',\n})\nexport class StatusOrderComponent implements AfterViewInit, OnDestroy, OnInit {\n\n  @ViewChild(DataTableDirective)\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  productList: Array<any> = [];\n  orderId: any;\n  orderData: any;\n  print: any;\n  status: boolean = false;\n\n  constructor(\n    private titleService: Title,\n    private toastr: ToastrService,\n    private salesManagementService: SalesManagementService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private location: Location,\n    private printService: PrintService\n  ) { }\n\n  ngOnInit(): void {\n    this.titleService.setTitle(\"Complete Status Order\");\n\n    this.route.queryParams.subscribe(param => {\n      this.orderId = param.id;\n      this.print = param.print;\n    });\n\n    this.getOrderData();\n  }\n\n  getOrderData() {\n    this.dtOptions = {\n      pagingType: 'full_numbers',\n      pageLength: this.print == 1 ? 100 : 10,\n      order: [1, 'desc'],\n      serverSide: true,\n      processing: true,\n      ajax: (dataTablesParameters: any, callback) => {\n        dataTablesParameters.page = parseInt(dataTablesParameters.start) / parseInt(dataTablesParameters.length) + 1;\n        dataTablesParameters.limit = dataTablesParameters.length;\n        dataTablesParameters.search_params = dataTablesParameters.search.value;\n        dataTablesParameters.product_name = (dataTablesParameters.order[0].column == 0 && dataTablesParameters.order[0].dir == \"asc\") ? (\"product_name\") : (\"-product_name\");\n        this.salesManagementService\n          .getOrder(this.orderId, dataTablesParameters)\n          .subscribe(\n            respones => {\n              let resData = JSON.parse(JSON.stringify(respones));\n              if (resData.status_code == 200) {\n                this.productList = resData.data.products_list;\n                this.orderData = resData.data;\n\n                setTimeout(() => {\n                  if (this.print == 1) {\n                    this.printPage();\n                  }\n                }, 1000)\n\n                callback({\n                  recordsTotal: resData.data.total_record,\n                  recordsFiltered: resData.data.filter_record,\n                  data: []\n                });\n              } else {\n                this.toastr.error('', resData.message);\n              }\n\n            },\n            err => {\n              this.toastr.error('', err.error.message);\n            }\n          );\n      },\n      columns: [\n        { data: 'product_name', searchable: true, orderable: true },\n        { data: 'quantity', searchable: true, orderable: false },\n        { data: 'sales_rate', searchable: true, orderable: true },\n        { data: 'order_price', searchable: true, orderable: true },\n        { data: 'discount', searchable: true, orderable: false },\n        { data: 'final_order_amount', searchable: false, orderable: false }]\n    };\n  }\n\n  ngAfterViewInit(): void {\n    this.dtTrigger.next();\n    // setTimeout(() => {\n    //   if (this.print == 1) {\n    //     this.printPage();\n    //   }\n    // }, 1000)\n  }\n\n  printPage() {\n\n    // print cuurent page\n    window.print();\n    setTimeout(() => {\n      if (this.print == 1) {\n        this.location.back();\n      }\n    }, 500)\n\n    // check printer attached with computer or not\n    this.printService.isConnected.subscribe(result => {\n      this.status = result;\n\n      // if (result) {\n      //   console.log('Connected to printer!!!');\n      // } else {\n      //   console.log('Not connected to printer.');\n      // }\n    });\n\n    // print pdf\n    // printJS({printable:'https://vadimdez.github.io/ng2-pdf-viewer/assets/pdf-test.pdf', type:'pdf', showModal:true})\n  }\n\n  ngOnDestroy(): void {\n    this.dtTrigger.unsubscribe();\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      dtInstance.destroy();\n      this.dtTrigger.next();\n    });\n  }\n\n}\n","import { Component, OnInit, TemplateRef, ViewChild, AfterViewInit, OnDestroy } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { RxwebValidators } from \"@rxweb/reactive-form-validators\";\nimport { DataTableDirective } from 'angular-datatables';\nimport { Subject } from 'rxjs';\nimport { DatePipe, Location } from '@angular/common';\nimport { PaymentReceivedService } from '../../../shared/services/payment-received.service';\nimport { CommonService } from '../../../shared/services/common.service';\n\n@Component({\n  selector: 'app-update-payment-received',\n  templateUrl: './update-payment-received.component.html',\n})\nexport class UpdatePaymentReceivedComponent implements AfterViewInit, OnDestroy, OnInit {\n\n  @ViewChild('addmodal') public addmodal: ModalDirective;\n  @ViewChild('editmodal') public editmodal: ModalDirective;\n  @ViewChild(DataTableDirective)\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  paymentData: any;\n  customerId: any;\n  payment_date: string = '';\n  addPaymentReceivedForm: FormGroup;\n  submittedPaymentReceived: boolean = false;\n  addPaymentMethodForm: FormGroup;\n  submittedMethodReceived: boolean = false;\n  disableCheckboxes: boolean = false;\n  imageUrl: string = \"\";\n  selectedMode: string = \"CASH\";\n  orderList: Array<any>;\n  orderData: any;\n  ammountReceivedValue: number = null;\n  amountRecievedMessage: string = \"\";\n  calculatedReceivedAmount: number;\n  showPaymentMessage: boolean = false;\n  showClearPaymentButton: boolean = false;\n  tickedAmount: number = 0;\n  amountToApply: number = 0;\n  allorderData: any;\n  allPaymentData: any = [];\n  stage1PaymentData: any = [];\n  firstStep: number = 0;\n  datatableParams: any;\n\n  constructor(\n    private titleService: Title,\n    private location: Location,\n    private toastr: ToastrService,\n    private paymentReceivedService: PaymentReceivedService,\n    private router: Router,\n    public commonService: CommonService,\n    private route: ActivatedRoute,\n    private datePipe: DatePipe\n  ) { }\n\n  ngOnInit(): void {\n    this.titleService.setTitle(\"Update Payement Received\");\n\n    this.route.queryParams.subscribe(param => {\n      this.customerId = param.id;\n      this.payment_date = param.payment_date;\n    });\n\n    this.addPaymentReceivedForm = new FormGroup({\n      customer_name: new FormControl('', [\n        Validators.required\n      ]),\n      email: new FormControl('', [\n        Validators.required\n      ]),\n      phone: new FormControl('', [\n        Validators.required\n      ]),\n      payment_due_date: new FormControl('', [\n        Validators.required\n      ])\n    });\n\n    this.addPaymentMethodForm = new FormGroup({\n      mode: new FormControl('', [\n        Validators.required\n      ]),\n      cheque_no: new FormControl('', [\n        //Validators.required\n      ]),\n      bank_name: new FormControl('', [\n        //Validators.required\n      ]),\n      ammount_received: new FormControl('', [\n        Validators.required\n      ]),\n      image: new FormControl('', [\n        RxwebValidators.extension({\n          extensions: [\"png\", \"jpg\", \"jpeg\", \"emf\", \"jpe\", \"jfif\", \"bmp\", \"gif\", \"wmf\", \"dib\", \"tif\", \"tiff\", 'pdf']\n        })\n      ]),\n      imageSource: new FormControl('')\n    });\n\n    this.getPaymentInfo();\n    this.getOrderList();\n  }\n\n  getOrderList() {\n    this.dtOptions = {\n      pagingType: 'full_numbers',\n      pageLength: 100,\n      order: [1, 'asc'],\n      serverSide: true,\n      processing: true,\n      searchDelay: 1300,\n      ajax: (dataTablesParameters: any, callback) => {\n        dataTablesParameters.page = parseInt(dataTablesParameters.start) / parseInt(dataTablesParameters.length) + 1;\n        dataTablesParameters.limit = dataTablesParameters.length;\n        dataTablesParameters.customer_id = this.customerId;\n        dataTablesParameters.created_at = (dataTablesParameters.order[0].column == 0 && dataTablesParameters.order[0].dir == \"asc\") ? (\"created_at\") : (\"-created_at\");\n        dataTablesParameters.invoice_no = (dataTablesParameters.order[0].column == 0 && dataTablesParameters.order[0].dir == \"asc\") ? (\"invoice_no\") : (\"-invoice_no\");\n        dataTablesParameters.due_date = (dataTablesParameters.order[0].column == 0 && dataTablesParameters.order[0].dir == \"asc\") ? (\"due_date\") : (\"-due_date\");\n        dataTablesParameters.amount = (dataTablesParameters.order[0].column == 0 && dataTablesParameters.order[0].dir == \"asc\") ? (\"amount\") : (\"-amount\");\n        dataTablesParameters.amount_recieved = (dataTablesParameters.order[0].column == 0 && dataTablesParameters.order[0].dir == \"asc\") ? (\"amount_recieved\") : (\"-amount_recieved\");\n        dataTablesParameters.remaining_amount = (dataTablesParameters.order[0].column == 0 && dataTablesParameters.order[0].dir == \"asc\") ? (\"remaining_amount\") : (\"-remaining_amount\");\n        dataTablesParameters.open_balance = (dataTablesParameters.order[0].column == 0 && dataTablesParameters.order[0].dir == \"asc\") ? (\"open_balance\") : (\"-open_balance\");\n        dataTablesParameters.for_payment = \"0\";\n        dataTablesParameters.search_params = dataTablesParameters.search.value;\n\n        this.datatableParams = dataTablesParameters;\n        this.paymentReceivedService\n          .displayorder(dataTablesParameters)\n          .subscribe(\n            respones => {\n              let resData = JSON.parse(JSON.stringify(respones));\n              if (resData.status_code == 200) {\n                this.orderList = resData.data.allorder;\n\n                this.orderData = resData.data;\n                // this.calculateAmount(resData.total_record);\n                if (this.ammountReceivedValue > 0) {\n                  var leftAmountReceived = this.ammountReceivedValue;\n                  this.amountToApply = 0;\n                  this.stage1PaymentData = [];\n                  this.orderList.forEach(element => {\n                    if (leftAmountReceived > 0) {\n\n                      // if(leftAmountReceived < element.open_balance){\n                      //   element.payment = element.open_balance - leftAmountReceived;\n                      //   leftAmountReceived = element.open_balance - leftAmountReceived;\n                      // }else{\n                      if (leftAmountReceived > element.open_balance) {\n                        element.payment = leftAmountReceived - element.open_balance;\n                        leftAmountReceived = leftAmountReceived - element.open_balance;\n                      } else {\n                        element.payment = 0;\n                      }\n                      if (element.payment > element.open_balance) {\n                        element.payment = element.open_balance;\n                      }\n\n                      if (element.payment != 0) {\n                        setTimeout(() => {\n                          this.stage1PaymentData.push({\n                            id: element.id,\n                            open_balance: element.open_balance,\n                            payment: parseFloat(element.payment)\n                          });\n                        }, 500);\n                      }\n\n                      this.amountToApply = Number(element.payment) + this.amountToApply;\n                    }\n                  });\n\n                } else {\n                  this.orderList.forEach(element => {\n                    element.payment = 0;\n                  });\n                }\n\n                this.orderList.forEach(element => {\n                  element.checked = false;\n                  element.disabled = true;\n                });\n\n                callback({\n                  recordsTotal: resData.total_record,\n                  recordsFiltered: dataTablesParameters.search_params == \"\" ? resData.total_record : resData.filter_record,\n                  data: []\n                });\n              } else {\n                this.toastr.error('', resData.message);\n              }\n\n            },\n            err => {\n              this.toastr.error('', err.error.message);\n            }\n          );\n      },\n      columns: [\n        { name: 'checkbox', searchable: false, orderable: false },\n        { data: 'created_at', searchable: true, orderable: true },\n        { data: 'invoice_no', searchable: true, orderable: true },\n        { data: 'due_date', searchable: true, orderable: false },\n        { data: 'amount', searchable: true, orderable: false },\n        // { data: 'status', searchable: true, orderable: false },\n        // { data: 'verfication_status', searchable: true, orderable: false },\n        { data: 'amount_recieved', searchable: true, orderable: true },\n        { data: 'open_balance', searchable: true, orderable: true },\n        { data: 'remaining_amount', searchable: true, orderable: false },\n        // { data: 'salesman', searchable: false, orderable: false },\n        // { data: 'action', searchable: false, orderable: false }\n      ]\n    };\n  }\n\n\n  calculateAmount(totalRecord) {\n    var parms = {\n      customer_id: this.customerId,\n      for_payment: '0',\n      limit: totalRecord\n    };\n\n    this.paymentReceivedService.displayorder(parms).subscribe(response => {\n      let resData = JSON.parse(JSON.stringify(response));\n\n      if (resData.status_code == 200) {\n        resData.data.allorder.forEach(element => {\n          //this.amountToApply = this.amountToApply + element.remaining_amount;\n          //this.ammountReceivedValue = this.amountToApply;\n        });\n\n        this.allorderData = resData.data.allorder;\n      }\n      else {\n        this.toastr.error('', resData.message);\n      }\n    },\n      err => {\n        this.toastr.error('', err.error.message);\n      });\n  }\n\n\n  submitAmountReceived() {\n    if (this.amountToApply < this.ammountReceivedValue) {\n      this.allorderData.forEach((element, index) => {\n        this.allorderData[index].remaining_amount = 0;\n      });\n      this.orderList.forEach((element, index) => {\n        this.orderList[index].remaining_amount = 0;\n      });\n      this.amountToApply = 0;\n    }\n  }\n\n\n  ngAfterViewInit(): void {\n    this.dtTrigger.next();\n  }\n\n\n  ngOnDestroy(): void {\n    this.dtTrigger.unsubscribe();\n  }\n\n\n  onImageFileChange(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      if (file) {\n        this.addPaymentMethodForm.patchValue({\n          imageSource: file\n        });\n        const reader = new FileReader();\n        reader.onloadend = (event: any) => {\n          this.imageUrl = event.target.result;\n        };\n        reader.readAsDataURL(event.target.files[0]);\n      }\n    }\n  }\n\n\n  getPaymentInfo() {\n    this.paymentReceivedService.getCustomer(this.customerId).subscribe(response => {\n      let resData = JSON.parse(JSON.stringify(response));\n\n      if (resData.status_code == 200) {\n        this.addPaymentReceivedForm.patchValue({\n          customer_name: resData.data.full_name,\n          email: resData.data.email,\n          phone: resData.data.phone\n        });\n\n        this.addPaymentReceivedForm.patchValue({\n          payment_due_date: new Date(this.payment_date)\n        });\n      }\n      else {\n        this.toastr.error('', resData.message);\n      }\n    },\n      err => {\n        this.toastr.error('', err.error.message);\n      });\n  }\n\n\n  submitAddPaymentReceivedForm() {\n    this.submittedPaymentReceived = true;\n\n    var formData = new FormData();\n    formData.append(\"customer_id\", this.customerId);\n    formData.append(\"payment_date\", this.datePipe.transform(this.addPaymentReceivedForm.controls.payment_due_date.value, 'yyyy-MM-dd'));\n\n    if (this.addPaymentReceivedForm.valid) {\n      this.paymentReceivedService.paymentreceived(formData).subscribe(response => {\n        let resData = JSON.parse(JSON.stringify(response));\n\n        if (resData.status_code == 200) {\n          this.paymentData = resData.data;\n          this.addPaymentMethodForm.patchValue({\n            mode: this.paymentData.method,\n            cheque_no: this.paymentData.reference_no,\n            ammount_received: this.paymentData.amount_recieved\n          });\n          this.submitAmountReceived();\n        } else {\n          this.toastr.error('', resData.message);\n        }\n      },\n        err => {\n          this.toastr.error('', err.error.message);\n        });\n    }\n  }\n\n\n  submitAddPaymentMethodForm() {\n    this.submittedMethodReceived = true;\n\n    if (this.addPaymentMethodForm.controls.ammount_received.value > 0) {\n      // this.rerender();\n\n      var formData = new FormData();\n\n      // formData.append(\"amount_received\", this.addPaymentMethodForm.controls.ammount_received.value);\n      formData.append(\"payment_method\", this.addPaymentMethodForm.controls.mode.value);\n\n      if (this.addPaymentMethodForm.controls.cheque_no.value) {\n        formData.append(\"cheque_no\", this.addPaymentMethodForm.controls.cheque_no.value);\n      }\n\n      if (this.addPaymentMethodForm.get('imageSource').value) {\n        formData.append(\"image\", this.addPaymentMethodForm.get('imageSource').value);\n      }\n\n      formData.append(\"customer_id\", this.customerId);\n\n      var paymentData: Array<any> = [];\n\n      for (let i = 0; i < this.orderList.length; i++) {\n        if (this.orderList[i].payment != \"0\") {\n          paymentData.push({\n            invoice_id: this.orderList[i].id, open_balance: parseFloat(this.orderList[i].open_balance), payment_amount: this.orderList[i].payment, payment_status: this.orderList[i].payment_status\n          });\n        }\n      }\n\n      setTimeout(() => {\n        formData.append(\"paymentData\", JSON.stringify(paymentData));\n        if (this.addPaymentMethodForm.valid) {\n          this.paymentReceivedService.update_payment_history(formData).subscribe(response => {\n            let resData = JSON.parse(JSON.stringify(response));\n\n            if (resData.status_code == 200) {\n              this.toastr.success('', \"Payment details updated successfully!\");\n              this.rerender();\n\n              this.selectedMode = 'CASH';\n              this.submittedMethodReceived = false;\n              this.addPaymentMethodForm.controls.ammount_received.markAsUntouched();\n              this.addPaymentMethodForm.patchValue({ ammount_received: '' })\n              this.showPaymentMessage = false;\n              this.showClearPaymentButton = false;\n              this.calculatedReceivedAmount = 0;\n              this.tickedAmount = 0;\n            } else {\n              this.toastr.error('', resData.message);\n            }\n          },\n            err => {\n              this.toastr.error('', err.error.message);\n            });\n        }\n      }, 1000);\n    }\n  }\n\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      dtInstance.destroy();\n      this.dtTrigger.next();\n    });\n  }\n\n\n  changePaymentValue(paymentValue, orderData, i) {\n    // this.allorderData.forEach(element => {\n    //   if (element.id == orderData.id) {\n    //     let index = this.allorderData.findIndex(x => x.id === orderData.id);\n    //     this.allorderData[index].remaining_amount = Number(paymentValue);\n    //     this.amountToApply = this.amountToApply + Number(paymentValue);\n    //   }\n    // });\n\n    this.amountToApply = 0;\n    this.ammountReceivedValue = 0;\n\n    this.allPaymentData.push({\n      \"orderId\": orderData.id,\n      \"payment\": Number(paymentValue)\n    });\n\n    var amount = [];\n\n    $(\"table tbody tr\").each(function () {\n      var currentRow = $(this);\n      var col1_value = currentRow.find(\"td:eq(6) input\").val();\n      amount.push(col1_value);\n    });\n\n    amount.splice(-1, 1);\n\n    amount.forEach(element => {\n      this.amountToApply = this.amountToApply + Number(element);\n    });\n\n    this.ammountReceivedValue = this.amountToApply;\n  }\n\n\n  changeMode() {\n    if (this.selectedMode != 'CASH') {\n      this.addPaymentMethodForm.get('cheque_no').clearValidators();\n      this.addPaymentMethodForm.get('cheque_no').updateValueAndValidity();\n    }\n    else {\n      this.addPaymentMethodForm.get('cheque_no').setValidators([\n        Validators.required\n      ]);\n\n      this.addPaymentMethodForm.get('cheque_no').updateValueAndValidity();\n    }\n  }\n\n\n  submitPayment() {\n    // var array = [];\n    // this.allorderData.forEach(element => {\n    //   array.push({\n    //     \"orderId\": element.id,\n    //     \"payment\": element.remaining_amount\n    //   });\n    // });\n    if (this.allPaymentData.length != 0) {\n      this.paymentReceivedService.clear_payment(this.allPaymentData).subscribe(response => {\n        let resData = JSON.parse(JSON.stringify(response));\n\n        if (resData.status_code == 200) {\n          this.toastr.success('', resData.message);\n          this.amountToApply = 0;\n          this.rerender();\n\n        } else {\n          this.toastr.error('', resData.message);\n        }\n      },\n        err => {\n          this.toastr.error('', err.error.message);\n        });\n    }\n  }\n\n\n  calculateAmountReceived(checked: boolean, amount: number, index: number) {\n    this.showClearPaymentButton = this.orderList.some(e => {\n      return e.checked;\n    });\n\n    if (checked && this.ammountReceivedValue != null) {\n      this.showPaymentMessage = true;\n\n      this.tickedAmount += amount;\n\n      if (this.ammountReceivedValue - this.tickedAmount < 0) {\n        this.amountRecievedMessage = \"Under payment for invoice number \" + (index + 1);\n        this.calculatedReceivedAmount = (this.ammountReceivedValue - this.tickedAmount) * -1;\n        this.orderList[index].payment_status = \"under\";\n\n        for (let i = 0; i < this.orderList.length; i++) {\n          if (this.orderList[i].payment != this.orderList[index].payment && this.orderList[i].payment != 0) {\n            this.orderList[i].payment_status = \"completed\";\n          }\n        }\n\n        if (amount - (this.ammountReceivedValue - this.tickedAmount) * -1 < 0) {\n          for (let i = 0; i < this.orderList.length; i++) {\n            if (!this.orderList[i].checked) {\n              this.orderList[i].disabled = true;\n            }\n          }\n          this.orderList[index].payment = 0;\n        }\n        else {\n          for (let i = 0; i < this.orderList.length; i++) {\n            this.orderList[i].disabled = false;\n          }\n          this.orderList[index].payment = (amount - (this.ammountReceivedValue - this.tickedAmount) * -1);\n\n          for (let i = 0; i < this.orderList.length; i++) {\n            if (!this.orderList[i].checked) {\n              this.orderList[i].disabled = true;\n            }\n          }\n        }\n      }\n      else if (this.ammountReceivedValue - this.tickedAmount == 0) {\n        this.showPaymentMessage = false;\n        this.orderList[index].payment = amount;\n\n        for (let i = 0; i < this.orderList.length; i++) {\n          if (!this.orderList[i].checked) {\n            this.orderList[i].disabled = true;\n          }\n        }\n      }\n      else {\n        this.amountRecievedMessage = \"Over payment for invoice number \" + (index + 1);\n        this.calculatedReceivedAmount = (this.ammountReceivedValue - this.tickedAmount);\n        this.orderList[index].payment = amount;\n        this.orderList[index].payment_status = \"over\";\n\n        for (let i = 0; i < this.orderList.length; i++) {\n          if (this.orderList[i].payment != this.orderList[index].payment && this.orderList[i].payment != 0) {\n            this.orderList[i].payment_status = \"completed\";\n          }\n        }\n      }\n    }\n    else {\n      this.orderList[index].payment = 0;\n\n      this.tickedAmount -= amount;\n      let lastCheckedIndex: number = null;\n\n      for (let i = 0; i < this.orderList.length; i++) {\n        if (this.orderList[i].checked) {\n          lastCheckedIndex = i;\n        }\n      }\n\n      if (lastCheckedIndex == null) {\n        this.showPaymentMessage = false;\n      }\n      else {\n        this.showPaymentMessage = true;\n      }\n\n      if (this.ammountReceivedValue - this.tickedAmount < 0) {\n        this.amountRecievedMessage = \"Under payment for invoice number \" + (lastCheckedIndex + 1);\n        this.calculatedReceivedAmount = (this.ammountReceivedValue - this.tickedAmount) * -1;\n        this.orderList[index].payment_status = \"under\";\n\n        for (let i = 0; i < this.orderList.length; i++) {\n          if (this.orderList[i].payment != this.orderList[index].payment && this.orderList[i].payment != 0) {\n            this.orderList[i].payment_status = \"completed\";\n          }\n        }\n      }\n      else if (this.ammountReceivedValue - this.tickedAmount == 0) {\n        this.showPaymentMessage = false;\n\n        for (let i = 0; i < this.orderList.length; i++) {\n          if (!this.orderList[i].checked) {\n            this.orderList[i].disabled = true;\n          }\n        }\n      }\n      else {\n        this.amountRecievedMessage = \"Over payment for invoice number \" + (lastCheckedIndex + 1);\n        this.calculatedReceivedAmount = (this.ammountReceivedValue - this.tickedAmount);\n        this.orderList[index].payment_status = \"over\";\n\n        for (let i = 0; i < this.orderList.length; i++) {\n          if (this.orderList[i].payment != this.orderList[index].payment && this.orderList[i].payment != 0) {\n            this.orderList[i].payment_status = \"completed\";\n          }\n        }\n      }\n\n      for (let i = 0; i < this.orderList.length; i++) {\n        this.orderList[i].disabled = false;\n      }\n    }\n  }\n\n\n  uncheckAll() {\n    this.showPaymentMessage = false;\n    this.showClearPaymentButton = false;\n\n    this.calculatedReceivedAmount = 0;\n    this.tickedAmount = 0;\n\n    for (let i = 0; i < this.orderList.length; i++) {\n      this.orderList[i].checked = false;\n      this.orderList[i].disabled = false;\n      this.orderList[i].payment = 0;\n    }\n  }\n\n\n  onAmountChange() {\n    this.showPaymentMessage = false;\n    this.showClearPaymentButton = false;\n    this.calculatedReceivedAmount = 0;\n    this.tickedAmount = 0;\n\n    for (let i = 0; i < this.orderList.length; i++) {\n      this.orderList[i].checked = false;\n      this.orderList[i].disabled = true;\n      this.orderList[i].payment = 0;\n    }\n  }\n\n\n  goPreviousUrl() {\n    this.location.back();\n  }\n\n\n  exportCsv() {\n    this.paymentReceivedService.displayorder(this.datatableParams).subscribe(response => {\n      let resData = JSON.parse(JSON.stringify(response));\n\n      if (resData.status_code == 200) {\n        const onlyNameAndSymbolArr = resData.data.allorder.map(x => ({\n          \"Order Date\": this.datePipe.transform(x.created_at, 'MM-dd-yyyy') || \"-\",\n          \"Invoice No#\": x.invoice_no || \"-\",\n          \"Payment Due Date\": this.datePipe.transform(x.due_date, 'MM-dd-yyyy') || \"-\",\n          \"Order Amount\": x.amount ? \"$\" + parseFloat(x.amount).toFixed(2) : \"$0.00\",\n          \"Payment Amount Received\": x.amount_recieved ? \"$\" + parseFloat(x.amount_recieved).toFixed(2) : \"$0.00\",\n          \"Open Balance\": x.open_balance ? \"$\" + parseFloat(x.open_balance).toFixed(2) : \"$0.00\"\n        }));\n        this.commonService.exportCsv(resData.data.allorder, onlyNameAndSymbolArr, 'paymentRecievedList');\n\n      } else {\n        this.toastr.error('', resData.message);\n      }\n    },\n      err => {\n        this.toastr.error('', err.error.message);\n      });\n  }\n}\n"],"sourceRoot":"webpack:///"}